<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Enfield: include/enfield/Transform/CircuitGraph.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Enfield
   </div>
   <div id="projectbrief">An OpenQASM source-to-source compiler for optimization.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="../../dir_ca9ae9fc199b7939600155691e280c84.xhtml">enfield</a></li><li class="navelem"><a class="el" href="../../dir_15dbf64d7f9e9589da7a7339d5165684.xhtml">Transform</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">CircuitGraph.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../df/da6/CircuitGraph_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">ifndef</span> <span class="preprocessor">__EFD_CIRCUIT_GRAPH_H__</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">define</span> <span class="preprocessor">__EFD_CIRCUIT_GRAPH_H__</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&quot;enfield/Analysis/Nodes.h&quot;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&lt;</span><span class="preprocessor">unordered_map</span><span class="preprocessor">&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">namespace</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a> {</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;    <span class="comment">/// \brief Represents the id of one Quantum or Classical bit.</span></div><div class="line"><a name="l00010"></a><span class="lineno"><a class="line" href="../../d9/d6b/classefd_1_1Xbit.xhtml">   10</a></span>&#160;    <span class="keyword">class</span> <a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml">Xbit</a> {</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;        <span class="keyword">public</span>:</div><div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="../../d9/d6b/classefd_1_1Xbit.xhtml#a13b121ed4c082b98ee5cdac12429577f">   12</a></span>&#160;            <span class="keyword">enum</span> <span class="keyword">class</span> <a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml#a13b121ed4c082b98ee5cdac12429577f">Type</a> { <a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml#a13b121ed4c082b98ee5cdac12429577fa3868cb471bc4ffd9ae593b9ab53741ce">QUANTUM</a>, <a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml#a13b121ed4c082b98ee5cdac12429577fa21994d6177b29e1128b2d7f0f8342057">CLASSIC</a> };</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="../../d9/d6b/classefd_1_1Xbit.xhtml#ab6163798ecfc766e5a16ebba26c65d87">   14</a></span>&#160;            <a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml#a13b121ed4c082b98ee5cdac12429577f">Type</a> <a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml#ab6163798ecfc766e5a16ebba26c65d87">mType</a>;</div><div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="../../d9/d6b/classefd_1_1Xbit.xhtml#af89a446459ac38a13b6d8fa4d53ce698">   15</a></span>&#160;            uint32_t <a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml#af89a446459ac38a13b6d8fa4d53ce698">mId</a>;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;        <span class="keyword">private</span>:</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;            Xbit(<a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml#a13b121ed4c082b98ee5cdac12429577f">Type</a> t, uint32_t id);</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;        <span class="keyword">public</span>:</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;            <span class="comment">/// \brief Gets the real id for this bit.</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;            <span class="comment">///</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;            <span class="comment">/// If it is a classical bit, we sum \p qubits to it. </span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;            uint32_t <a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml#ad18f73714ed4aa4fe239a210280e7519">getRealId</a>(uint32_t qubits, uint32_t cbits);</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;            <span class="comment">/// \brief Creates a quantum \p Xbit with \p id.</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            <span class="keyword">static</span> <a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml">Xbit</a> <a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml#a9bc4937fc867235e1e7867529aee20e3">Q</a>(uint32_t id);</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;            <span class="comment">/// \brief Creates a classical \p Xbit with \p id.</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            <span class="keyword">static</span> <a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml">Xbit</a> <a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml#a4cddd18c9e4ec4f08b28d1c3a81f67cc">C</a>(uint32_t id);</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    };</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="comment">/// \brief The Circuit representation of the \em QModule.</span></div><div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="../../d0/d54/classefd_1_1CircuitGraph.xhtml">   33</a></span>&#160;    <span class="keyword">class</span> <a class="code" href="../../d0/d54/classefd_1_1CircuitGraph.xhtml">CircuitGraph</a> {</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <span class="keyword">public</span>:</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            <span class="comment">/// \brief Representation of a quantum operation.</span></div><div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml">   36</a></span>&#160;            <span class="keyword">struct</span> <a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml">CircuitNode</a> {</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                <span class="keyword">public</span>:</div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#ab2bb698765564a06b07327ad0d49d3c0">   38</a></span>&#160;                    <span class="keyword">typedef</span> <a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml">CircuitNode</a>* <a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#ab2bb698765564a06b07327ad0d49d3c0">Ref</a>;</div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#a31a30a4b67ebe18ae1396f8c7f47605b">   39</a></span>&#160;                    <span class="keyword">typedef</span> <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::unique_ptr&lt;<a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml">CircuitNode</a>&gt; <a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#a31a30a4b67ebe18ae1396f8c7f47605b">uRef</a>;</div><div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#a83679503f90a0bda804bc7d462ce44b9">   40</a></span>&#160;                    <span class="keyword">typedef</span> <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::shared_ptr&lt;<a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml">CircuitNode</a>&gt; <a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#a83679503f90a0bda804bc7d462ce44b9">sRef</a>;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                <span class="keyword">private</span>:</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                    <span class="keyword">enum</span> <span class="keyword">class</span> Type { INPUT, OUTPUT, GATE };</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                    Type mType;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">Ref</a> mNode;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                    <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::unordered_map</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                        &lt;uint32_t, <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::pair&lt;<a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml">CircuitNode</a>::<a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#a83679503f90a0bda804bc7d462ce44b9">sRef</a>, <a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml">CircuitNode</a>::<a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#a83679503f90a0bda804bc7d462ce44b9">sRef</a>&gt;&gt;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                        mStepMap;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                    CircuitNode(Type type);</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                <span class="keyword">public</span>:</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                    <span class="comment">/// \brief Returns the \em Node::Ref associated with this circuit node.</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">Ref</a> <a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#a748e8cd12225a2d0268e84979726cd03">node</a>();</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                    <span class="comment">/// \brief Returns the number of \p Xbit&#39;s in this node.</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                    uint32_t <a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#acdd2fff3b8fbce45bf0fd84efab71ab1">numberOfXbits</a>();</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                    <span class="comment">/// \brief True if this node has reached the end (output node).</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                    <span class="keywordtype">bool</span> <a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#a05bee78f4954f7ac4bab2e16f99dc26c">isOutputNode</a>();</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                    <span class="comment">/// \brief True if this node is in the beginning (input node).</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                    <span class="keywordtype">bool</span> <a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#a08725ecabe57a0f5aa58ca11f1b9fce6">isInputNode</a>();</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                    <span class="comment">/// \brief True if this node is in the middle (gate node).</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                    <span class="keywordtype">bool</span> <a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#a3dd251562e11352a1e7dbaf93e5e9960">isGateNode</a>();</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                    <span class="comment">/// \brief Returns the \p Xbit ID&#39;s in this node.</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                    <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::vector&lt;uint32_t&gt; <a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#a84ee9721cbab55494c64d6d1d66eada8">getXbitsIds</a>();</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#a3479a84ca70f304a9db7a218d1fb2c5a">   70</a></span>&#160;                    <span class="keyword">friend</span> <span class="keyword">class</span> <a class="code" href="../../d7/d0b/classefd_1_1CircuitGraph_1_1Iterator.xhtml#a3479a84ca70f304a9db7a218d1fb2c5a">CircuitGraph</a>;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            };</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="keyword">private</span>:</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            <span class="keywordtype">bool</span> mInit;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            uint32_t mQubits;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            uint32_t mCbits;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::vector&lt;<a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml">CircuitNode</a>::<a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#a83679503f90a0bda804bc7d462ce44b9">sRef</a>&gt; mGraphHead;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::vector&lt;<a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml">CircuitNode</a>::<a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#a83679503f90a0bda804bc7d462ce44b9">sRef</a>&gt; mGraphTail;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keyword">public</span>:</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            <span class="comment">/// \brief Abstracts the iteration of the \em CircuitGraph.</span></div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="../../d7/d0b/classefd_1_1CircuitGraph_1_1Iterator.xhtml">   82</a></span>&#160;            <span class="keyword">class</span> <a class="code" href="../../d7/d0b/classefd_1_1CircuitGraph_1_1Iterator.xhtml">Iterator</a> {</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                <span class="keyword">private</span>:</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                    uint32_t mQubits;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                    uint32_t mCbits;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                    <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::vector&lt;<a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml">CircuitNode</a>::<a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#a83679503f90a0bda804bc7d462ce44b9">sRef</a>&gt; mPtr;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                    Iterator(uint32_t qubits,</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                             uint32_t cbits,</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                             <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::vector&lt;<a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml">CircuitNode</a>::<a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#a83679503f90a0bda804bc7d462ce44b9">sRef</a>&gt; ptr);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                <span class="keyword">public</span>:</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                    <a class="code" href="../../d7/d0b/classefd_1_1CircuitGraph_1_1Iterator.xhtml#ad3450c7013470df578939f983c558328">Iterator</a>();</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                    <span class="comment">/// \brief Advances the bit \p xbit.</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                    <span class="keywordtype">bool</span> <a class="code" href="../../d7/d0b/classefd_1_1CircuitGraph_1_1Iterator.xhtml#a53e088602bfc10b1de2a681b93cff134">next</a>(<a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml">Xbit</a> xbit);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                    <span class="keywordtype">bool</span> <a class="code" href="../../d7/d0b/classefd_1_1CircuitGraph_1_1Iterator.xhtml#aeee56d067ea9d2ef87f882279492a528">next</a>(uint32_t id);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                    <span class="comment">/// \brief Retreats the bit \p xbit.</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                    <span class="keywordtype">bool</span> <a class="code" href="../../d7/d0b/classefd_1_1CircuitGraph_1_1Iterator.xhtml#a9ae456de79d15ee0e3ead5bbbcdd86d7">back</a>(<a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml">Xbit</a> xbit);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                    <span class="keywordtype">bool</span> <a class="code" href="../../d7/d0b/classefd_1_1CircuitGraph_1_1Iterator.xhtml#a2683f5b8000598f30388af47fe5b41f8">back</a>(uint32_t id);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                    <span class="comment">/// \brief Returns the \p Node::Ref for the bit \p xbit.</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">Ref</a> <a class="code" href="../../d7/d0b/classefd_1_1CircuitGraph_1_1Iterator.xhtml#a4573ec769c6a22440631c26ca3bc27cc">get</a>(<a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml">Xbit</a> xbit);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">Ref</a> <a class="code" href="../../d7/d0b/classefd_1_1CircuitGraph_1_1Iterator.xhtml#a41584891e4e2e437b54525fa6b544d6d">get</a>(uint32_t id);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                    <a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml">CircuitNode</a>::<a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#a83679503f90a0bda804bc7d462ce44b9">sRef</a> <a class="code" href="../../d7/d0b/classefd_1_1CircuitGraph_1_1Iterator.xhtml#acfeb22b7dd457c5c040e1d89e04c1127">operator</a>[](<a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml">Xbit</a> xbit);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                    <a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml">CircuitNode</a>::<a class="code" href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#a83679503f90a0bda804bc7d462ce44b9">sRef</a> <a class="code" href="../../d7/d0b/classefd_1_1CircuitGraph_1_1Iterator.xhtml#af67b0dc3050162bf837a9b5c18fe27e3">operator</a>[](uint32_t id);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="../../d7/d0b/classefd_1_1CircuitGraph_1_1Iterator.xhtml#a3479a84ca70f304a9db7a218d1fb2c5a">  108</a></span>&#160;                    <span class="keyword">friend</span> <span class="keyword">class</span> <a class="code" href="../../d7/d0b/classefd_1_1CircuitGraph_1_1Iterator.xhtml#a3479a84ca70f304a9db7a218d1fb2c5a">CircuitGraph</a>;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            };</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            <a class="code" href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#a558c815f376b673ceebd379241d4cda1">CircuitGraph</a>();</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            <a class="code" href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#a7a9963889387955f703d14a3a93883bc">CircuitGraph</a>(uint32_t qubits, uint32_t cbits);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            <span class="comment">/// \brief Initializes the CircuitGraph.</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#aacac1809d4af7ea1b82d9dd24661360c">init</a>(uint32_t qubits, uint32_t cbits);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            <span class="comment">/// \brief Checks if the CircuitGraph is initialized. Exits with error if not.</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#a3b7cd29688c62411a7e561599a1dcbcb">checkInitialized</a>();</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            <span class="comment">/// \brief Returns the number of qubits.</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            uint32_t <a class="code" href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#adcb4c92728654114aa63ba37f853bac5">getQSize</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            <span class="comment">/// \brief Returns the number of cbits.</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            uint32_t <a class="code" href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#afccd427dbf207e52f0865b9cb10836f6">getCSize</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            <span class="comment">/// \brief Returns the number of bits.</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            uint32_t <a class="code" href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#af5bed18e4c713957e30e7c11d0995da1">size</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            <span class="comment">/// \brief Appends a node to the bits \p xbits.</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#a55b28f16e4da779c944ca4ab5ef07d95">append</a>(<a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::vector&lt;<a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml">Xbit</a>&gt; xbits, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">Ref</a> node);</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            <span class="comment">/// \brief Builds an iterator instance for this \p CircuitGraph.</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            <a class="code" href="../../d7/d0b/classefd_1_1CircuitGraph_1_1Iterator.xhtml">Iterator</a> <a class="code" href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#ad1dbcb28dda3121f795a74944927de4a">build_iterator</a>();</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    };</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;}</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">endif</span></div><div class="ttc" id="classefd_1_1CircuitGraph_1_1Iterator_xhtml_ad3450c7013470df578939f983c558328"><div class="ttname"><a href="../../d7/d0b/classefd_1_1CircuitGraph_1_1Iterator.xhtml#ad3450c7013470df578939f983c558328">efd::CircuitGraph::Iterator::Iterator</a></div><div class="ttdeci">Iterator()</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00093">CircuitGraph.cpp:93</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraph_1_1Iterator_xhtml_a4573ec769c6a22440631c26ca3bc27cc"><div class="ttname"><a href="../../d7/d0b/classefd_1_1CircuitGraph_1_1Iterator.xhtml#a4573ec769c6a22440631c26ca3bc27cc">efd::CircuitGraph::Iterator::get</a></div><div class="ttdeci">Node::Ref get(Xbit xbit)</div><div class="ttdoc">Returns the Node::Ref for the bit xbit. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00121">CircuitGraph.cpp:121</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraph_xhtml_a3b7cd29688c62411a7e561599a1dcbcb"><div class="ttname"><a href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#a3b7cd29688c62411a7e561599a1dcbcb">efd::CircuitGraph::checkInitialized</a></div><div class="ttdeci">void checkInitialized()</div><div class="ttdoc">Checks if the CircuitGraph is initialized. Exits with error if not. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00162">CircuitGraph.cpp:162</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraph_1_1Iterator_xhtml_af67b0dc3050162bf837a9b5c18fe27e3"><div class="ttname"><a href="../../d7/d0b/classefd_1_1CircuitGraph_1_1Iterator.xhtml#af67b0dc3050162bf837a9b5c18fe27e3">efd::CircuitGraph::Iterator::operator[]</a></div><div class="ttdeci">CircuitNode::sRef operator[](uint32_t id)</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00126">CircuitGraph.cpp:126</a></div></div>
<div class="ttc" id="structefd_1_1CircuitGraph_1_1CircuitNode_xhtml_acdd2fff3b8fbce45bf0fd84efab71ab1"><div class="ttname"><a href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#acdd2fff3b8fbce45bf0fd84efab71ab1">efd::CircuitGraph::CircuitNode::numberOfXbits</a></div><div class="ttdeci">uint32_t numberOfXbits()</div><div class="ttdoc">Returns the number of Xbit&amp;#39;s in this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00057">CircuitGraph.cpp:57</a></div></div>
<div class="ttc" id="structefd_1_1CircuitGraph_1_1CircuitNode_xhtml_a84ee9721cbab55494c64d6d1d66eada8"><div class="ttname"><a href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#a84ee9721cbab55494c64d6d1d66eada8">efd::CircuitGraph::CircuitNode::getXbitsIds</a></div><div class="ttdeci">std::vector&lt; uint32_t &gt; getXbitsIds()</div><div class="ttdoc">Returns the Xbit ID&amp;#39;s in this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00073">CircuitGraph.cpp:73</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraph_1_1Iterator_xhtml_acfeb22b7dd457c5c040e1d89e04c1127"><div class="ttname"><a href="../../d7/d0b/classefd_1_1CircuitGraph_1_1Iterator.xhtml#acfeb22b7dd457c5c040e1d89e04c1127">efd::CircuitGraph::Iterator::operator[]</a></div><div class="ttdeci">CircuitNode::sRef operator[](Xbit xbit)</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00130">CircuitGraph.cpp:130</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraph_xhtml_a558c815f376b673ceebd379241d4cda1"><div class="ttname"><a href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#a558c815f376b673ceebd379241d4cda1">efd::CircuitGraph::CircuitGraph</a></div><div class="ttdeci">CircuitGraph()</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00139">CircuitGraph.cpp:139</a></div></div>
<div class="ttc" id="classefd_1_1Xbit_xhtml_a4cddd18c9e4ec4f08b28d1c3a81f67cc"><div class="ttname"><a href="../../d9/d6b/classefd_1_1Xbit.xhtml#a4cddd18c9e4ec4f08b28d1c3a81f67cc">efd::Xbit::C</a></div><div class="ttdeci">static Xbit C(uint32_t id)</div><div class="ttdoc">Creates a classical Xbit with id. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00043">CircuitGraph.cpp:43</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraph_xhtml_a55b28f16e4da779c944ca4ab5ef07d95"><div class="ttname"><a href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#a55b28f16e4da779c944ca4ab5ef07d95">efd::CircuitGraph::append</a></div><div class="ttdeci">void append(std::vector&lt; Xbit &gt; xbits, Node::Ref node)</div><div class="ttdoc">Appends a node to the bits xbits. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00181">CircuitGraph.cpp:181</a></div></div>
<div class="ttc" id="classefd_1_1Xbit_xhtml_ad18f73714ed4aa4fe239a210280e7519"><div class="ttname"><a href="../../d9/d6b/classefd_1_1Xbit.xhtml#ad18f73714ed4aa4fe239a210280e7519">efd::Xbit::getRealId</a></div><div class="ttdeci">uint32_t getRealId(uint32_t qubits, uint32_t cbits)</div><div class="ttdoc">Gets the real id for this bit. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00014">CircuitGraph.cpp:14</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraph_xhtml_afccd427dbf207e52f0865b9cb10836f6"><div class="ttname"><a href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#afccd427dbf207e52f0865b9cb10836f6">efd::CircuitGraph::getCSize</a></div><div class="ttdeci">uint32_t getCSize() const</div><div class="ttdoc">Returns the number of cbits. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00173">CircuitGraph.cpp:173</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraph_1_1Iterator_xhtml_a9ae456de79d15ee0e3ead5bbbcdd86d7"><div class="ttname"><a href="../../d7/d0b/classefd_1_1CircuitGraph_1_1Iterator.xhtml#a9ae456de79d15ee0e3ead5bbbcdd86d7">efd::CircuitGraph::Iterator::back</a></div><div class="ttdeci">bool back(Xbit xbit)</div><div class="ttdoc">Retreats the bit xbit. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00112">CircuitGraph.cpp:112</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraph_1_1Iterator_xhtml_a41584891e4e2e437b54525fa6b544d6d"><div class="ttname"><a href="../../d7/d0b/classefd_1_1CircuitGraph_1_1Iterator.xhtml#a41584891e4e2e437b54525fa6b544d6d">efd::CircuitGraph::Iterator::get</a></div><div class="ttdeci">Node::Ref get(uint32_t id)</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00117">CircuitGraph.cpp:117</a></div></div>
<div class="ttc" id="namespaceefd_xhtml"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml">efd</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00012">Nodes.h:12</a></div></div>
<div class="ttc" id="classefd_1_1Xbit_xhtml_a13b121ed4c082b98ee5cdac12429577f"><div class="ttname"><a href="../../d9/d6b/classefd_1_1Xbit.xhtml#a13b121ed4c082b98ee5cdac12429577f">efd::Xbit::Type</a></div><div class="ttdeci">Type</div><div class="ttdef"><b>Definition:</b> <a href="../../df/da6/CircuitGraph_8h_source.xhtml#l00012">CircuitGraph.h:12</a></div></div>
<div class="ttc" id="classefd_1_1Xbit_xhtml_a13b121ed4c082b98ee5cdac12429577fa21994d6177b29e1128b2d7f0f8342057"><div class="ttname"><a href="../../d9/d6b/classefd_1_1Xbit.xhtml#a13b121ed4c082b98ee5cdac12429577fa21994d6177b29e1128b2d7f0f8342057">efd::Xbit::Type::CLASSIC</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a64f9421919034b63bbf5b014c2de4130"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">efd::Node::Ref</a></div><div class="ttdeci">Node * Ref</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00041">Nodes.h:41</a></div></div>
<div class="ttc" id="namespacestd_xhtml"><div class="ttname"><a href="../../d8/dcc/namespacestd.xhtml">std</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d2e/WrapperVal_8h_source.xhtml#l00048">WrapperVal.h:48</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraph_xhtml_adcb4c92728654114aa63ba37f853bac5"><div class="ttname"><a href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#adcb4c92728654114aa63ba37f853bac5">efd::CircuitGraph::getQSize</a></div><div class="ttdeci">uint32_t getQSize() const</div><div class="ttdoc">Returns the number of qubits. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00169">CircuitGraph.cpp:169</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml">efd::Node</a></div><div class="ttdoc">Base class for AST nodes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00039">Nodes.h:39</a></div></div>
<div class="ttc" id="structefd_1_1CircuitGraph_1_1CircuitNode_xhtml_a83679503f90a0bda804bc7d462ce44b9"><div class="ttname"><a href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#a83679503f90a0bda804bc7d462ce44b9">efd::CircuitGraph::CircuitNode::sRef</a></div><div class="ttdeci">std::shared_ptr&lt; CircuitNode &gt; sRef</div><div class="ttdef"><b>Definition:</b> <a href="../../df/da6/CircuitGraph_8h_source.xhtml#l00040">CircuitGraph.h:40</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraph_xhtml_aacac1809d4af7ea1b82d9dd24661360c"><div class="ttname"><a href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#aacac1809d4af7ea1b82d9dd24661360c">efd::CircuitGraph::init</a></div><div class="ttdeci">void init(uint32_t qubits, uint32_t cbits)</div><div class="ttdoc">Initializes the CircuitGraph. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00145">CircuitGraph.cpp:145</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraph_xhtml"><div class="ttname"><a href="../../d0/d54/classefd_1_1CircuitGraph.xhtml">efd::CircuitGraph</a></div><div class="ttdoc">The Circuit representation of the QModule. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/da6/CircuitGraph_8h_source.xhtml#l00033">CircuitGraph.h:33</a></div></div>
<div class="ttc" id="structefd_1_1CircuitGraph_1_1CircuitNode_xhtml"><div class="ttname"><a href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml">efd::CircuitGraph::CircuitNode</a></div><div class="ttdoc">Representation of a quantum operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/da6/CircuitGraph_8h_source.xhtml#l00036">CircuitGraph.h:36</a></div></div>
<div class="ttc" id="structefd_1_1CircuitGraph_1_1CircuitNode_xhtml_a05bee78f4954f7ac4bab2e16f99dc26c"><div class="ttname"><a href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#a05bee78f4954f7ac4bab2e16f99dc26c">efd::CircuitGraph::CircuitNode::isOutputNode</a></div><div class="ttdeci">bool isOutputNode()</div><div class="ttdoc">True if this node has reached the end (output node). </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00061">CircuitGraph.cpp:61</a></div></div>
<div class="ttc" id="classefd_1_1Xbit_xhtml_a13b121ed4c082b98ee5cdac12429577fa3868cb471bc4ffd9ae593b9ab53741ce"><div class="ttname"><a href="../../d9/d6b/classefd_1_1Xbit.xhtml#a13b121ed4c082b98ee5cdac12429577fa3868cb471bc4ffd9ae593b9ab53741ce">efd::Xbit::Type::QUANTUM</a></div></div>
<div class="ttc" id="structefd_1_1CircuitGraph_1_1CircuitNode_xhtml_ab2bb698765564a06b07327ad0d49d3c0"><div class="ttname"><a href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#ab2bb698765564a06b07327ad0d49d3c0">efd::CircuitGraph::CircuitNode::Ref</a></div><div class="ttdeci">CircuitNode * Ref</div><div class="ttdef"><b>Definition:</b> <a href="../../df/da6/CircuitGraph_8h_source.xhtml#l00038">CircuitGraph.h:38</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraph_1_1Iterator_xhtml_a3479a84ca70f304a9db7a218d1fb2c5a"><div class="ttname"><a href="../../d7/d0b/classefd_1_1CircuitGraph_1_1Iterator.xhtml#a3479a84ca70f304a9db7a218d1fb2c5a">efd::CircuitGraph::Iterator::CircuitGraph</a></div><div class="ttdeci">friend class CircuitGraph</div><div class="ttdef"><b>Definition:</b> <a href="../../df/da6/CircuitGraph_8h_source.xhtml#l00108">CircuitGraph.h:108</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraph_1_1Iterator_xhtml_aeee56d067ea9d2ef87f882279492a528"><div class="ttname"><a href="../../d7/d0b/classefd_1_1CircuitGraph_1_1Iterator.xhtml#aeee56d067ea9d2ef87f882279492a528">efd::CircuitGraph::Iterator::next</a></div><div class="ttdeci">bool next(uint32_t id)</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00095">CircuitGraph.cpp:95</a></div></div>
<div class="ttc" id="classefd_1_1Xbit_xhtml_a9bc4937fc867235e1e7867529aee20e3"><div class="ttname"><a href="../../d9/d6b/classefd_1_1Xbit.xhtml#a9bc4937fc867235e1e7867529aee20e3">efd::Xbit::Q</a></div><div class="ttdeci">static Xbit Q(uint32_t id)</div><div class="ttdoc">Creates a quantum Xbit with id. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00039">CircuitGraph.cpp:39</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraph_1_1Iterator_xhtml_a2683f5b8000598f30388af47fe5b41f8"><div class="ttname"><a href="../../d7/d0b/classefd_1_1CircuitGraph_1_1Iterator.xhtml#a2683f5b8000598f30388af47fe5b41f8">efd::CircuitGraph::Iterator::back</a></div><div class="ttdeci">bool back(uint32_t id)</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00106">CircuitGraph.cpp:106</a></div></div>
<div class="ttc" id="structefd_1_1CircuitGraph_1_1CircuitNode_xhtml_a31a30a4b67ebe18ae1396f8c7f47605b"><div class="ttname"><a href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#a31a30a4b67ebe18ae1396f8c7f47605b">efd::CircuitGraph::CircuitNode::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; CircuitNode &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../df/da6/CircuitGraph_8h_source.xhtml#l00039">CircuitGraph.h:39</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraph_xhtml_af5bed18e4c713957e30e7c11d0995da1"><div class="ttname"><a href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#af5bed18e4c713957e30e7c11d0995da1">efd::CircuitGraph::size</a></div><div class="ttdeci">uint32_t size() const</div><div class="ttdoc">Returns the number of bits. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00177">CircuitGraph.cpp:177</a></div></div>
<div class="ttc" id="classefd_1_1Xbit_xhtml_ab6163798ecfc766e5a16ebba26c65d87"><div class="ttname"><a href="../../d9/d6b/classefd_1_1Xbit.xhtml#ab6163798ecfc766e5a16ebba26c65d87">efd::Xbit::mType</a></div><div class="ttdeci">Type mType</div><div class="ttdef"><b>Definition:</b> <a href="../../df/da6/CircuitGraph_8h_source.xhtml#l00014">CircuitGraph.h:14</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraph_1_1Iterator_xhtml_a53e088602bfc10b1de2a681b93cff134"><div class="ttname"><a href="../../d7/d0b/classefd_1_1CircuitGraph_1_1Iterator.xhtml#a53e088602bfc10b1de2a681b93cff134">efd::CircuitGraph::Iterator::next</a></div><div class="ttdeci">bool next(Xbit xbit)</div><div class="ttdoc">Advances the bit xbit. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00101">CircuitGraph.cpp:101</a></div></div>
<div class="ttc" id="classefd_1_1Xbit_xhtml_af89a446459ac38a13b6d8fa4d53ce698"><div class="ttname"><a href="../../d9/d6b/classefd_1_1Xbit.xhtml#af89a446459ac38a13b6d8fa4d53ce698">efd::Xbit::mId</a></div><div class="ttdeci">uint32_t mId</div><div class="ttdef"><b>Definition:</b> <a href="../../df/da6/CircuitGraph_8h_source.xhtml#l00015">CircuitGraph.h:15</a></div></div>
<div class="ttc" id="structefd_1_1CircuitGraph_1_1CircuitNode_xhtml_a748e8cd12225a2d0268e84979726cd03"><div class="ttname"><a href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#a748e8cd12225a2d0268e84979726cd03">efd::CircuitGraph::CircuitNode::node</a></div><div class="ttdeci">Node::Ref node()</div><div class="ttdoc">Returns the Node::Ref associated with this circuit node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00053">CircuitGraph.cpp:53</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraph_xhtml_a7a9963889387955f703d14a3a93883bc"><div class="ttname"><a href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#a7a9963889387955f703d14a3a93883bc">efd::CircuitGraph::CircuitGraph</a></div><div class="ttdeci">CircuitGraph(uint32_t qubits, uint32_t cbits)</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00141">CircuitGraph.cpp:141</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraph_xhtml_ad1dbcb28dda3121f795a74944927de4a"><div class="ttname"><a href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#ad1dbcb28dda3121f795a74944927de4a">efd::CircuitGraph::build_iterator</a></div><div class="ttdeci">Iterator build_iterator()</div><div class="ttdoc">Builds an iterator instance for this CircuitGraph. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00197">CircuitGraph.cpp:197</a></div></div>
<div class="ttc" id="structefd_1_1CircuitGraph_1_1CircuitNode_xhtml_a3dd251562e11352a1e7dbaf93e5e9960"><div class="ttname"><a href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#a3dd251562e11352a1e7dbaf93e5e9960">efd::CircuitGraph::CircuitNode::isGateNode</a></div><div class="ttdeci">bool isGateNode()</div><div class="ttdoc">True if this node is in the middle (gate node). </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00069">CircuitGraph.cpp:69</a></div></div>
<div class="ttc" id="structefd_1_1CircuitGraph_1_1CircuitNode_xhtml_a08725ecabe57a0f5aa58ca11f1b9fce6"><div class="ttname"><a href="../../d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml#a08725ecabe57a0f5aa58ca11f1b9fce6">efd::CircuitGraph::CircuitNode::isInputNode</a></div><div class="ttdeci">bool isInputNode()</div><div class="ttdoc">True if this node is in the beginning (input node). </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00065">CircuitGraph.cpp:65</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraph_1_1Iterator_xhtml"><div class="ttname"><a href="../../d7/d0b/classefd_1_1CircuitGraph_1_1Iterator.xhtml">efd::CircuitGraph::Iterator</a></div><div class="ttdoc">Abstracts the iteration of the CircuitGraph. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/da6/CircuitGraph_8h_source.xhtml#l00082">CircuitGraph.h:82</a></div></div>
<div class="ttc" id="classefd_1_1Xbit_xhtml"><div class="ttname"><a href="../../d9/d6b/classefd_1_1Xbit.xhtml">efd::Xbit</a></div><div class="ttdoc">Represents the id of one Quantum or Classical bit. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/da6/CircuitGraph_8h_source.xhtml#l00010">CircuitGraph.h:10</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue May 1 2018 23:33:45 for Enfield by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
