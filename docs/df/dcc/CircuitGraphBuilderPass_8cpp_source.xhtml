<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Enfield: lib/Transform/CircuitGraphBuilderPass.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Enfield
   </div>
   <div id="projectbrief">An OpenQASM source-to-source compiler for optimization.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_97aefd0d527b934f1d99a682da8fe6a9.xhtml">lib</a></li><li class="navelem"><a class="el" href="../../dir_582f290f049f08c25ab9fc887a9170ac.xhtml">Transform</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">CircuitGraphBuilderPass.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../df/dcc/CircuitGraphBuilderPass_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&quot;enfield/Transform/CircuitGraphBuilderPass.h&quot;</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&quot;enfield/Transform/XbitToNumberPass.h&quot;</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&quot;enfield/Transform/PassCache.h&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&quot;enfield/Support/RTTI.h&quot;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">using</span> <span class="keyword">namespace</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;uint8_t <a class="code" href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml">CircuitGraphBuilderPass</a>::<a class="code" href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml#a702eb3f5f4a8f8ed84a03429c9daa2cc">ID</a> = 0;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno"><a class="line" href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml#a178f61890593d8d7e10c675725e371be">   10</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml">CircuitGraphBuilderPass</a>::<a class="code" href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml#a178f61890593d8d7e10c675725e371be">run</a>(<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>* qmod) {</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;    <span class="keyword">auto</span>&amp; graph = mData;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    <span class="keyword">auto</span> xtonpass = <a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml">PassCache</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a8c54d0a438f35de5629ae78c886687a8">::</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a8c54d0a438f35de5629ae78c886687a8">Get</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a8c54d0a438f35de5629ae78c886687a8">&lt;</a><a class="code" href="../../de/d2b/classefd_1_1XbitToNumberWrapperPass.xhtml">XbitToNumberWrapperPass</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a8c54d0a438f35de5629ae78c886687a8">&gt;</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a8c54d0a438f35de5629ae78c886687a8">(</a>qmod<a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a8c54d0a438f35de5629ae78c886687a8">)</a>;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    <span class="keyword">auto</span> xton = xtonpass<a class="code" href="../../db/d56/classefd_1_1PassT.xhtml#aae3442c1486bcec7622a64451262d684">-&gt;</a><a class="code" href="../../db/d56/classefd_1_1PassT.xhtml#aae3442c1486bcec7622a64451262d684">getData</a><a class="code" href="../../db/d56/classefd_1_1PassT.xhtml#aae3442c1486bcec7622a64451262d684">(</a><a class="code" href="../../db/d56/classefd_1_1PassT.xhtml#aae3442c1486bcec7622a64451262d684">)</a>;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    <span class="keyword">auto</span> qubits = xton<a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ab395508705fe60ed3bd0cfb28eb5ffc6">.</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ab395508705fe60ed3bd0cfb28eb5ffc6">getQSize</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ab395508705fe60ed3bd0cfb28eb5ffc6">(</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ab395508705fe60ed3bd0cfb28eb5ffc6">)</a>;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <span class="keyword">auto</span> cbits = xton<a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#aee01f34943dd3c3afa794cb45815268f">.</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#aee01f34943dd3c3afa794cb45815268f">getCSize</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#aee01f34943dd3c3afa794cb45815268f">(</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#aee01f34943dd3c3afa794cb45815268f">)</a>;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    graph<a class="code" href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#aacac1809d4af7ea1b82d9dd24661360c">.</a><a class="code" href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#aacac1809d4af7ea1b82d9dd24661360c">init</a><a class="code" href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#aacac1809d4af7ea1b82d9dd24661360c">(</a>qubits<a class="code" href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#aacac1809d4af7ea1b82d9dd24661360c">,</a> cbits<a class="code" href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#aacac1809d4af7ea1b82d9dd24661360c">)</a>;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> it = qmod<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#ac00e1eb93f94c00db1e6a661d8f95d9d">-&gt;</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#ac00e1eb93f94c00db1e6a661d8f95d9d">stmt_begin</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#ac00e1eb93f94c00db1e6a661d8f95d9d">(</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#ac00e1eb93f94c00db1e6a661d8f95d9d">)</a>, e = qmod<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a23d45e3b6c65d5fa14b199da8b0617c7">-&gt;</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a23d45e3b6c65d5fa14b199da8b0617c7">stmt_end</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a23d45e3b6c65d5fa14b199da8b0617c7">(</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a23d45e3b6c65d5fa14b199da8b0617c7">)</a>; it != e; ++it) {</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;        <span class="keyword">auto</span> node = it-&gt;get();</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;        <span class="keyword">auto</span> qop = <a class="code" href="../../d4/deb/namespaceefd.xhtml#a2cef687225e13315fc282dc40b5a6909">dynCast</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a2cef687225e13315fc282dc40b5a6909">&lt;</a><a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml">NDQOp</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a2cef687225e13315fc282dc40b5a6909">&gt;</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a2cef687225e13315fc282dc40b5a6909">(</a>node<a class="code" href="../../d4/deb/namespaceefd.xhtml#a2cef687225e13315fc282dc40b5a6909">)</a>;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::vector&lt;<a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml">Xbit</a>&gt; xbits;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        <span class="keywordflow">if</span> (<span class="keyword">auto</span> ifstmt = <a class="code" href="../../d4/deb/namespaceefd.xhtml#a2cef687225e13315fc282dc40b5a6909">dynCast</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a2cef687225e13315fc282dc40b5a6909">&lt;</a><a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">NDIfStmt</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a2cef687225e13315fc282dc40b5a6909">&gt;</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a2cef687225e13315fc282dc40b5a6909">(</a>node<a class="code" href="../../d4/deb/namespaceefd.xhtml#a2cef687225e13315fc282dc40b5a6909">)</a>) {</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;            qop = ifstmt<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ae5c408d49862e644f1d299ab5b2f121d">-&gt;</a><a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ae5c408d49862e644f1d299ab5b2f121d">getQOp</a><a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ae5c408d49862e644f1d299ab5b2f121d">(</a><a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ae5c408d49862e644f1d299ab5b2f121d">)</a>;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            <span class="keyword">auto</span> cbitstr = ifstmt<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a5ec6f243aee6d4fe8988885ea9c449de">-&gt;</a><a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a5ec6f243aee6d4fe8988885ea9c449de">getCondId</a><a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a5ec6f243aee6d4fe8988885ea9c449de">(</a><a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a5ec6f243aee6d4fe8988885ea9c449de">)</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">-&gt;</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">getVal</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">(</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">)</a>;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;            <span class="keywordflow">for</span> (<span class="keyword">auto</span> cbit : xton<a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#aa3dc820bf243cb3f06c6e6155e853888">.</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#aa3dc820bf243cb3f06c6e6155e853888">getRegUIds</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#aa3dc820bf243cb3f06c6e6155e853888">(</a>cbitstr<a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#aa3dc820bf243cb3f06c6e6155e853888">)</a>) {</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                xbits.push_back(<a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml">Xbit</a><a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml#a4cddd18c9e4ec4f08b28d1c3a81f67cc">::</a><a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml#a4cddd18c9e4ec4f08b28d1c3a81f67cc">C</a><a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml#a4cddd18c9e4ec4f08b28d1c3a81f67cc">(</a>cbit<a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml#a4cddd18c9e4ec4f08b28d1c3a81f67cc">)</a>);</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            }</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<span class="keyword">auto</span> measure = <a class="code" href="../../d4/deb/namespaceefd.xhtml#a2cef687225e13315fc282dc40b5a6909">dynCast</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a2cef687225e13315fc282dc40b5a6909">&lt;</a><a class="code" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml">NDQOpMeasure</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a2cef687225e13315fc282dc40b5a6909">&gt;</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a2cef687225e13315fc282dc40b5a6909">(</a>node<a class="code" href="../../d4/deb/namespaceefd.xhtml#a2cef687225e13315fc282dc40b5a6909">)</a>) {</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            <span class="keyword">auto</span> cbitstr = measure<a class="code" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#addcc5fd8d95d5790f75b643e88e76c7e">-&gt;</a><a class="code" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#addcc5fd8d95d5790f75b643e88e76c7e">getCBit</a><a class="code" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#addcc5fd8d95d5790f75b643e88e76c7e">(</a><a class="code" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#addcc5fd8d95d5790f75b643e88e76c7e">)</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">-&gt;</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">toString</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">)</a>;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;            xbits.push_back(<a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml">Xbit</a><a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml#a4cddd18c9e4ec4f08b28d1c3a81f67cc">::</a><a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml#a4cddd18c9e4ec4f08b28d1c3a81f67cc">C</a><a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml#a4cddd18c9e4ec4f08b28d1c3a81f67cc">(</a>xton<a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ae9f84f1119a80e918cc3b3fd916a5922">.</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ae9f84f1119a80e918cc3b3fd916a5922">getCUId</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ae9f84f1119a80e918cc3b3fd916a5922">(</a>cbitstr<a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ae9f84f1119a80e918cc3b3fd916a5922">)</a><a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml#a4cddd18c9e4ec4f08b28d1c3a81f67cc">)</a>);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        }</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="keyword">auto</span> qargs = qop<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">-&gt;</a><a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">getQArgs</a><a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">(</a><a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">)</a>;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="keywordflow">for</span> (uint32_t i = 0, e = qargs<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a7d1b691a45689241a8138539a2be8596">-&gt;</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a7d1b691a45689241a8138539a2be8596">getChildNumber</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a7d1b691a45689241a8138539a2be8596">(</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a7d1b691a45689241a8138539a2be8596">)</a>; i &lt; e; ++i) {</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            <span class="keyword">auto</span> qarg = qargs<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">-&gt;</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">getChild</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">(</a>i<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">)</a>;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            xbits.push_back(<a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml">Xbit</a><a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml#a9bc4937fc867235e1e7867529aee20e3">::</a><a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml#a9bc4937fc867235e1e7867529aee20e3">Q</a><a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml#a9bc4937fc867235e1e7867529aee20e3">(</a>xton<a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ae645e4b0ccb9c25c534883843484f06a">.</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ae645e4b0ccb9c25c534883843484f06a">getQUId</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ae645e4b0ccb9c25c534883843484f06a">(</a>qarg<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">-&gt;</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">toString</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">)</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ae645e4b0ccb9c25c534883843484f06a">)</a><a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml#a9bc4937fc867235e1e7867529aee20e3">)</a>);</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        }</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        graph<a class="code" href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#a55b28f16e4da779c944ca4ab5ef07d95">.</a><a class="code" href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#a55b28f16e4da779c944ca4ab5ef07d95">append</a><a class="code" href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#a55b28f16e4da779c944ca4ab5ef07d95">(</a>xbits<a class="code" href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#a55b28f16e4da779c944ca4ab5ef07d95">,</a> node<a class="code" href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#a55b28f16e4da779c944ca4ab5ef07d95">)</a>;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    }</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;}</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml#aaf979aada2c4731f90f1d350d886cf77">   53</a></span>&#160;<a class="code" href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml">CircuitGraphBuilderPass</a>::<a class="code" href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml#afae2758d0a120a2e6b8943400e66852b">uRef</a> <a class="code" href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml">CircuitGraphBuilderPass</a>::<a class="code" href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml#aaf979aada2c4731f90f1d350d886cf77">Create</a>() {</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml#afae2758d0a120a2e6b8943400e66852b">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml">CircuitGraphBuilderPass</a>());</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div><div class="ttc" id="classefd_1_1XbitToNumberWrapperPass_xhtml"><div class="ttname"><a href="../../de/d2b/classefd_1_1XbitToNumberWrapperPass.xhtml">efd::XbitToNumberWrapperPass</a></div><div class="ttdoc">WrapperPass that yields a XbitToNumber structure. </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d94/XbitToNumberPass_8h_source.xhtml#l00069">XbitToNumberPass.h:69</a></div></div>
<div class="ttc" id="classefd_1_1PassT_xhtml_aae3442c1486bcec7622a64451262d684"><div class="ttname"><a href="../../db/d56/classefd_1_1PassT.xhtml#aae3442c1486bcec7622a64451262d684">efd::PassT::getData</a></div><div class="ttdeci">T &amp; getData()</div><div class="ttdef"><b>Definition:</b> <a href="../../df/d29/Pass_8h_source.xhtml#l00081">Pass.h:81</a></div></div>
<div class="ttc" id="structefd_1_1XbitToNumber_xhtml_ab395508705fe60ed3bd0cfb28eb5ffc6"><div class="ttname"><a href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ab395508705fe60ed3bd0cfb28eb5ffc6">efd::XbitToNumber::getQSize</a></div><div class="ttdeci">uint32_t getQSize(NDGateDecl::Ref gate=nullptr) const</div><div class="ttdoc">Returns the number of qbits in a given gate (if any). </div><div class="ttdef"><b>Definition:</b> <a href="../../de/de8/XbitToNumberPass_8cpp_source.xhtml#l00033">XbitToNumberPass.cpp:33</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a63e30243eca03b0c85d8c4856e91c79d"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">efd::Node::getChild</a></div><div class="ttdeci">Ref getChild(uint32_t i) const</div><div class="ttdoc">Gets the i-th child. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00021">Nodes.cpp:21</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraphBuilderPass_xhtml_aaf979aada2c4731f90f1d350d886cf77"><div class="ttname"><a href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml#aaf979aada2c4731f90f1d350d886cf77">efd::CircuitGraphBuilderPass::Create</a></div><div class="ttdeci">static uRef Create()</div><div class="ttdef"><b>Definition:</b> <a href="../../df/dcc/CircuitGraphBuilderPass_8cpp_source.xhtml#l00053">CircuitGraphBuilderPass.cpp:53</a></div></div>
<div class="ttc" id="structefd_1_1XbitToNumber_xhtml_aee01f34943dd3c3afa794cb45815268f"><div class="ttname"><a href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#aee01f34943dd3c3afa794cb45815268f">efd::XbitToNumber::getCSize</a></div><div class="ttdeci">uint32_t getCSize() const</div><div class="ttdoc">Returns the number of cbits in a given gate (if any). </div><div class="ttdef"><b>Definition:</b> <a href="../../de/de8/XbitToNumberPass_8cpp_source.xhtml#l00038">XbitToNumberPass.cpp:38</a></div></div>
<div class="ttc" id="classefd_1_1Xbit_xhtml_a4cddd18c9e4ec4f08b28d1c3a81f67cc"><div class="ttname"><a href="../../d9/d6b/classefd_1_1Xbit.xhtml#a4cddd18c9e4ec4f08b28d1c3a81f67cc">efd::Xbit::C</a></div><div class="ttdeci">static Xbit C(uint32_t id)</div><div class="ttdoc">Creates a classical Xbit with id. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00043">CircuitGraph.cpp:43</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraph_xhtml_a55b28f16e4da779c944ca4ab5ef07d95"><div class="ttname"><a href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#a55b28f16e4da779c944ca4ab5ef07d95">efd::CircuitGraph::append</a></div><div class="ttdeci">void append(std::vector&lt; Xbit &gt; xbits, Node::Ref node)</div><div class="ttdoc">Appends a node to the bits xbits. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00181">CircuitGraph.cpp:181</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a23d45e3b6c65d5fa14b199da8b0617c7"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a23d45e3b6c65d5fa14b199da8b0617c7">efd::QModule::stmt_end</a></div><div class="ttdeci">Iterator stmt_end()</div><div class="ttdoc">Iterator to the end of the statement node vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00201">QModule.cpp:201</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml">efd::QModule</a></div><div class="ttdoc">Qasm module representation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d73/QModule_8h_source.xhtml#l00013">QModule.h:13</a></div></div>
<div class="ttc" id="namespaceefd_xhtml"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml">efd</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00012">Nodes.h:12</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a96ca13a5c2b971b68619ce4a34be0f66"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">efd::Node::toString</a></div><div class="ttdeci">virtual std::string toString(bool pretty=false) const =0</div><div class="ttdoc">Returns a std::string representation of this Node and its childrem. </div></div>
<div class="ttc" id="classefd_1_1PassCache_xhtml"><div class="ttname"><a href="../../d1/df9/classefd_1_1PassCache.xhtml">efd::PassCache</a></div><div class="ttdoc">Static class that caches passes that were run by this compiler. </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d82/PassCache_8h_source.xhtml#l00010">PassCache.h:10</a></div></div>
<div class="ttc" id="classefd_1_1NDList_xhtml_a7d1b691a45689241a8138539a2be8596"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml#a7d1b691a45689241a8138539a2be8596">efd::NDList::getChildNumber</a></div><div class="ttdeci">uint32_t getChildNumber() const override</div><div class="ttdoc">Returns the number of childrem of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00404">Nodes.cpp:404</a></div></div>
<div class="ttc" id="namespacestd_xhtml"><div class="ttname"><a href="../../d8/dcc/namespacestd.xhtml">std</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d2e/WrapperVal_8h_source.xhtml#l00048">WrapperVal.h:48</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml">efd::NDQOp</a></div><div class="ttdoc">Generic node for quantum operations. This is also the base node for the other quantum gates...</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00577">Nodes.h:577</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraph_xhtml_aacac1809d4af7ea1b82d9dd24661360c"><div class="ttname"><a href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#aacac1809d4af7ea1b82d9dd24661360c">efd::CircuitGraph::init</a></div><div class="ttdeci">void init(uint32_t qubits, uint32_t cbits)</div><div class="ttdoc">Initializes the CircuitGraph. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00145">CircuitGraph.cpp:145</a></div></div>
<div class="ttc" id="classefd_1_1NDValue_xhtml_a53ee724a8db3429bf30bb1936ad548b2"><div class="ttname"><a href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">efd::NDValue::getVal</a></div><div class="ttdeci">T getVal() const</div><div class="ttdoc">Returns a copy to the setted value. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l01023">Nodes.h:1023</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">efd::NDIfStmt</a></div><div class="ttdoc">Node for conditional statement. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00968">Nodes.h:968</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml_a5ec6f243aee6d4fe8988885ea9c449de"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a5ec6f243aee6d4fe8988885ea9c449de">efd::NDIfStmt::getCondId</a></div><div class="ttdeci">NDId::Ref getCondId() const</div><div class="ttdoc">Gets the id inside the conditional. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00522">Nodes.cpp:522</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraphBuilderPass_xhtml_afae2758d0a120a2e6b8943400e66852b"><div class="ttname"><a href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml#afae2758d0a120a2e6b8943400e66852b">efd::CircuitGraphBuilderPass::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; CircuitGraphBuilderPass &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d9b/CircuitGraphBuilderPass_8h_source.xhtml#l00020">CircuitGraphBuilderPass.h:20</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraphBuilderPass_xhtml"><div class="ttname"><a href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml">efd::CircuitGraphBuilderPass</a></div><div class="ttdoc">Builds the circuit graph corresponding to the QModule given. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d9b/CircuitGraphBuilderPass_8h_source.xhtml#l00017">CircuitGraphBuilderPass.h:17</a></div></div>
<div class="ttc" id="structefd_1_1XbitToNumber_xhtml_aa3dc820bf243cb3f06c6e6155e853888"><div class="ttname"><a href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#aa3dc820bf243cb3f06c6e6155e853888">efd::XbitToNumber::getRegUIds</a></div><div class="ttdeci">std::vector&lt; uint32_t &gt; getRegUIds(std::string id) const</div><div class="ttdoc">Returns a list of uids that relate to a given register. </div><div class="ttdef"><b>Definition:</b> <a href="../../de/de8/XbitToNumberPass_8cpp_source.xhtml#l00017">XbitToNumberPass.cpp:17</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraphBuilderPass_xhtml_a178f61890593d8d7e10c675725e371be"><div class="ttname"><a href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml#a178f61890593d8d7e10c675725e371be">efd::CircuitGraphBuilderPass::run</a></div><div class="ttdeci">bool run(QModule *qmod) override</div><div class="ttdoc">Runs the pass in the given QModule and returns true if it has modified qmod. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/dcc/CircuitGraphBuilderPass_8cpp_source.xhtml#l00010">CircuitGraphBuilderPass.cpp:10</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpMeasure_xhtml_addcc5fd8d95d5790f75b643e88e76c7e"><div class="ttname"><a href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#addcc5fd8d95d5790f75b643e88e76c7e">efd::NDQOpMeasure::getCBit</a></div><div class="ttdeci">Node::Ref getCBit() const</div><div class="ttdoc">Gets the cbit node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01020">Nodes.cpp:1020</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_af7ef43289355c5bb047a46419177c8ed"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">efd::NDQOp::getQArgs</a></div><div class="ttdeci">NDList::Ref getQArgs() const</div><div class="ttdoc">Gets the quantum arguments. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00904">Nodes.cpp:904</a></div></div>
<div class="ttc" id="classefd_1_1Xbit_xhtml_a9bc4937fc867235e1e7867529aee20e3"><div class="ttname"><a href="../../d9/d6b/classefd_1_1Xbit.xhtml#a9bc4937fc867235e1e7867529aee20e3">efd::Xbit::Q</a></div><div class="ttdeci">static Xbit Q(uint32_t id)</div><div class="ttdoc">Creates a quantum Xbit with id. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00039">CircuitGraph.cpp:39</a></div></div>
<div class="ttc" id="classefd_1_1PassCache_xhtml_a8c54d0a438f35de5629ae78c886687a8"><div class="ttname"><a href="../../d1/df9/classefd_1_1PassCache.xhtml#a8c54d0a438f35de5629ae78c886687a8">efd::PassCache::Get</a></div><div class="ttdeci">static T * Get(QModule::Ref qmod)</div><div class="ttdoc">Gets a shared pointer to the pass T run in qmod. If it does not exist, it tries to run...</div><div class="ttdef"><b>Definition:</b> <a href="../../db/d82/PassCache_8h_source.xhtml#l00071">PassCache.h:71</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml_ae5c408d49862e644f1d299ab5b2f121d"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ae5c408d49862e644f1d299ab5b2f121d">efd::NDIfStmt::getQOp</a></div><div class="ttdeci">NDQOp::Ref getQOp() const</div><div class="ttdoc">Gets the qop. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00538">Nodes.cpp:538</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_ac00e1eb93f94c00db1e6a661d8f95d9d"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#ac00e1eb93f94c00db1e6a661d8f95d9d">efd::QModule::stmt_begin</a></div><div class="ttdeci">Iterator stmt_begin()</div><div class="ttdoc">Iterator to the beginning of the statement node vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00193">QModule.cpp:193</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraphBuilderPass_xhtml_a702eb3f5f4a8f8ed84a03429c9daa2cc"><div class="ttname"><a href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml#a702eb3f5f4a8f8ed84a03429c9daa2cc">efd::CircuitGraphBuilderPass::ID</a></div><div class="ttdeci">static uint8_t ID</div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d9b/CircuitGraphBuilderPass_8h_source.xhtml#l00022">CircuitGraphBuilderPass.h:22</a></div></div>
<div class="ttc" id="structefd_1_1XbitToNumber_xhtml_ae645e4b0ccb9c25c534883843484f06a"><div class="ttname"><a href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ae645e4b0ccb9c25c534883843484f06a">efd::XbitToNumber::getQUId</a></div><div class="ttdeci">uint32_t getQUId(std::string id, NDGateDecl::Ref gate=nullptr) const</div><div class="ttdoc">Returns an uint32_t number representing the qubit in this specific gate (if any). ...</div><div class="ttdef"><b>Definition:</b> <a href="../../de/de8/XbitToNumberPass_8cpp_source.xhtml#l00022">XbitToNumberPass.cpp:22</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpMeasure_xhtml"><div class="ttname"><a href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml">efd::NDQOpMeasure</a></div><div class="ttdoc">NDQOp specialized for measure operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00681">Nodes.h:681</a></div></div>
<div class="ttc" id="classefd_1_1Xbit_xhtml"><div class="ttname"><a href="../../d9/d6b/classefd_1_1Xbit.xhtml">efd::Xbit</a></div><div class="ttdoc">Represents the id of one Quantum or Classical bit. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/da6/CircuitGraph_8h_source.xhtml#l00010">CircuitGraph.h:10</a></div></div>
<div class="ttc" id="structefd_1_1XbitToNumber_xhtml_ae9f84f1119a80e918cc3b3fd916a5922"><div class="ttname"><a href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ae9f84f1119a80e918cc3b3fd916a5922">efd::XbitToNumber::getCUId</a></div><div class="ttdeci">uint32_t getCUId(std::string id) const</div><div class="ttdoc">Returns an uint32_t number representing the classic bit;. </div><div class="ttdef"><b>Definition:</b> <a href="../../de/de8/XbitToNumberPass_8cpp_source.xhtml#l00028">XbitToNumberPass.cpp:28</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a2cef687225e13315fc282dc40b5a6909"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a2cef687225e13315fc282dc40b5a6909">efd::dynCast</a></div><div class="ttdeci">TargetTy * dynCast(SrcTy *src)</div><div class="ttdoc">Returns src cast to TargetTy, iff it is of class TargetTy, otherwise it will return nullptr...</div><div class="ttdef"><b>Definition:</b> <a href="../../d5/dfc/RTTI_8h_source.xhtml#l00015">RTTI.h:15</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue May 1 2018 23:33:51 for Enfield by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
