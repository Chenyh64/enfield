<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Enfield: lib/Transform/QModule.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Enfield
   </div>
   <div id="projectbrief">An OpenQASM source-to-source compiler for optimization.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_97aefd0d527b934f1d99a682da8fe6a9.xhtml">lib</a></li><li class="navelem"><a class="el" href="../../dir_582f290f049f08c25ab9fc887a9170ac.xhtml">Transform</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">QModule.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d9/d5d/QModule_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&quot;enfield/Analysis/Driver.h&quot;</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&quot;enfield/Transform/QModule.h&quot;</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&quot;enfield/Transform/Utils.h&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&quot;enfield/Transform/PassCache.h&quot;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&quot;enfield/Support/RTTI.h&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&quot;enfield/Support/uRefCast.h&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&lt;</span><span class="preprocessor">cassert</span><span class="preprocessor">&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&lt;</span><span class="preprocessor">unordered_set</span><span class="preprocessor">&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&lt;</span><span class="preprocessor">iterator</span><span class="preprocessor">&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::QModule() : mVersion(<span class="keywordtype">nullptr</span>) {</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    mStatements = <a class="code" href="../../da/d7f/classefd_1_1NDStmtList.xhtml">NDStmtList</a><a class="code" href="../../da/d7f/classefd_1_1NDStmtList.xhtml#a015cefabf53b2666c442b01b86c2b7cd">::</a><a class="code" href="../../da/d7f/classefd_1_1NDStmtList.xhtml#a015cefabf53b2666c442b01b86c2b7cd">Create</a><a class="code" href="../../da/d7f/classefd_1_1NDStmtList.xhtml#a015cefabf53b2666c442b01b86c2b7cd">(</a><a class="code" href="../../da/d7f/classefd_1_1NDStmtList.xhtml#a015cefabf53b2666c442b01b86c2b7cd">)</a>;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;}</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#a9a34b8e8cb0fc51cc8efe251b47401a4">   16</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::~<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a9a34b8e8cb0fc51cc8efe251b47401a4">QModule</a>() {</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml">PassCache</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a6e5f1e839e68364a69240f9570302cd2">::</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a6e5f1e839e68364a69240f9570302cd2">Clear</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a6e5f1e839e68364a69240f9570302cd2">(</a><span class="keyword">this</span><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a6e5f1e839e68364a69240f9570302cd2">)</a>;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;}</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#aa083140460162f46d59c02e48e46a31e">   20</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml">NDQasmVersion</a>::<a class="code" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#acaaef8c1c621047115e3ece9c3725596">Ref</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#aa083140460162f46d59c02e48e46a31e">getVersion</a>() {</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <span class="keywordflow">return</span> mVersion.get();</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;}</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#a722ba745d16ae9040cea870f5479982a">   24</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a722ba745d16ae9040cea870f5479982a">setVersion</a>(<a class="code" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml">NDQasmVersion</a>::<a class="code" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#a3b286b9fdbd38569c9006182ce595e0d">uRef</a> version) {</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    mVersion = <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(version);</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;}</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#a02a5efc8ed6d6e6645576b948a18fe19">   28</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a02a5efc8ed6d6e6645576b948a18fe19">insertInclude</a>(<a class="code" href="../../d3/d29/classefd_1_1NDInclude.xhtml">NDInclude</a>::<a class="code" href="../../d3/d29/classefd_1_1NDInclude.xhtml#a5055bd5025b24ea091f482ce0941e1ef">uRef</a> incl) {</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    mIncludes.push_back(<a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(incl));</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;}</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#a13a3c3e6d3455ff05f837fbd5fc4a06e">   32</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a13a3c3e6d3455ff05f837fbd5fc4a06e">insertReg</a>(<a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml">NDRegDecl</a>::<a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a90db74b3714926986c2df6e293db536b">uRef</a> reg) {</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::string id = reg-&gt;<a class="code" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a34957c2122c38cebf80a264d5fa3863f">getId</a><a class="code" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a34957c2122c38cebf80a264d5fa3863f">(</a><a class="code" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a34957c2122c38cebf80a264d5fa3863f">)</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">-&gt;</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">getVal</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">(</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">)</a>;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    mRegsMap[id] = <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(reg);</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    mRegs.push_back(mRegsMap[id].get());</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;}</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#af0725ce17bd18e6bddf698e89b1de4bf">   38</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#af0725ce17bd18e6bddf698e89b1de4bf">removeAllQRegs</a>() {</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::vector&lt;uint32_t&gt; ridx;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keywordflow">for</span> (uint32_t i = 0, e = mRegs.size(); i &lt; e; ++i) {</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="keywordflow">if</span> (mRegs[i]<a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a185157dac09992d6138cb80310e3c826">-&gt;</a><a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a185157dac09992d6138cb80310e3c826">isQReg</a><a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a185157dac09992d6138cb80310e3c826">(</a><a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a185157dac09992d6138cb80310e3c826">)</a>)</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            ridx.push_back(i);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    }</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="comment">// Starting from the end. So that we don&#39;t need to update the indexes</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="comment">// for every removal.</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> it = ridx.rbegin(), e = ridx.rend(); it != e; ++it) {</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        mRegs.erase(mRegs.begin() + *it);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    }</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;}</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#a4938b2ad10af17f001e1b1ca5109e3fb">   53</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::Iterator <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a4938b2ad10af17f001e1b1ca5109e3fb">findStatement</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">Ref</a> ref) {</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keyword">auto</span> it = mStatements-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae80bbf9487f0e43317c29c63a414ff34">findChild</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae80bbf9487f0e43317c29c63a414ff34">(</a>ref<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae80bbf9487f0e43317c29c63a414ff34">)</a>;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    assert(it != mStatements-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a335606078a1d727de214982453c9dd1b">end</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a335606078a1d727de214982453c9dd1b">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a335606078a1d727de214982453c9dd1b">)</a> &amp;&amp; <span class="stringliteral">&quot;Node not in the main statement list.&quot;</span>);</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keywordflow">return</span> it;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;}</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#a04cba98b5c555fd9d08d8bd62ec2c741">   59</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a04cba98b5c555fd9d08d8bd62ec2c741">removeStatement</a>(Iterator it) {</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    mStatements-&gt;<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#ae7c4d5c8dcb0a7439b62e3f662cbb85f">removeChild</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#ae7c4d5c8dcb0a7439b62e3f662cbb85f">(</a>it<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#ae7c4d5c8dcb0a7439b62e3f662cbb85f">)</a>;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;}</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#a3fcf1f575008b4e75182367b6b479129">   63</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::Iterator <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a3fcf1f575008b4e75182367b6b479129">inlineCall</a>(<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml">NDQOp</a>::<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a27de177a3e7801a76d34e00afcae9838">Ref</a> call) {</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    assert(call<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a8700a0eb5ff3cee0e3b52c56f3cc2b3c">-&gt;</a><a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a8700a0eb5ff3cee0e3b52c56f3cc2b3c">isGeneric</a><a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a8700a0eb5ff3cee0e3b52c56f3cc2b3c">(</a><a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a8700a0eb5ff3cee0e3b52c56f3cc2b3c">)</a> &amp;&amp; <span class="stringliteral">&quot;Trying to inline a non-generic call.&quot;</span>);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">Ref</a> stmt = call;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keyword">auto</span> parent = call<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a7df493996977432aee05df57ae6dc375">-&gt;</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a7df493996977432aee05df57ae6dc375">getParent</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a7df493996977432aee05df57ae6dc375">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a7df493996977432aee05df57ae6dc375">)</a>;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d4/deb/namespaceefd.xhtml#a3fd26bc2a0a0c6d9948d0d3cef2e1515">instanceOf</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a3fd26bc2a0a0c6d9948d0d3cef2e1515">&lt;</a><a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">NDIfStmt</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a3fd26bc2a0a0c6d9948d0d3cef2e1515">&gt;</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a3fd26bc2a0a0c6d9948d0d3cef2e1515">(</a>parent<a class="code" href="../../d4/deb/namespaceefd.xhtml#a3fd26bc2a0a0c6d9948d0d3cef2e1515">)</a>) {</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        stmt = parent;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        parent = stmt<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a7df493996977432aee05df57ae6dc375">-&gt;</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a7df493996977432aee05df57ae6dc375">getParent</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a7df493996977432aee05df57ae6dc375">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a7df493996977432aee05df57ae6dc375">)</a>;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    }</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    Iterator it = parent<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae80bbf9487f0e43317c29c63a414ff34">-&gt;</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae80bbf9487f0e43317c29c63a414ff34">findChild</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae80bbf9487f0e43317c29c63a414ff34">(</a>stmt<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae80bbf9487f0e43317c29c63a414ff34">)</a>;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    uint32_t dist = <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::distance(parent<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae890d36b0dcb332d82616b3180da1886">-&gt;</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae890d36b0dcb332d82616b3180da1886">begin</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae890d36b0dcb332d82616b3180da1886">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae890d36b0dcb332d82616b3180da1886">)</a>, it);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="../../d4/deb/namespaceefd.xhtml#acd4cde60c75b526798dab375aa82125c">InlineGate</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#acd4cde60c75b526798dab375aa82125c">(</a><span class="keyword">this</span><a class="code" href="../../d4/deb/namespaceefd.xhtml#acd4cde60c75b526798dab375aa82125c">,</a> call<a class="code" href="../../d4/deb/namespaceefd.xhtml#acd4cde60c75b526798dab375aa82125c">)</a>;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">return</span> parent<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae890d36b0dcb332d82616b3180da1886">-&gt;</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae890d36b0dcb332d82616b3180da1886">begin</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae890d36b0dcb332d82616b3180da1886">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae890d36b0dcb332d82616b3180da1886">)</a> + dist;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#abfad00c643bec8467ed9557b8369b4bc">   81</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::Iterator <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#abfad00c643bec8467ed9557b8369b4bc">insertStatementAfter</a>(Iterator it, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a> ref) {</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    mStatements-&gt;<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a17c02efea7eb3da603eda4526337d317">addChild</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a17c02efea7eb3da603eda4526337d317">(</a>++it<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a17c02efea7eb3da603eda4526337d317">,</a> <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(ref)<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a17c02efea7eb3da603eda4526337d317">)</a>;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordflow">return</span> it;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;}</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#adbe877fc05f2642e4c57f605c65b40a0">   86</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::Iterator <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#adbe877fc05f2642e4c57f605c65b40a0">insertStatementBefore</a>(Iterator it, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a> ref) {</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    mStatements-&gt;<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a17c02efea7eb3da603eda4526337d317">addChild</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a17c02efea7eb3da603eda4526337d317">(</a>it<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a17c02efea7eb3da603eda4526337d317">,</a> <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(ref)<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a17c02efea7eb3da603eda4526337d317">)</a>;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordflow">return</span> it;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;}</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#a298125b74dcf3445351e77a1e166218d">   91</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::Iterator <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a298125b74dcf3445351e77a1e166218d">insertStatementFront</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a> ref) {</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keyword">auto</span> it = mStatements-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae890d36b0dcb332d82616b3180da1886">begin</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae890d36b0dcb332d82616b3180da1886">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae890d36b0dcb332d82616b3180da1886">)</a>;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    mStatements-&gt;<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a17c02efea7eb3da603eda4526337d317">addChild</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a17c02efea7eb3da603eda4526337d317">(</a>it<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a17c02efea7eb3da603eda4526337d317">,</a> <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(ref)<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a17c02efea7eb3da603eda4526337d317">)</a>;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordflow">return</span> mStatements-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae890d36b0dcb332d82616b3180da1886">begin</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae890d36b0dcb332d82616b3180da1886">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae890d36b0dcb332d82616b3180da1886">)</a>;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#ae5c8859117a0d6ea5aeddd1a3fb060ec">   97</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::Iterator <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#ae5c8859117a0d6ea5aeddd1a3fb060ec">insertStatementLast</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a> ref) {</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    mStatements-&gt;<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a664c2f4a60746612062d7b112ff9842e">addChild</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a664c2f4a60746612062d7b112ff9842e">(</a><a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(ref)<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a664c2f4a60746612062d7b112ff9842e">)</a>;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordflow">return</span> mStatements-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae890d36b0dcb332d82616b3180da1886">begin</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae890d36b0dcb332d82616b3180da1886">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae890d36b0dcb332d82616b3180da1886">)</a> + (mStatements-&gt;<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a7d1b691a45689241a8138539a2be8596">getChildNumber</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a7d1b691a45689241a8138539a2be8596">(</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a7d1b691a45689241a8138539a2be8596">)</a> - 1);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::Iterator <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#abaf0b3dd099e4b098b89772b6a134d07">replaceStatement</a></div><div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#abaf0b3dd099e4b098b89772b6a134d07">  103</a></span>&#160;(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">Ref</a> stmt, <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::vector&lt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a>&gt; stmts) {</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keyword">auto</span> it = mStatements-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae80bbf9487f0e43317c29c63a414ff34">findChild</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae80bbf9487f0e43317c29c63a414ff34">(</a>stmt<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae80bbf9487f0e43317c29c63a414ff34">)</a>;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    assert(it != mStatements-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a335606078a1d727de214982453c9dd1b">end</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a335606078a1d727de214982453c9dd1b">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a335606078a1d727de214982453c9dd1b">)</a> &amp;&amp;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <span class="stringliteral">&quot;Trying to replace a non-existing statement.&quot;</span>);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    uint32_t stmtsSize = stmts.size();</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordflow">if</span> (!stmts.empty()) {</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        it = mStatements-&gt;<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#aa407fd205c6c9841cf866fa023337ece">addChildren</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#aa407fd205c6c9841cf866fa023337ece">(</a>it<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#aa407fd205c6c9841cf866fa023337ece">,</a> <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(stmts)<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#aa407fd205c6c9841cf866fa023337ece">)</a>;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    }</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    it = mStatements-&gt;<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#ae7c4d5c8dcb0a7439b62e3f662cbb85f">removeChild</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#ae7c4d5c8dcb0a7439b62e3f662cbb85f">(</a>it + stmtsSize<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#ae7c4d5c8dcb0a7439b62e3f662cbb85f">)</a>;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">return</span> it - stmtsSize;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;}</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#a0d1ee13f9fdf977893067cb4d0688e3f">  117</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a0d1ee13f9fdf977893067cb4d0688e3f">clearStatements</a>() {</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    mStatements-&gt;<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a6d57f95bd61a3796252fa542e2c0b129">clear</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a6d57f95bd61a3796252fa542e2c0b129">(</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a6d57f95bd61a3796252fa542e2c0b129">)</a>;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;}</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#aea738f7d7872cba9b7bcfc09ca789913">  121</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">Ref</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#aea738f7d7872cba9b7bcfc09ca789913">getStatement</a>(uint32_t i) {</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    assert(i &lt; mStatements-&gt;<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a7d1b691a45689241a8138539a2be8596">getChildNumber</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a7d1b691a45689241a8138539a2be8596">(</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a7d1b691a45689241a8138539a2be8596">)</a> &amp;&amp; <span class="stringliteral">&quot;Out of bounds access.&quot;</span>);</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordflow">return</span> mStatements-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">getChild</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">(</a>i<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">)</a>;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;}</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#a7a0b91ad23bdaf49e197692f453808b8">  126</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a7a0b91ad23bdaf49e197692f453808b8">insertGate</a>(<a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml">NDGateSign</a>::<a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a2c3fab44d60678aba91904ff92f5084c">uRef</a> gate) {</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    assert(gate.get() != <span class="keywordtype">nullptr</span> &amp;&amp; <span class="stringliteral">&quot;Trying to insert a &#39;nullptr&#39; gate.&quot;</span>);</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    assert(gate-&gt;<a class="code" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a34957c2122c38cebf80a264d5fa3863f">getId</a><a class="code" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a34957c2122c38cebf80a264d5fa3863f">(</a><a class="code" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a34957c2122c38cebf80a264d5fa3863f">)</a> != <span class="keywordtype">nullptr</span> &amp;&amp; <span class="stringliteral">&quot;Trying to insert a gate with &#39;nullptr&#39; id.&quot;</span>);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::string id = gate-&gt;<a class="code" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a34957c2122c38cebf80a264d5fa3863f">getId</a><a class="code" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a34957c2122c38cebf80a264d5fa3863f">(</a><a class="code" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a34957c2122c38cebf80a264d5fa3863f">)</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">-&gt;</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">getVal</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">(</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">)</a>;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keywordflow">if</span> (mGatesMap.find(id) != mGatesMap.end()) {</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::cerr &lt;&lt; <span class="stringliteral">&quot;Replacing gate: &#39;&quot;</span> &lt;&lt; id &lt;&lt; <span class="stringliteral">&quot;&#39;.&quot;</span> &lt;&lt; <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::endl;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> it = mGates.begin(), end = mGates.end(); it != end; ++it) {</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            <span class="keywordflow">if</span> ((*it)<a class="code" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a34957c2122c38cebf80a264d5fa3863f">-&gt;</a><a class="code" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a34957c2122c38cebf80a264d5fa3863f">getId</a><a class="code" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a34957c2122c38cebf80a264d5fa3863f">(</a><a class="code" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a34957c2122c38cebf80a264d5fa3863f">)</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">-&gt;</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">getVal</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">(</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">)</a> == id) {</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                mGates.erase(it);</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            }</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        }</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        mGatesMap.erase(mGatesMap.find(id));</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    }</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    mGatesMap[id] = <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(gate);</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    mGates.push_back(mGatesMap[id].get());</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;}</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#a2eb2374a37ed58c5d35d5a24ba91ff74">  149</a></span>&#160;uint32_t <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a2eb2374a37ed58c5d35d5a24ba91ff74">getNumberOfRegs</a>() <span class="keyword">const</span> {</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordflow">return</span> mRegs.size();</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;}</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#a8f27ad7ca454290dcd19a5a367cf5e52">  153</a></span>&#160;uint32_t <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a8f27ad7ca454290dcd19a5a367cf5e52">getNumberOfGates</a>() <span class="keyword">const</span> {</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordflow">return</span> mGates.size();</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;}</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#a13a07a303d5913d73fecc7babaeba7ac">  157</a></span>&#160;uint32_t <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a13a07a303d5913d73fecc7babaeba7ac">getNumberOfStmts</a>() <span class="keyword">const</span> {</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordflow">return</span> mStatements-&gt;<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a7d1b691a45689241a8138539a2be8596">getChildNumber</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a7d1b691a45689241a8138539a2be8596">(</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a7d1b691a45689241a8138539a2be8596">)</a>;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;}</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#a06eca2b18de495ccb1bb7dae6dafd997">  161</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a5158e3588724ba76fdb7c96d8fbfdbe3">RegIterator</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a06eca2b18de495ccb1bb7dae6dafd997">reg_begin</a>() {</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keywordflow">return</span> mRegs.begin();</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;}</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#a58cd2be64db83375eaa0a1ac412c58e8">  165</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#af4b5e1df1df32ef85686e76456f6f464">RegConstIterator</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a58cd2be64db83375eaa0a1ac412c58e8">reg_begin</a>() <span class="keyword">const</span> {</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordflow">return</span> mRegs.begin();</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;}</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#a9f18c4d27fb850ad0f66724b1f01b11b">  169</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a5158e3588724ba76fdb7c96d8fbfdbe3">RegIterator</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a9f18c4d27fb850ad0f66724b1f01b11b">reg_end</a>() {</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keywordflow">return</span> mRegs.end();</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;}</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#a72a52b7ab6395c9048ed37546bea4479">  173</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#af4b5e1df1df32ef85686e76456f6f464">RegConstIterator</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a72a52b7ab6395c9048ed37546bea4479">reg_end</a>() <span class="keyword">const</span> {</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keywordflow">return</span> mRegs.end();</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;}</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#af560135001f7e189109fdd5330f1908f">  177</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a405af84e20b63f65a152689fb554b3a4">GateIterator</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#af560135001f7e189109fdd5330f1908f">gates_begin</a>() {</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordflow">return</span> mGates.begin();</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;}</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#a456aa15d7b86e0d9e3cdee3b4665a323">  181</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#ae121ed1524b2029e405bf71b06eb27cd">GateConstIterator</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a456aa15d7b86e0d9e3cdee3b4665a323">gates_begin</a>() <span class="keyword">const</span> {</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keywordflow">return</span> mGates.begin();</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;}</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#a674bb9ce9b51f508600c30ad781d8af3">  185</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a405af84e20b63f65a152689fb554b3a4">GateIterator</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a674bb9ce9b51f508600c30ad781d8af3">gates_end</a>() {</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keywordflow">return</span> mGates.end();</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;}</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#a7ae2883bcd4b53785b885d943d0bdc92">  189</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#ae121ed1524b2029e405bf71b06eb27cd">GateConstIterator</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a7ae2883bcd4b53785b885d943d0bdc92">gates_end</a>() <span class="keyword">const</span> {</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="keywordflow">return</span> mGates.end();</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;}</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#ac00e1eb93f94c00db1e6a661d8f95d9d">  193</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::Iterator <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#ac00e1eb93f94c00db1e6a661d8f95d9d">stmt_begin</a>() {</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keywordflow">return</span> mStatements-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae890d36b0dcb332d82616b3180da1886">begin</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae890d36b0dcb332d82616b3180da1886">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae890d36b0dcb332d82616b3180da1886">)</a>;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;}</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#a0a5ca9ca1376a46d401ffd3a21188e7c">  197</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::ConstIterator <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a0a5ca9ca1376a46d401ffd3a21188e7c">stmt_begin</a>() <span class="keyword">const</span> {</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keywordflow">return</span> mStatements-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae890d36b0dcb332d82616b3180da1886">begin</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae890d36b0dcb332d82616b3180da1886">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae890d36b0dcb332d82616b3180da1886">)</a>;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;}</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#a23d45e3b6c65d5fa14b199da8b0617c7">  201</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::Iterator <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a23d45e3b6c65d5fa14b199da8b0617c7">stmt_end</a>() {</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="keywordflow">return</span> mStatements-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a335606078a1d727de214982453c9dd1b">end</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a335606078a1d727de214982453c9dd1b">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a335606078a1d727de214982453c9dd1b">)</a>;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;}</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#ae745fa1d388c2e605b1f2055e966d03d">  205</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::ConstIterator <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#ae745fa1d388c2e605b1f2055e966d03d">stmt_end</a>() <span class="keyword">const</span> {</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keywordflow">return</span> mStatements-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a335606078a1d727de214982453c9dd1b">end</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a335606078a1d727de214982453c9dd1b">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a335606078a1d727de214982453c9dd1b">)</a>;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;}</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#aca36bf9a785d42ecd4135a5d88c2e431">  209</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#aca36bf9a785d42ecd4135a5d88c2e431">orderby</a>(<a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::vector&lt;uint32_t&gt; order) {</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::vector&lt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a>&gt; newstmts;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <span class="keywordflow">for</span> (uint32_t i : order)</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        newstmts.push_back(<a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(mStatements-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a7a3639ae6551109bab761a86ffcc0e82">mChild</a>[i]));</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    mStatements-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a7a3639ae6551109bab761a86ffcc0e82">mChild</a>.clear();</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    mStatements-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a7a3639ae6551109bab761a86ffcc0e82">mChild</a> = <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(newstmts);</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;}</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#a5577959b82ce68a93f0b71f2835cdba4">  217</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a5577959b82ce68a93f0b71f2835cdba4">print</a>(<a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::ostream&amp; O, <span class="keywordtype">bool</span> pretty, <span class="keywordtype">bool</span> printGates) <span class="keyword">const</span> {</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    O &lt;&lt; <a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#ae1688be88d187c60b16f7f96b74eda20">toString</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#ae1688be88d187c60b16f7f96b74eda20">(</a>pretty<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#ae1688be88d187c60b16f7f96b74eda20">,</a> printGates<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#ae1688be88d187c60b16f7f96b74eda20">)</a>;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;}</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00221"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#ae1688be88d187c60b16f7f96b74eda20">  221</a></span>&#160;<a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::string <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#ae1688be88d187c60b16f7f96b74eda20">toString</a>(<span class="keywordtype">bool</span> pretty, <span class="keywordtype">bool</span> printGates) <span class="keyword">const</span> {</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::string str;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="keywordflow">if</span> (mVersion.get() != <span class="keywordtype">nullptr</span>)</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        str += mVersion-&gt;<a class="code" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#aa569f393e93eb260839f5885f145ee47">toString</a><a class="code" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#aa569f393e93eb260839f5885f145ee47">(</a>pretty<a class="code" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#aa569f393e93eb260839f5885f145ee47">)</a>;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; incl : mIncludes)</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        str += incl-&gt;<a class="code" href="../../d3/d29/classefd_1_1NDInclude.xhtml#a9efdb70f8a37e017bbce53679ce3a0ec">toString</a><a class="code" href="../../d3/d29/classefd_1_1NDInclude.xhtml#a9efdb70f8a37e017bbce53679ce3a0ec">(</a>pretty<a class="code" href="../../d3/d29/classefd_1_1NDInclude.xhtml#a9efdb70f8a37e017bbce53679ce3a0ec">)</a>;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keywordflow">if</span> (printGates) {</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        <span class="comment">// Print all quantum gates.</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> gate : mGates)</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            str += gate<a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a6f90ad90fc61c1ed70d2a1c2da6a3d0a">-&gt;</a><a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a6f90ad90fc61c1ed70d2a1c2da6a3d0a">toString</a><a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a6f90ad90fc61c1ed70d2a1c2da6a3d0a">(</a>pretty<a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a6f90ad90fc61c1ed70d2a1c2da6a3d0a">)</a>;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <span class="comment">// Print those gates that are being used.</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::unordered_set&lt;<a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::string&gt; doPrint;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; stmt : *mStatements) {</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml">NDQOp</a>::<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a27de177a3e7801a76d34e00afcae9838">Ref</a> qcall = <span class="keywordtype">nullptr</span>;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            <span class="keywordflow">if</span> (<span class="keyword">auto</span> ifstmt = <a class="code" href="../../d4/deb/namespaceefd.xhtml#a2cef687225e13315fc282dc40b5a6909">dynCast</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a2cef687225e13315fc282dc40b5a6909">&lt;</a><a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">NDIfStmt</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a2cef687225e13315fc282dc40b5a6909">&gt;</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a2cef687225e13315fc282dc40b5a6909">(</a>stmt.get()<a class="code" href="../../d4/deb/namespaceefd.xhtml#a2cef687225e13315fc282dc40b5a6909">)</a>) {</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                <span class="comment">// Get the QOp part (if it is a NDIfStmt node).</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                <span class="keywordflow">if</span> (ifstmt<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ae5c408d49862e644f1d299ab5b2f121d">-&gt;</a><a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ae5c408d49862e644f1d299ab5b2f121d">getQOp</a><a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ae5c408d49862e644f1d299ab5b2f121d">(</a><a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ae5c408d49862e644f1d299ab5b2f121d">)</a><a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a8700a0eb5ff3cee0e3b52c56f3cc2b3c">-&gt;</a><a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a8700a0eb5ff3cee0e3b52c56f3cc2b3c">isGeneric</a><a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a8700a0eb5ff3cee0e3b52c56f3cc2b3c">(</a><a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a8700a0eb5ff3cee0e3b52c56f3cc2b3c">)</a>) {</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                    qcall = ifstmt<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ae5c408d49862e644f1d299ab5b2f121d">-&gt;</a><a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ae5c408d49862e644f1d299ab5b2f121d">getQOp</a><a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ae5c408d49862e644f1d299ab5b2f121d">(</a><a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ae5c408d49862e644f1d299ab5b2f121d">)</a>;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                }</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                qcall = <a class="code" href="../../d4/deb/namespaceefd.xhtml#a2cef687225e13315fc282dc40b5a6909">dynCast</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a2cef687225e13315fc282dc40b5a6909">&lt;</a><a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml">NDQOp</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a2cef687225e13315fc282dc40b5a6909">&gt;</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a2cef687225e13315fc282dc40b5a6909">(</a>stmt.get()<a class="code" href="../../d4/deb/namespaceefd.xhtml#a2cef687225e13315fc282dc40b5a6909">)</a>;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            }</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;            <span class="keywordflow">if</span> (qcall != <span class="keywordtype">nullptr</span>) {</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::string gateId = qcall<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#aa9d90f493865fe9cdc3fecd468eaa33b">-&gt;</a><a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#aa9d90f493865fe9cdc3fecd468eaa33b">getId</a><a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#aa9d90f493865fe9cdc3fecd468eaa33b">(</a><a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#aa9d90f493865fe9cdc3fecd468eaa33b">)</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">-&gt;</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">getVal</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">(</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">)</a>;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                <span class="comment">// Print if it was not yet printed.</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                <span class="keywordflow">if</span> (doPrint.find(gateId) == doPrint.end()) {</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                    doPrint.insert(gateId);</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                }</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            }</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        }</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> gate : mGates) {</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            <span class="keywordflow">if</span> (doPrint.find(gate<a class="code" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a34957c2122c38cebf80a264d5fa3863f">-&gt;</a><a class="code" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a34957c2122c38cebf80a264d5fa3863f">getId</a><a class="code" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a34957c2122c38cebf80a264d5fa3863f">(</a><a class="code" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a34957c2122c38cebf80a264d5fa3863f">)</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">-&gt;</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">getVal</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">(</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">)</a>) != doPrint.end() &amp;&amp;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                    !gate<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a0c2aac79f80799e7b16fb370f8cf88b8">-&gt;</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a0c2aac79f80799e7b16fb370f8cf88b8">isInInclude</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a0c2aac79f80799e7b16fb370f8cf88b8">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a0c2aac79f80799e7b16fb370f8cf88b8">)</a>) {</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                str += gate<a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a6f90ad90fc61c1ed70d2a1c2da6a3d0a">-&gt;</a><a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a6f90ad90fc61c1ed70d2a1c2da6a3d0a">toString</a><a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a6f90ad90fc61c1ed70d2a1c2da6a3d0a">(</a>pretty<a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a6f90ad90fc61c1ed70d2a1c2da6a3d0a">)</a>;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            }</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        }</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    }</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; reg : mRegs)</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        str += reg<a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a3bf9bff2803d9e5c9a838d47a81c2d20">-&gt;</a><a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a3bf9bff2803d9e5c9a838d47a81c2d20">toString</a><a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a3bf9bff2803d9e5c9a838d47a81c2d20">(</a>pretty<a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a3bf9bff2803d9e5c9a838d47a81c2d20">)</a>;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    str += mStatements-&gt;<a class="code" href="../../da/d7f/classefd_1_1NDStmtList.xhtml#ae7b4ee3d6f2f0c533a0a9b552b595586">toString</a><a class="code" href="../../da/d7f/classefd_1_1NDStmtList.xhtml#ae7b4ee3d6f2f0c533a0a9b552b595586">(</a>pretty<a class="code" href="../../da/d7f/classefd_1_1NDStmtList.xhtml#ae7b4ee3d6f2f0c533a0a9b552b595586">)</a>;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <span class="keywordflow">return</span> str;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;}</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#adccc5909af3a4bc63090ecd885ffc7ad">  275</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">Ref</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#adccc5909af3a4bc63090ecd885ffc7ad">getQVar</a>(<a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::string id, <a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml">NDGateDecl</a>::<a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#abda75558e927c7f2a98ad8f17d3f37b0">Ref</a> gate) <span class="keyword">const</span> {</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="keywordflow">if</span> (gate != <span class="keywordtype">nullptr</span>) {</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        assert(mGateIdMap.find(gate) != mGateIdMap.end() &amp;&amp; <span class="stringliteral">&quot;No such gate found.&quot;</span>);</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        <span class="keyword">const</span> <a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a249172be783602fa6231f1ad516b3ba5">IdMap</a>&amp; idMap = mGateIdMap.at(gate);</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        assert(idMap.find(id) != idMap.end() &amp;&amp; <span class="stringliteral">&quot;No such id inside this gate.&quot;</span>);</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        <span class="keywordflow">return</span> idMap.at(id);</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    }</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <span class="comment">// If gate == nullptr, then we want a quantum register in the global context.</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <span class="keywordflow">return</span> mRegsMap.at(id).get();</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;}</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#a93c4cdac428d0def48ad05b9fa08a829">  289</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a93c4cdac428d0def48ad05b9fa08a829">hasQVar</a>(<a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::string id, <a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml">NDGateDecl</a>::<a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#abda75558e927c7f2a98ad8f17d3f37b0">Ref</a> gate) <span class="keyword">const</span> {</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    <span class="keywordflow">if</span> (gate != <span class="keywordtype">nullptr</span>) {</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        <span class="keywordflow">if</span> (mGateIdMap.find(gate) == mGateIdMap.end()) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        <span class="keyword">const</span> <a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a249172be783602fa6231f1ad516b3ba5">IdMap</a>&amp; idMap = mGateIdMap.at(gate);</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        <span class="keywordflow">if</span> (idMap.find(id) == idMap.end()) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    }</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <span class="keywordflow">if</span> (mRegsMap.find(id) == mRegsMap.end()) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <span class="comment">// If gate == nullptr, then we want a quantum register in the global context.</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;}</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#a2cbccf2cf8dd0e4e2dc30bf12e146644">  304</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml">NDGateSign</a>::<a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a7a871bf9db2d627d72c3b0dc010a282f">Ref</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a2cbccf2cf8dd0e4e2dc30bf12e146644">getQGate</a>(<a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::string id) <span class="keyword">const</span> {</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    assert(mGatesMap.find(id) != mGatesMap.end() &amp;&amp; <span class="stringliteral">&quot;Gate not found.&quot;</span>);</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    <span class="keywordflow">return</span> mGatesMap.at(id).get();</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;}</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#ac12253cc50ef84c801482798bda9e1a2">  309</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#ac12253cc50ef84c801482798bda9e1a2">hasQGate</a>(<a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::string id) <span class="keyword">const</span> {</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keywordflow">if</span> (mGatesMap.find(id) == mGatesMap.end()) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;}</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div><div class="line"><a name="l00314"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#acdc9505ab3feada8dbffb1f0d3321559">  314</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a85ca5b04a1d4d196b30004c3e1acaf7e">uRef</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#acdc9505ab3feada8dbffb1f0d3321559">clone</a>() <span class="keyword">const</span> {</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <span class="keyword">auto</span> qmod = <span class="keyword">new</span> <a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>();</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <span class="keywordflow">if</span> (mVersion.get() != <span class="keywordtype">nullptr</span>)</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        qmod-&gt;mVersion = <a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">uniqueCastForward</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">&lt;</a><a class="code" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml">NDQasmVersion</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">&gt;</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">(</a>mVersion-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">clone</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">)</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">)</a>;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; incl : mIncludes)</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        qmod<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a02a5efc8ed6d6e6645576b948a18fe19">-&gt;</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a02a5efc8ed6d6e6645576b948a18fe19">insertInclude</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a02a5efc8ed6d6e6645576b948a18fe19">(</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">uniqueCastForward</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">&lt;</a><a class="code" href="../../d3/d29/classefd_1_1NDInclude.xhtml">NDInclude</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">&gt;</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">(</a>incl-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">clone</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">)</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">)</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a02a5efc8ed6d6e6645576b948a18fe19">)</a>;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> reg : mRegs)</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        qmod<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a13a3c3e6d3455ff05f837fbd5fc4a06e">-&gt;</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a13a3c3e6d3455ff05f837fbd5fc4a06e">insertReg</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a13a3c3e6d3455ff05f837fbd5fc4a06e">(</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">uniqueCastForward</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">&lt;</a><a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml">NDRegDecl</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">&gt;</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">(</a>reg<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">-&gt;</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">clone</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">)</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">)</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a13a3c3e6d3455ff05f837fbd5fc4a06e">)</a>;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> gate : mGates)</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        qmod<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a7a0b91ad23bdaf49e197692f453808b8">-&gt;</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a7a0b91ad23bdaf49e197692f453808b8">insertGate</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a7a0b91ad23bdaf49e197692f453808b8">(</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">uniqueCastForward</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">&lt;</a><a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml">NDGateSign</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">&gt;</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">(</a>gate<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">-&gt;</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">clone</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">)</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">)</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a7a0b91ad23bdaf49e197692f453808b8">)</a>;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    qmod-&gt;mStatements = <a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">uniqueCastForward</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">&lt;</a><a class="code" href="../../da/d7f/classefd_1_1NDStmtList.xhtml">NDStmtList</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">&gt;</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">(</a>mStatements-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">clone</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">)</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">)</a>;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a85ca5b04a1d4d196b30004c3e1acaf7e">uRef</a>(qmod);</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;}</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div><div class="line"><a name="l00333"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#aee956234ec9a4706fde437f5e72d2d5f">  333</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a85ca5b04a1d4d196b30004c3e1acaf7e">uRef</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#aee956234ec9a4706fde437f5e72d2d5f">Create</a>() {</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::string program;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    program = <span class="stringliteral">&quot;OPENQASM 2.0;\n&quot;</span>;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <span class="keyword">auto</span> ast = <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a93709641ce1593c2f8143206beb0a699">::</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a93709641ce1593c2f8143206beb0a699">ParseString</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a93709641ce1593c2f8143206beb0a699">(</a>program<a class="code" href="../../d4/deb/namespaceefd.xhtml#a93709641ce1593c2f8143206beb0a699">,</a> <span class="keyword">true</span><a class="code" href="../../d4/deb/namespaceefd.xhtml#a93709641ce1593c2f8143206beb0a699">)</a>;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    <span class="keywordflow">if</span> (ast.get() != <span class="keywordtype">nullptr</span>)</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a1acae6e0a197d578c8e5987863443dd7">GetFromAST</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a1acae6e0a197d578c8e5987863443dd7">(</a><a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(ast)<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a1acae6e0a197d578c8e5987863443dd7">)</a>;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a85ca5b04a1d4d196b30004c3e1acaf7e">uRef</a>(<span class="keywordtype">nullptr</span>);</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;}</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#a1acae6e0a197d578c8e5987863443dd7">  344</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a85ca5b04a1d4d196b30004c3e1acaf7e">uRef</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a1acae6e0a197d578c8e5987863443dd7">GetFromAST</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a> ref) {</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    <a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a85ca5b04a1d4d196b30004c3e1acaf7e">uRef</a> qmod(<span class="keyword">new</span> <a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>());</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b8442e2de32a9529d7a4fcd5829ef62">::</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b8442e2de32a9529d7a4fcd5829ef62">ProcessAST</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b8442e2de32a9529d7a4fcd5829ef62">(</a>qmod.get()<a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b8442e2de32a9529d7a4fcd5829ef62">,</a> ref.get()<a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b8442e2de32a9529d7a4fcd5829ef62">)</a>;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    <span class="keyword">auto</span> gates = <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a194305909125a1398a1f0e00fbae1cf5">::</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a194305909125a1398a1f0e00fbae1cf5">GetIntrinsicGates</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a194305909125a1398a1f0e00fbae1cf5">(</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a194305909125a1398a1f0e00fbae1cf5">)</a>;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; gate : gates)</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        qmod-&gt;<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a7a0b91ad23bdaf49e197692f453808b8">insertGate</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a7a0b91ad23bdaf49e197692f453808b8">(</a><a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(gate)<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a7a0b91ad23bdaf49e197692f453808b8">)</a>;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    <span class="keywordflow">return</span> qmod;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;}</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div><div class="line"><a name="l00355"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#a653e47a65669dcb2e2f5b2c37d684d01">  355</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a85ca5b04a1d4d196b30004c3e1acaf7e">uRef</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a653e47a65669dcb2e2f5b2c37d684d01">Parse</a>(<a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::string filename, <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::string path) {</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <span class="keyword">auto</span> ast = <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ab4181eb2261a81187a3e8800ec2782ed">::</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ab4181eb2261a81187a3e8800ec2782ed">ParseFile</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ab4181eb2261a81187a3e8800ec2782ed">(</a>filename<a class="code" href="../../d4/deb/namespaceefd.xhtml#ab4181eb2261a81187a3e8800ec2782ed">,</a> path<a class="code" href="../../d4/deb/namespaceefd.xhtml#ab4181eb2261a81187a3e8800ec2782ed">,</a> <span class="keyword">true</span><a class="code" href="../../d4/deb/namespaceefd.xhtml#ab4181eb2261a81187a3e8800ec2782ed">)</a>;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    <span class="keywordflow">if</span> (ast.get() != <span class="keywordtype">nullptr</span>)</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a1acae6e0a197d578c8e5987863443dd7">GetFromAST</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a1acae6e0a197d578c8e5987863443dd7">(</a><a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(ast)<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a1acae6e0a197d578c8e5987863443dd7">)</a>;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a85ca5b04a1d4d196b30004c3e1acaf7e">uRef</a>(<span class="keywordtype">nullptr</span>);</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;}</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00364"></a><span class="lineno"><a class="line" href="../../dd/d52/classefd_1_1QModule.xhtml#a362aee4af154bbff56a63dfc15ff01e1">  364</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a85ca5b04a1d4d196b30004c3e1acaf7e">uRef</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a362aee4af154bbff56a63dfc15ff01e1">ParseString</a>(<a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::string program) {</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    <span class="keyword">auto</span> ast = <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a93709641ce1593c2f8143206beb0a699">::</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a93709641ce1593c2f8143206beb0a699">ParseString</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a93709641ce1593c2f8143206beb0a699">(</a>program<a class="code" href="../../d4/deb/namespaceefd.xhtml#a93709641ce1593c2f8143206beb0a699">,</a> <span class="keyword">true</span><a class="code" href="../../d4/deb/namespaceefd.xhtml#a93709641ce1593c2f8143206beb0a699">)</a>;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    <span class="keywordflow">if</span> (ast != <span class="keywordtype">nullptr</span>)</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a1acae6e0a197d578c8e5987863443dd7">GetFromAST</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a1acae6e0a197d578c8e5987863443dd7">(</a><a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(ast)<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a1acae6e0a197d578c8e5987863443dd7">)</a>;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a85ca5b04a1d4d196b30004c3e1acaf7e">uRef</a>(<span class="keywordtype">nullptr</span>);</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;}</div><div class="ttc" id="classefd_1_1NDList_xhtml_a17c02efea7eb3da603eda4526337d317"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml#a17c02efea7eb3da603eda4526337d317">efd::NDList::addChild</a></div><div class="ttdeci">Iterator addChild(Iterator it, Node::uRef child)</div><div class="ttdoc">Inserts a child in the iterator it. The iterator goes to the new inserted element. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00357">Nodes.cpp:357</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_adccc5909af3a4bc63090ecd885ffc7ad"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#adccc5909af3a4bc63090ecd885ffc7ad">efd::QModule::getQVar</a></div><div class="ttdeci">Node::Ref getQVar(std::string id, NDGateDecl::Ref gate=nullptr) const</div><div class="ttdoc">Gets the quantum variable mapped to id from some gate. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00275">QModule.cpp:275</a></div></div>
<div class="ttc" id="classefd_1_1NDGateSign_xhtml_a2c3fab44d60678aba91904ff92f5084c"><div class="ttname"><a href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a2c3fab44d60678aba91904ff92f5084c">efd::NDGateSign::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; NDGateSign &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00502">Nodes.h:502</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a3fcf1f575008b4e75182367b6b479129"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a3fcf1f575008b4e75182367b6b479129">efd::QModule::inlineCall</a></div><div class="ttdeci">Iterator inlineCall(NDQOp::Ref call)</div><div class="ttdoc">Inlines call and returns an iterator to the first node inserted. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00063">QModule.cpp:63</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_ae890d36b0dcb332d82616b3180da1886"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#ae890d36b0dcb332d82616b3180da1886">efd::Node::begin</a></div><div class="ttdeci">Iterator begin()</div><div class="ttdoc">Returns a iterator to the beginning of the vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00038">Nodes.cpp:38</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a58cd2be64db83375eaa0a1ac412c58e8"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a58cd2be64db83375eaa0a1ac412c58e8">efd::QModule::reg_begin</a></div><div class="ttdeci">RegConstIterator reg_begin() const</div><div class="ttdoc">ConstIterator to the beginning of the register node vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00165">QModule.cpp:165</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a674bb9ce9b51f508600c30ad781d8af3"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a674bb9ce9b51f508600c30ad781d8af3">efd::QModule::gates_end</a></div><div class="ttdeci">GateIterator gates_end()</div><div class="ttdoc">Iterator to the end of the gate declaration node vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00185">QModule.cpp:185</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a7ae2883bcd4b53785b885d943d0bdc92"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a7ae2883bcd4b53785b885d943d0bdc92">efd::QModule::gates_end</a></div><div class="ttdeci">GateConstIterator gates_end() const</div><div class="ttdoc">ConstIterator to the end of the gate declaration node vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00189">QModule.cpp:189</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_ae121ed1524b2029e405bf71b06eb27cd"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#ae121ed1524b2029e405bf71b06eb27cd">efd::QModule::GateConstIterator</a></div><div class="ttdeci">GatesVector::const_iterator GateConstIterator</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d73/QModule_8h_source.xhtml#l00036">QModule.h:36</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a6c85c9bd21014b73497de741cc75f706"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">efd::Node::clone</a></div><div class="ttdeci">Node::uRef clone() const</div><div class="ttdoc">Clones the current node (deep copy). </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00114">Nodes.cpp:114</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a72a52b7ab6395c9048ed37546bea4479"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a72a52b7ab6395c9048ed37546bea4479">efd::QModule::reg_end</a></div><div class="ttdeci">RegConstIterator reg_end() const</div><div class="ttdoc">ConstIterator to the end of the register node vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00173">QModule.cpp:173</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a362aee4af154bbff56a63dfc15ff01e1"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a362aee4af154bbff56a63dfc15ff01e1">efd::QModule::ParseString</a></div><div class="ttdeci">static uRef ParseString(std::string program)</div><div class="ttdoc">Parses the string program and returns a QModule. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00364">QModule.cpp:364</a></div></div>
<div class="ttc" id="classefd_1_1NDList_xhtml_aa407fd205c6c9841cf866fa023337ece"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml#aa407fd205c6c9841cf866fa023337ece">efd::NDList::addChildren</a></div><div class="ttdeci">Iterator addChildren(Iterator it, std::vector&lt; Node::uRef &gt; children)</div><div class="ttdoc">Inserts children in the iterator it. The iterator goes to the first new inserted element. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00370">Nodes.cpp:370</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a63e30243eca03b0c85d8c4856e91c79d"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">efd::Node::getChild</a></div><div class="ttdeci">Ref getChild(uint32_t i) const</div><div class="ttdoc">Gets the i-th child. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00021">Nodes.cpp:21</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_ac12253cc50ef84c801482798bda9e1a2"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#ac12253cc50ef84c801482798bda9e1a2">efd::QModule::hasQGate</a></div><div class="ttdeci">bool hasQGate(std::string id) const</div><div class="ttdoc">Returns true if there is a quantum gate id. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00309">QModule.cpp:309</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_acd4cde60c75b526798dab375aa82125c"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#acd4cde60c75b526798dab375aa82125c">efd::InlineGate</a></div><div class="ttdeci">void InlineGate(QModule::Ref qmod, NDQOp::Ref qop)</div><div class="ttdoc">If found, inlines the gate that qop calls. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00395">Utils.cpp:395</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_af560135001f7e189109fdd5330f1908f"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#af560135001f7e189109fdd5330f1908f">efd::QModule::gates_begin</a></div><div class="ttdeci">GateIterator gates_begin()</div><div class="ttdoc">Iterator to the beginning of the gate declaration node vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00177">QModule.cpp:177</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_abaf0b3dd099e4b098b89772b6a134d07"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#abaf0b3dd099e4b098b89772b6a134d07">efd::QModule::replaceStatement</a></div><div class="ttdeci">Iterator replaceStatement(Node::Ref stmt, std::vector&lt; Node::uRef &gt; stmts)</div><div class="ttdoc">Replaces the stmt by the vector stmts. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00103">QModule.cpp:103</a></div></div>
<div class="ttc" id="classefd_1_1NDList_xhtml_a664c2f4a60746612062d7b112ff9842e"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml#a664c2f4a60746612062d7b112ff9842e">efd::NDList::addChild</a></div><div class="ttdeci">Iterator addChild(Node::uRef child)</div><div class="ttdoc">Appends a child to the end of the list. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00350">Nodes.cpp:350</a></div></div>
<div class="ttc" id="classefd_1_1NDRegDecl_xhtml_a90db74b3714926986c2df6e293db536b"><div class="ttname"><a href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a90db74b3714926986c2df6e293db536b">efd::NDRegDecl::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; NDRegDecl &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00248">Nodes.h:248</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a7a0b91ad23bdaf49e197692f453808b8"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a7a0b91ad23bdaf49e197692f453808b8">efd::QModule::insertGate</a></div><div class="ttdeci">void insertGate(NDGateSign::uRef gate)</div><div class="ttdoc">Inserts a gate to the QModule. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00126">QModule.cpp:126</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a13a07a303d5913d73fecc7babaeba7ac"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a13a07a303d5913d73fecc7babaeba7ac">efd::QModule::getNumberOfStmts</a></div><div class="ttdeci">uint32_t getNumberOfStmts() const</div><div class="ttdoc">Return the number of statements. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00157">QModule.cpp:157</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a9f18c4d27fb850ad0f66724b1f01b11b"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a9f18c4d27fb850ad0f66724b1f01b11b">efd::QModule::reg_end</a></div><div class="ttdeci">RegIterator reg_end()</div><div class="ttdoc">Iterator to the end of the register node vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00169">QModule.cpp:169</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a335606078a1d727de214982453c9dd1b"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a335606078a1d727de214982453c9dd1b">efd::Node::end</a></div><div class="ttdeci">Iterator end()</div><div class="ttdoc">Returns a iterator to the end of the vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00042">Nodes.cpp:42</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a7a3639ae6551109bab761a86ffcc0e82"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a7a3639ae6551109bab761a86ffcc0e82">efd::Node::mChild</a></div><div class="ttdeci">std::vector&lt; uRef &gt; mChild</div><div class="ttdoc">The childrem nodes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00083">Nodes.h:83</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a7df493996977432aee05df57ae6dc375"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a7df493996977432aee05df57ae6dc375">efd::Node::getParent</a></div><div class="ttdeci">Ref getParent() const</div><div class="ttdoc">Returns the parent node of the current node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00086">Nodes.cpp:86</a></div></div>
<div class="ttc" id="classefd_1_1NDRegDecl_xhtml_a185157dac09992d6138cb80310e3c826"><div class="ttname"><a href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a185157dac09992d6138cb80310e3c826">efd::NDRegDecl::isQReg</a></div><div class="ttdeci">bool isQReg() const</div><div class="ttdoc">Returns true if it is a quantum register declaration. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00231">Nodes.cpp:231</a></div></div>
<div class="ttc" id="classefd_1_1NDInclude_xhtml"><div class="ttname"><a href="../../d3/d29/classefd_1_1NDInclude.xhtml">efd::NDInclude</a></div><div class="ttdoc">Node used to parse another file. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00461">Nodes.h:461</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a23d45e3b6c65d5fa14b199da8b0617c7"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a23d45e3b6c65d5fa14b199da8b0617c7">efd::QModule::stmt_end</a></div><div class="ttdeci">Iterator stmt_end()</div><div class="ttdoc">Iterator to the end of the statement node vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00201">QModule.cpp:201</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml">efd::QModule</a></div><div class="ttdoc">Qasm module representation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d73/QModule_8h_source.xhtml#l00013">QModule.h:13</a></div></div>
<div class="ttc" id="classefd_1_1NDQasmVersion_xhtml"><div class="ttname"><a href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml">efd::NDQasmVersion</a></div><div class="ttdoc">Node that holds the current Qasm version and the rest of the program. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00420">Nodes.h:420</a></div></div>
<div class="ttc" id="classefd_1_1NDInclude_xhtml_a9efdb70f8a37e017bbce53679ce3a0ec"><div class="ttname"><a href="../../d3/d29/classefd_1_1NDInclude.xhtml#a9efdb70f8a37e017bbce53679ce3a0ec">efd::NDInclude::toString</a></div><div class="ttdeci">std::string toString(bool pretty=false) const override</div><div class="ttdoc">Returns a std::string representation of this Node and its childrem. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00686">Nodes.cpp:686</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a0a5ca9ca1376a46d401ffd3a21188e7c"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a0a5ca9ca1376a46d401ffd3a21188e7c">efd::QModule::stmt_begin</a></div><div class="ttdeci">ConstIterator stmt_begin() const</div><div class="ttdoc">ConstIterator to the beginning of the statement node vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00197">QModule.cpp:197</a></div></div>
<div class="ttc" id="namespaceefd_xhtml"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml">efd</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00012">Nodes.h:12</a></div></div>
<div class="ttc" id="classefd_1_1NDQasmVersion_xhtml_a3b286b9fdbd38569c9006182ce595e0d"><div class="ttname"><a href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#a3b286b9fdbd38569c9006182ce595e0d">efd::NDQasmVersion::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; NDQasmVersion &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00423">Nodes.h:423</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_ae80bbf9487f0e43317c29c63a414ff34"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#ae80bbf9487f0e43317c29c63a414ff34">efd::Node::findChild</a></div><div class="ttdeci">Iterator findChild(Node::Ref ref)</div><div class="ttdoc">Returns a iterator pointing to the given child. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00030">Nodes.cpp:30</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_af4b5e1df1df32ef85686e76456f6f464"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#af4b5e1df1df32ef85686e76456f6f464">efd::QModule::RegConstIterator</a></div><div class="ttdeci">RegsVector::const_iterator RegConstIterator</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d73/QModule_8h_source.xhtml#l00033">QModule.h:33</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_adbe877fc05f2642e4c57f605c65b40a0"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#adbe877fc05f2642e4c57f605c65b40a0">efd::QModule::insertStatementBefore</a></div><div class="ttdeci">Iterator insertStatementBefore(Iterator it, Node::uRef ref)</div><div class="ttdoc">Inserts ref before it, and returns a iterator to this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00086">QModule.cpp:86</a></div></div>
<div class="ttc" id="classefd_1_1NDGateSign_xhtml"><div class="ttname"><a href="../../db/d1f/classefd_1_1NDGateSign.xhtml">efd::NDGateSign</a></div><div class="ttdoc">Node for declaration of opaque quantum gates. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00499">Nodes.h:499</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a0c2aac79f80799e7b16fb370f8cf88b8"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a0c2aac79f80799e7b16fb370f8cf88b8">efd::Node::isInInclude</a></div><div class="ttdeci">bool isInInclude() const</div><div class="ttdoc">Returns whether this node is in a include node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00078">Nodes.cpp:78</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a64f9421919034b63bbf5b014c2de4130"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">efd::Node::Ref</a></div><div class="ttdeci">Node * Ref</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00041">Nodes.h:41</a></div></div>
<div class="ttc" id="classefd_1_1PassCache_xhtml"><div class="ttname"><a href="../../d1/df9/classefd_1_1PassCache.xhtml">efd::PassCache</a></div><div class="ttdoc">Static class that caches passes that were run by this compiler. </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d82/PassCache_8h_source.xhtml#l00010">PassCache.h:10</a></div></div>
<div class="ttc" id="classefd_1_1NDList_xhtml_a7d1b691a45689241a8138539a2be8596"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml#a7d1b691a45689241a8138539a2be8596">efd::NDList::getChildNumber</a></div><div class="ttdeci">uint32_t getChildNumber() const override</div><div class="ttdoc">Returns the number of childrem of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00404">Nodes.cpp:404</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_aa083140460162f46d59c02e48e46a31e"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#aa083140460162f46d59c02e48e46a31e">efd::QModule::getVersion</a></div><div class="ttdeci">NDQasmVersion::Ref getVersion()</div><div class="ttdoc">Gets the qasm version. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00020">QModule.cpp:20</a></div></div>
<div class="ttc" id="classefd_1_1NDGateDecl_xhtml_abda75558e927c7f2a98ad8f17d3f37b0"><div class="ttname"><a href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#abda75558e927c7f2a98ad8f17d3f37b0">efd::NDGateDecl::Ref</a></div><div class="ttdeci">NDGateDecl * Ref</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00545">Nodes.h:545</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a85ca5b04a1d4d196b30004c3e1acaf7e"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a85ca5b04a1d4d196b30004c3e1acaf7e">efd::QModule::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; QModule &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d73/QModule_8h_source.xhtml#l00016">QModule.h:16</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a494a2123de6024d1057cf773acda5f25"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">efd::Node::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; Node &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00042">Nodes.h:42</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a2eb2374a37ed58c5d35d5a24ba91ff74"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a2eb2374a37ed58c5d35d5a24ba91ff74">efd::QModule::getNumberOfRegs</a></div><div class="ttdeci">uint32_t getNumberOfRegs() const</div><div class="ttdoc">Return the number of registers. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00149">QModule.cpp:149</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a653e47a65669dcb2e2f5b2c37d684d01"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a653e47a65669dcb2e2f5b2c37d684d01">efd::QModule::Parse</a></div><div class="ttdeci">static uRef Parse(std::string filename, std::string path=&quot;./&quot;)</div><div class="ttdoc">Parses the file filename and returns a QModule. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00355">QModule.cpp:355</a></div></div>
<div class="ttc" id="classefd_1_1NDDecl_xhtml_a34957c2122c38cebf80a264d5fa3863f"><div class="ttname"><a href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a34957c2122c38cebf80a264d5fa3863f">efd::NDDecl::getId</a></div><div class="ttdeci">NDId::Ref getId() const</div><div class="ttdoc">Gets the id node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00186">Nodes.cpp:186</a></div></div>
<div class="ttc" id="classefd_1_1NDList_xhtml_a6d57f95bd61a3796252fa542e2c0b129"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml#a6d57f95bd61a3796252fa542e2c0b129">efd::NDList::clear</a></div><div class="ttdeci">void clear()</div><div class="ttdoc">Clears all the childrem. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00391">Nodes.cpp:391</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_ab4181eb2261a81187a3e8800ec2782ed"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#ab4181eb2261a81187a3e8800ec2782ed">efd::ParseFile</a></div><div class="ttdeci">Node::uRef ParseFile(std::string filename, std::string path=&quot;./&quot;, bool forceStdLib=true)</div><div class="ttdoc">Parse filename at path. </div></div>
<div class="ttc" id="namespacestd_xhtml"><div class="ttname"><a href="../../d8/dcc/namespacestd.xhtml">std</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d2e/WrapperVal_8h_source.xhtml#l00048">WrapperVal.h:48</a></div></div>
<div class="ttc" id="classefd_1_1PassCache_xhtml_a6e5f1e839e68364a69240f9570302cd2"><div class="ttname"><a href="../../d1/df9/classefd_1_1PassCache.xhtml#a6e5f1e839e68364a69240f9570302cd2">efd::PassCache::Clear</a></div><div class="ttdeci">static void Clear(QModule::Ref qmod=nullptr)</div><div class="ttdoc">Clears the cache for a certain qmod, or simply clears all cache. </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d82/PassCache_8h_source.xhtml#l00022">PassCache.h:22</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a06eca2b18de495ccb1bb7dae6dafd997"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a06eca2b18de495ccb1bb7dae6dafd997">efd::QModule::reg_begin</a></div><div class="ttdeci">RegIterator reg_begin()</div><div class="ttdoc">Iterator to the beginning of the register node vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00161">QModule.cpp:161</a></div></div>
<div class="ttc" id="classefd_1_1NDStmtList_xhtml"><div class="ttname"><a href="../../da/d7f/classefd_1_1NDStmtList.xhtml">efd::NDStmtList</a></div><div class="ttdoc">Node for list of qubit operation sequences. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00379">Nodes.h:379</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml">efd::Node</a></div><div class="ttdoc">Base class for AST nodes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00039">Nodes.h:39</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_aea738f7d7872cba9b7bcfc09ca789913"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#aea738f7d7872cba9b7bcfc09ca789913">efd::QModule::getStatement</a></div><div class="ttdeci">Node::Ref getStatement(uint32_t i)</div><div class="ttdoc">Returns the i-th statement. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00121">QModule.cpp:121</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml">efd::NDQOp</a></div><div class="ttdoc">Generic node for quantum operations. This is also the base node for the other quantum gates...</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00577">Nodes.h:577</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_ae1688be88d187c60b16f7f96b74eda20"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#ae1688be88d187c60b16f7f96b74eda20">efd::QModule::toString</a></div><div class="ttdeci">std::string toString(bool pretty=false, bool printGates=false) const</div><div class="ttdoc">Returns a std::string representation of the QModule. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00221">QModule.cpp:221</a></div></div>
<div class="ttc" id="classefd_1_1NDGateSign_xhtml_a6f90ad90fc61c1ed70d2a1c2da6a3d0a"><div class="ttname"><a href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a6f90ad90fc61c1ed70d2a1c2da6a3d0a">efd::NDGateSign::toString</a></div><div class="ttdeci">std::string toString(bool pretty=false) const override</div><div class="ttdoc">Returns a std::string representation of this Node and its childrem. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00757">Nodes.cpp:757</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a1acae6e0a197d578c8e5987863443dd7"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a1acae6e0a197d578c8e5987863443dd7">efd::QModule::GetFromAST</a></div><div class="ttdeci">static uRef GetFromAST(Node::uRef ref)</div><div class="ttdoc">Process the AST in order to obtain the QModule. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00344">QModule.cpp:344</a></div></div>
<div class="ttc" id="classefd_1_1NDGateDecl_xhtml"><div class="ttname"><a href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml">efd::NDGateDecl</a></div><div class="ttdoc">Node for declaration of quantum gates. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00543">Nodes.h:543</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a8f27ad7ca454290dcd19a5a367cf5e52"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a8f27ad7ca454290dcd19a5a367cf5e52">efd::QModule::getNumberOfGates</a></div><div class="ttdeci">uint32_t getNumberOfGates() const</div><div class="ttdoc">Return the number of gates. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00153">QModule.cpp:153</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a04cba98b5c555fd9d08d8bd62ec2c741"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a04cba98b5c555fd9d08d8bd62ec2c741">efd::QModule::removeStatement</a></div><div class="ttdeci">void removeStatement(Iterator it)</div><div class="ttdoc">Removes the node pointed by it. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00059">QModule.cpp:59</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a13a3c3e6d3455ff05f837fbd5fc4a06e"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a13a3c3e6d3455ff05f837fbd5fc4a06e">efd::QModule::insertReg</a></div><div class="ttdeci">void insertReg(NDRegDecl::uRef reg)</div><div class="ttdoc">Inserts a register declaration node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00032">QModule.cpp:32</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a3fd26bc2a0a0c6d9948d0d3cef2e1515"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a3fd26bc2a0a0c6d9948d0d3cef2e1515">efd::instanceOf</a></div><div class="ttdeci">bool instanceOf(const SrcTy *src)</div><div class="ttdoc">Returns true if the pointer src is of class TargetTy. </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/dfc/RTTI_8h_source.xhtml#l00008">RTTI.h:8</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a2cbccf2cf8dd0e4e2dc30bf12e146644"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a2cbccf2cf8dd0e4e2dc30bf12e146644">efd::QModule::getQGate</a></div><div class="ttdeci">NDGateSign::Ref getQGate(std::string id) const</div><div class="ttdoc">Gets the quantum gate mapped to id. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00304">QModule.cpp:304</a></div></div>
<div class="ttc" id="classefd_1_1NDValue_xhtml_a53ee724a8db3429bf30bb1936ad548b2"><div class="ttname"><a href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">efd::NDValue::getVal</a></div><div class="ttdeci">T getVal() const</div><div class="ttdoc">Returns a copy to the setted value. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l01023">Nodes.h:1023</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_ae745fa1d388c2e605b1f2055e966d03d"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#ae745fa1d388c2e605b1f2055e966d03d">efd::QModule::stmt_end</a></div><div class="ttdeci">ConstIterator stmt_end() const</div><div class="ttdoc">ConstIterator to the end of the statement node vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00205">QModule.cpp:205</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">efd::NDIfStmt</a></div><div class="ttdoc">Node for conditional statement. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00968">Nodes.h:968</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_ad7adca0e4de58074aa3f91827469a491"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">efd::uniqueCastForward</a></div><div class="ttdeci">std::unique_ptr&lt; T &gt; uniqueCastForward(std::unique_ptr&lt; U &gt; from)</div><div class="ttdoc">Uses the RTTI framework to cast forwardly an unique_ptr. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d09/uRefCast_8h_source.xhtml#l00035">uRefCast.h:35</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a4938b2ad10af17f001e1b1ca5109e3fb"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a4938b2ad10af17f001e1b1ca5109e3fb">efd::QModule::findStatement</a></div><div class="ttdeci">Iterator findStatement(Node::Ref ref)</div><div class="ttdoc">Returns a iterator pointing to ref, if it exists. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00053">QModule.cpp:53</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_ae5c8859117a0d6ea5aeddd1a3fb060ec"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#ae5c8859117a0d6ea5aeddd1a3fb060ec">efd::QModule::insertStatementLast</a></div><div class="ttdeci">Iterator insertStatementLast(Node::uRef ref)</div><div class="ttdoc">Inserts ref at the back, and returns a iterator to this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00097">QModule.cpp:97</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a405af84e20b63f65a152689fb554b3a4"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a405af84e20b63f65a152689fb554b3a4">efd::QModule::GateIterator</a></div><div class="ttdeci">GatesVector::iterator GateIterator</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d73/QModule_8h_source.xhtml#l00035">QModule.h:35</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a9a34b8e8cb0fc51cc8efe251b47401a4"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a9a34b8e8cb0fc51cc8efe251b47401a4">efd::QModule::~QModule</a></div><div class="ttdeci">~QModule()</div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00016">QModule.cpp:16</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_aca36bf9a785d42ecd4135a5d88c2e431"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#aca36bf9a785d42ecd4135a5d88c2e431">efd::QModule::orderby</a></div><div class="ttdeci">void orderby(std::vector&lt; uint32_t &gt; order)</div><div class="ttdoc">Order the statements according to order. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00209">QModule.cpp:209</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_abfad00c643bec8467ed9557b8369b4bc"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#abfad00c643bec8467ed9557b8369b4bc">efd::QModule::insertStatementAfter</a></div><div class="ttdeci">Iterator insertStatementAfter(Iterator it, Node::uRef ref)</div><div class="ttdoc">Inserts ref after it, and returns a iterator to this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00081">QModule.cpp:81</a></div></div>
<div class="ttc" id="classefd_1_1NDRegDecl_xhtml_a3bf9bff2803d9e5c9a838d47a81c2d20"><div class="ttname"><a href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a3bf9bff2803d9e5c9a838d47a81c2d20">efd::NDRegDecl::toString</a></div><div class="ttdeci">std::string toString(bool pretty=false) const override</div><div class="ttdoc">Returns a std::string representation of this Node and its childrem. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00251">Nodes.cpp:251</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a5577959b82ce68a93f0b71f2835cdba4"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a5577959b82ce68a93f0b71f2835cdba4">efd::QModule::print</a></div><div class="ttdeci">void print(std::ostream &amp;O=std::cout, bool pretty=false, bool printGates=false) const</div><div class="ttdoc">Prints the QModule to a std::ostream. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00217">QModule.cpp:217</a></div></div>
<div class="ttc" id="classefd_1_1NDQasmVersion_xhtml_aa569f393e93eb260839f5885f145ee47"><div class="ttname"><a href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#aa569f393e93eb260839f5885f145ee47">efd::NDQasmVersion::toString</a></div><div class="ttdeci">std::string toString(bool pretty=false) const override</div><div class="ttdoc">Returns a std::string representation of this Node and its childrem. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00625">Nodes.cpp:625</a></div></div>
<div class="ttc" id="classefd_1_1NDInclude_xhtml_a5055bd5025b24ea091f482ce0941e1ef"><div class="ttname"><a href="../../d3/d29/classefd_1_1NDInclude.xhtml#a5055bd5025b24ea091f482ce0941e1ef">efd::NDInclude::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; NDInclude &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00464">Nodes.h:464</a></div></div>
<div class="ttc" id="classefd_1_1NDStmtList_xhtml_a015cefabf53b2666c442b01b86c2b7cd"><div class="ttname"><a href="../../da/d7f/classefd_1_1NDStmtList.xhtml#a015cefabf53b2666c442b01b86c2b7cd">efd::NDStmtList::Create</a></div><div class="ttdeci">static uRef Create()</div><div class="ttdoc">Creates a new instance of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00468">Nodes.cpp:468</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_a27de177a3e7801a76d34e00afcae9838"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#a27de177a3e7801a76d34e00afcae9838">efd::NDQOp::Ref</a></div><div class="ttdeci">NDQOp * Ref</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00579">Nodes.h:579</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml_ae5c408d49862e644f1d299ab5b2f121d"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ae5c408d49862e644f1d299ab5b2f121d">efd::NDIfStmt::getQOp</a></div><div class="ttdeci">NDQOp::Ref getQOp() const</div><div class="ttdoc">Gets the qop. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00538">Nodes.cpp:538</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a456aa15d7b86e0d9e3cdee3b4665a323"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a456aa15d7b86e0d9e3cdee3b4665a323">efd::QModule::gates_begin</a></div><div class="ttdeci">GateConstIterator gates_begin() const</div><div class="ttdoc">ConstIterator to the beginning of the gate declaration node vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00181">QModule.cpp:181</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_aee956234ec9a4706fde437f5e72d2d5f"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#aee956234ec9a4706fde437f5e72d2d5f">efd::QModule::Create</a></div><div class="ttdeci">static uRef Create()</div><div class="ttdoc">Create a new empty QModule. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00333">QModule.cpp:333</a></div></div>
<div class="ttc" id="classefd_1_1NDGateSign_xhtml_a7a871bf9db2d627d72c3b0dc010a282f"><div class="ttname"><a href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a7a871bf9db2d627d72c3b0dc010a282f">efd::NDGateSign::Ref</a></div><div class="ttdeci">NDGateSign * Ref</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00501">Nodes.h:501</a></div></div>
<div class="ttc" id="classefd_1_1NDStmtList_xhtml_ae7b4ee3d6f2f0c533a0a9b552b595586"><div class="ttname"><a href="../../da/d7f/classefd_1_1NDStmtList.xhtml#ae7b4ee3d6f2f0c533a0a9b552b595586">efd::NDStmtList::toString</a></div><div class="ttdeci">std::string toString(bool pretty=false) const override</div><div class="ttdoc">Returns a std::string representation of this Node and its childrem. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00455">Nodes.cpp:455</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a02a5efc8ed6d6e6645576b948a18fe19"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a02a5efc8ed6d6e6645576b948a18fe19">efd::QModule::insertInclude</a></div><div class="ttdeci">void insertInclude(NDInclude::uRef incl)</div><div class="ttdoc">Inserts an include node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00028">QModule.cpp:28</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_a8700a0eb5ff3cee0e3b52c56f3cc2b3c"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#a8700a0eb5ff3cee0e3b52c56f3cc2b3c">efd::NDQOp::isGeneric</a></div><div class="ttdeci">bool isGeneric() const</div><div class="ttdoc">Returns true if this is a generic node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00884">Nodes.cpp:884</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_af0725ce17bd18e6bddf698e89b1de4bf"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#af0725ce17bd18e6bddf698e89b1de4bf">efd::QModule::removeAllQRegs</a></div><div class="ttdeci">void removeAllQRegs()</div><div class="ttdoc">Removes all quantum registers. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00038">QModule.cpp:38</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_acdc9505ab3feada8dbffb1f0d3321559"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#acdc9505ab3feada8dbffb1f0d3321559">efd::QModule::clone</a></div><div class="ttdeci">uRef clone() const</div><div class="ttdoc">Clones the current qmodule. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00314">QModule.cpp:314</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a722ba745d16ae9040cea870f5479982a"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a722ba745d16ae9040cea870f5479982a">efd::QModule::setVersion</a></div><div class="ttdeci">void setVersion(NDQasmVersion::uRef version)</div><div class="ttdoc">Sets the qasm version. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00024">QModule.cpp:24</a></div></div>
<div class="ttc" id="classefd_1_1NDQasmVersion_xhtml_acaaef8c1c621047115e3ece9c3725596"><div class="ttname"><a href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#acaaef8c1c621047115e3ece9c3725596">efd::NDQasmVersion::Ref</a></div><div class="ttdeci">NDQasmVersion * Ref</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00422">Nodes.h:422</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_ac00e1eb93f94c00db1e6a661d8f95d9d"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#ac00e1eb93f94c00db1e6a661d8f95d9d">efd::QModule::stmt_begin</a></div><div class="ttdeci">Iterator stmt_begin()</div><div class="ttdoc">Iterator to the beginning of the statement node vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00193">QModule.cpp:193</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a0d1ee13f9fdf977893067cb4d0688e3f"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a0d1ee13f9fdf977893067cb4d0688e3f">efd::QModule::clearStatements</a></div><div class="ttdeci">void clearStatements()</div><div class="ttdoc">Removes all statements present int this module. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00117">QModule.cpp:117</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a194305909125a1398a1f0e00fbae1cf5"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a194305909125a1398a1f0e00fbae1cf5">efd::GetIntrinsicGates</a></div><div class="ttdeci">std::vector&lt; NDGateSign::uRef &gt; GetIntrinsicGates()</div><div class="ttdoc">Returns a vector with the intrinsic gates implementation. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00036">Utils.cpp:36</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a93c4cdac428d0def48ad05b9fa08a829"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a93c4cdac428d0def48ad05b9fa08a829">efd::QModule::hasQVar</a></div><div class="ttdeci">bool hasQVar(std::string id, NDGateDecl::Ref gate=nullptr) const</div><div class="ttdoc">Returns true if there is a quantum variable id inside gate gate (if not null). </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00289">QModule.cpp:289</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a298125b74dcf3445351e77a1e166218d"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a298125b74dcf3445351e77a1e166218d">efd::QModule::insertStatementFront</a></div><div class="ttdeci">Iterator insertStatementFront(Node::uRef ref)</div><div class="ttdoc">Inserts ref at the beginning, and returns a iterator to this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00091">QModule.cpp:91</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a5158e3588724ba76fdb7c96d8fbfdbe3"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a5158e3588724ba76fdb7c96d8fbfdbe3">efd::QModule::RegIterator</a></div><div class="ttdeci">RegsVector::iterator RegIterator</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d73/QModule_8h_source.xhtml#l00032">QModule.h:32</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_aa9d90f493865fe9cdc3fecd468eaa33b"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#aa9d90f493865fe9cdc3fecd468eaa33b">efd::NDQOp::getId</a></div><div class="ttdeci">NDId::Ref getId() const</div><div class="ttdoc">Gets the id. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00888">Nodes.cpp:888</a></div></div>
<div class="ttc" id="classefd_1_1NDRegDecl_xhtml"><div class="ttname"><a href="../../da/d97/classefd_1_1NDRegDecl.xhtml">efd::NDRegDecl</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00245">Nodes.h:245</a></div></div>
<div class="ttc" id="classefd_1_1NDList_xhtml_ae7c4d5c8dcb0a7439b62e3f662cbb85f"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml#ae7c4d5c8dcb0a7439b62e3f662cbb85f">efd::NDList::removeChild</a></div><div class="ttdeci">Iterator removeChild(Iterator it)</div><div class="ttdoc">Removes the child in the iterator it. The iterator moves to the next element. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00384">Nodes.cpp:384</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a93709641ce1593c2f8143206beb0a699"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a93709641ce1593c2f8143206beb0a699">efd::ParseString</a></div><div class="ttdeci">Node::uRef ParseString(std::string program, bool forceStdLib=true)</div><div class="ttdoc">Parse the string program. </div></div>
<div class="ttc" id="namespaceefd_xhtml_a5b8442e2de32a9529d7a4fcd5829ef62"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a5b8442e2de32a9529d7a4fcd5829ef62">efd::ProcessAST</a></div><div class="ttdeci">void ProcessAST(QModule::Ref qmod, Node::Ref root)</div><div class="ttdoc">Processes the root node, and transform the entire AST into a QModule. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00308">Utils.cpp:308</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a2cef687225e13315fc282dc40b5a6909"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a2cef687225e13315fc282dc40b5a6909">efd::dynCast</a></div><div class="ttdeci">TargetTy * dynCast(SrcTy *src)</div><div class="ttdoc">Returns src cast to TargetTy, iff it is of class TargetTy, otherwise it will return nullptr...</div><div class="ttdef"><b>Definition:</b> <a href="../../d5/dfc/RTTI_8h_source.xhtml#l00015">RTTI.h:15</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a249172be783602fa6231f1ad516b3ba5"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a249172be783602fa6231f1ad516b3ba5">efd::QModule::IdMap</a></div><div class="ttdeci">std::unordered_map&lt; std::string, NDId::Ref &gt; IdMap</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d73/QModule_8h_source.xhtml#l00026">QModule.h:26</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue May 1 2018 23:33:57 for Enfield by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
