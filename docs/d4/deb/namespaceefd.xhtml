<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Enfield: efd Namespace Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Enfield
   </div>
   <div id="projectbrief">An OpenQASM source-to-source compiler for optimization.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">efd Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dfd/classefd_1_1ApproxTSFinder.xhtml">ApproxTSFinder</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/dae/classefd_1_1ArchGraph.xhtml">ArchGraph</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">This is the base class for the architectures that this project will be supporting.  <a href="../../d5/dae/classefd_1_1ArchGraph.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/db8/classefd_1_1ArchIBMQX2.xhtml">ArchIBMQX2</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/df8/classefd_1_1ArchIBMQX3.xhtml">ArchIBMQX3</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/de6/classefd_1_1ArchVerifierPass.xhtml">ArchVerifierPass</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Verifies if the CNOT relations between every qubit respects the architecture constraints.  <a href="../../d0/de6/classefd_1_1ArchVerifierPass.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d7d/classefd_1_1ArchVerifierVisitor.xhtml">ArchVerifierVisitor</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d9c/classefd_1_1ArgsParser.xhtml">ArgsParser</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da6/structefd_1_1ASTWrapper.xhtml">ASTWrapper</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d45/classefd_1_1BFSPathFinder.xhtml">BFSPathFinder</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finds swaps for one restriction only.  <a href="../../d8/d45/classefd_1_1BFSPathFinder.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db9/classefd_1_1BitOptions.xhtml">BitOptions</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements bit options for size last.  <a href="../../d8/db9/classefd_1_1BitOptions.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d80/classefd_1_1BoundedSIDepSolver.xhtml">BoundedSIDepSolver</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implementation of <a class="el" href="../../da/d6e/classefd_1_1DepSolverQAllocator.xhtml" title="Wrapper for making it easier to implement algorithms for Qubit Allocation. ">DepSolverQAllocator</a> that bounds the subgraph isomorphism search.  <a href="../../de/d80/classefd_1_1BoundedSIDepSolver.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d54/classefd_1_1CircuitGraph.xhtml">CircuitGraph</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">The Circuit representation of the <em><a class="el" href="../../dd/d52/classefd_1_1QModule.xhtml" title="Qasm module representation. ">QModule</a></em>.  <a href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml">CircuitGraphBuilderPass</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Builds the circuit graph corresponding to the <em><a class="el" href="../../dd/d52/classefd_1_1QModule.xhtml" title="Qasm module representation. ">QModule</a></em> given.  <a href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/db9/classefd_1_1CNOTLBOWrapperPass.xhtml">CNOTLBOWrapperPass</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Layer-based Ordering with CNOT priority.  <a href="../../dd/db9/classefd_1_1CNOTLBOWrapperPass.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d62/structefd_1_1CompilationSettings.xhtml">CompilationSettings</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Required information in order to compile a <em><a class="el" href="../../dd/d52/classefd_1_1QModule.xhtml" title="Qasm module representation. ">QModule</a></em>.  <a href="../../d0/d62/structefd_1_1CompilationSettings.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d38/structefd_1_1Dep.xhtml">Dep</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure for abstracting dependencies.  <a href="../../d9/d38/structefd_1_1Dep.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/dca/structefd_1_1Dependencies.xhtml">Dependencies</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Represents a sequence of dependencies (should be treated as parallel dependencies) for each node.  <a href="../../d1/dca/structefd_1_1Dependencies.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml">DependencyBuilder</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Keep track of the dependencies of each qbit for the whole program, as well as the dependencies for every gate.  <a href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/de5/classefd_1_1DependencyBuilderVisitor.xhtml">DependencyBuilderVisitor</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d06/classefd_1_1DependencyBuilderWrapperPass.xhtml">DependencyBuilderWrapperPass</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">WrapperPass that yields a <em><a class="el" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml" title="Keep track of the dependencies of each qbit for the whole program, as well as the dependencies for ev...">DependencyBuilder</a></em> structure.  <a href="../../d1/d06/classefd_1_1DependencyBuilderWrapperPass.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d27/classefd_1_1DependencyGraphBuilderPass.xhtml">DependencyGraphBuilderPass</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs the dependency graph for a <code><a class="el" href="../../dd/d52/classefd_1_1QModule.xhtml" title="Qasm module representation. ">QModule</a></code>.  <a href="../../d6/d27/classefd_1_1DependencyGraphBuilderPass.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d6e/classefd_1_1DepSolverQAllocator.xhtml">DepSolverQAllocator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wrapper for making it easier to implement algorithms for <em>Qubit</em> Allocation.  <a href="../../da/d6e/classefd_1_1DepSolverQAllocator.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/dc3/classefd_1_1DijkstraPathFinder.xhtml">DijkstraPathFinder</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dijkstra algorithm for finding a swap sequence in a weighted graph.  <a href="../../d3/dc3/classefd_1_1DijkstraPathFinder.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d73/classefd_1_1DynprogDepSolver.xhtml">DynprogDepSolver</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implementation of <a class="el" href="../../da/d6e/classefd_1_1DepSolverQAllocator.xhtml" title="Wrapper for making it easier to implement algorithms for Qubit Allocation. ">DepSolverQAllocator</a> that uses dynamic programming to obtain an optimal solution.  <a href="../../df/d73/classefd_1_1DynprogDepSolver.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d5d/classefd_1_1EnumString.xhtml">EnumString</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enum wrapper class.  <a href="../../dc/d5d/classefd_1_1EnumString.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d42/classefd_1_1ExpTSFinder.xhtml">ExpTSFinder</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/df2/classefd_1_1FlattenPass.xhtml">FlattenPass</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flattens the given <a class="el" href="../../dd/d52/classefd_1_1QModule.xhtml" title="Qasm module representation. ">QModule</a>.  <a href="../../d8/df2/classefd_1_1FlattenPass.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/dc6/classefd_1_1FlattenVisitor.xhtml">FlattenVisitor</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/db3/classefd_1_1Graph.xhtml">Graph</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="../../db/db3/classefd_1_1Graph.xhtml" title="Graph representation. ">Graph</a> representation.  <a href="../../db/db3/classefd_1_1Graph.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d23/classefd_1_1GreedyCktQAllocator.xhtml">GreedyCktQAllocator</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d6c/classefd_1_1IBMQAllocator.xhtml">IBMQAllocator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Port of IBM's allocator.  <a href="../../d3/d6c/classefd_1_1IBMQAllocator.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d24/classefd_1_1IdentityMappingFinder.xhtml">IdentityMappingFinder</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finds a mapping where the logical qubit 0 is mapped to the physical qubit 0, etc.  <a href="../../d5/d24/classefd_1_1IdentityMappingFinder.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/de1/structefd_1_1IndexOrder.xhtml">IndexOrder</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper class to sort an index vector based on a value vector.  <a href="../../da/de1/structefd_1_1IndexOrder.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/de3/classefd_1_1InlineAllPass.xhtml">InlineAllPass</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d71/classefd_1_1InlineAllVisitor.xhtml">InlineAllVisitor</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d41/structefd_1_1LayerBasedOrdering.xhtml">LayerBasedOrdering</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/de0/classefd_1_1LayerBasedOrderingWrapperPass.xhtml">LayerBasedOrderingWrapperPass</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface for ordering the program by a specific layer-based ordering.  <a href="../../d6/de0/classefd_1_1LayerBasedOrderingWrapperPass.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d1b/classefd_1_1LayersBuilderPass.xhtml">LayersBuilderPass</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create the layers of the '<a class="el" href="../../dd/d52/classefd_1_1QModule.xhtml" title="Qasm module representation. ">QModule</a>'.  <a href="../../d4/d1b/classefd_1_1LayersBuilderPass.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dde/classefd_1_1MappingFinder.xhtml">MappingFinder</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface for finding a mapping from some set of dependencies.  <a href="../../db/dde/classefd_1_1MappingFinder.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/df0/classefd_1_1NDBinOp.xhtml">NDBinOp</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Binary operation node.  <a href="../../d8/df0/classefd_1_1NDBinOp.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d9e/classefd_1_1NDDecl.xhtml">NDDecl</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml" title="Base class for AST nodes. ">Node</a> for declaration of registers (concrete and quantum).  <a href="../../d0/d9e/classefd_1_1NDDecl.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml">NDGateDecl</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml" title="Base class for AST nodes. ">Node</a> for declaration of quantum gates.  <a href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d1f/classefd_1_1NDGateSign.xhtml">NDGateSign</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml" title="Base class for AST nodes. ">Node</a> for declaration of opaque quantum gates.  <a href="../../db/d1f/classefd_1_1NDGateSign.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d14/classefd_1_1NDGOpList.xhtml">NDGOpList</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml" title="Base class for AST nodes. ">Node</a> for list of qubit operation sequences inside gate declarations.  <a href="../../da/d14/classefd_1_1NDGOpList.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/dd2/classefd_1_1NDIdRef.xhtml">NDIdRef</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml" title="Base class for AST nodes. ">Node</a> for id references (register specific positions).  <a href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">NDIfStmt</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml" title="Base class for AST nodes. ">Node</a> for conditional statement.  <a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d29/classefd_1_1NDInclude.xhtml">NDInclude</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml" title="Base class for AST nodes. ">Node</a> used to parse another file.  <a href="../../d3/d29/classefd_1_1NDInclude.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/ddd/classefd_1_1NDList.xhtml">NDList</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base class for list of nodes.  <a href="../../da/ddd/classefd_1_1NDList.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml">NDQasmVersion</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml" title="Base class for AST nodes. ">Node</a> that holds the current Qasm version and the rest of the program.  <a href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d94/classefd_1_1NDQOp.xhtml">NDQOp</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generic node for quantum operations. This is also the base node for the other quantum gates.  <a href="../../dd/d94/classefd_1_1NDQOp.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml">NDQOpBarrier</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="../../dd/d94/classefd_1_1NDQOp.xhtml" title="Generic node for quantum operations. This is also the base node for the other quantum gates...">NDQOp</a> specialized for barrier operation.  <a href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml">NDQOpCX</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="../../dd/d94/classefd_1_1NDQOp.xhtml" title="Generic node for quantum operations. This is also the base node for the other quantum gates...">NDQOp</a> specialized for barrier operation.  <a href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml">NDQOpGen</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="../../dd/d94/classefd_1_1NDQOp.xhtml" title="Generic node for quantum operations. This is also the base node for the other quantum gates...">NDQOp</a> specialized for generic gates.  <a href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d46/structefd_1_1NDQOpLongCX.xhtml">NDQOpLongCX</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Special node for long cnot calls.  <a href="../../d2/d46/structefd_1_1NDQOpLongCX.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml">NDQOpMeasure</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="../../dd/d94/classefd_1_1NDQOp.xhtml" title="Generic node for quantum operations. This is also the base node for the other quantum gates...">NDQOp</a> specialized for measure operation.  <a href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml">NDQOpReset</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="../../dd/d94/classefd_1_1NDQOp.xhtml" title="Generic node for quantum operations. This is also the base node for the other quantum gates...">NDQOp</a> specialized for reset operation.  <a href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d69/structefd_1_1NDQOpRevCX.xhtml">NDQOpRevCX</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Special node for reversal cnot calls.  <a href="../../d1/d69/structefd_1_1NDQOpRevCX.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d04/structefd_1_1NDQOpSwap.xhtml">NDQOpSwap</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Special node for swap calls.  <a href="../../dd/d04/structefd_1_1NDQOpSwap.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/dbe/classefd_1_1NDQOpU.xhtml">NDQOpU</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="../../dd/d94/classefd_1_1NDQOp.xhtml" title="Generic node for quantum operations. This is also the base node for the other quantum gates...">NDQOp</a> specialized for barrier operation.  <a href="../../d7/dbe/classefd_1_1NDQOpU.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d97/classefd_1_1NDRegDecl.xhtml">NDRegDecl</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d7f/classefd_1_1NDStmtList.xhtml">NDStmtList</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml" title="Base class for AST nodes. ">Node</a> for list of qubit operation sequences.  <a href="../../da/d7f/classefd_1_1NDStmtList.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml">NDUnaryOp</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unary operation node.  <a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d1b/classefd_1_1NDValue.xhtml">NDValue</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml" title="Base class for AST nodes. ">Node</a> for literal types.  <a href="../../df/d1b/classefd_1_1NDValue.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base class for AST nodes.  <a href="../../d6/d6a/classefd_1_1Node.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface class to be used as a visitor.  <a href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d90/structefd_1_1Operation.xhtml">Operation</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Struct used to describe the operation chosen for each solving each dependency.  <a href="../../dc/d90/structefd_1_1Operation.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d50/classefd_1_1Opt.xhtml">Opt</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class used to declare the command line options available.  <a href="../../de/d50/classefd_1_1Opt.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/classefd_1_1OptBase.xhtml">OptBase</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base class for implementing command line options.  <a href="../../d6/d25/classefd_1_1OptBase.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/df8/structefd_1_1ParseOptTrait.xhtml">ParseOptTrait</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses the arguments in <code>args</code> to <code>opt</code>.  <a href="../../db/df8/structefd_1_1ParseOptTrait.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db7/structefd_1_1ParseOptTrait_3_01bool_01_4.xhtml">ParseOptTrait&lt; bool &gt;</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/dda/structefd_1_1ParseOptTrait_3_01double_01_4.xhtml">ParseOptTrait&lt; double &gt;</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/df0/structefd_1_1ParseOptTrait_3_01EnumString_3_01T_00_01first_00_01last_01_4_01_4.xhtml">ParseOptTrait&lt; EnumString&lt; T, first, last &gt; &gt;</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da9/structefd_1_1ParseOptTrait_3_01float_01_4.xhtml">ParseOptTrait&lt; float &gt;</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/df3/structefd_1_1ParseOptTrait_3_01int_01_4.xhtml">ParseOptTrait&lt; int &gt;</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d77/structefd_1_1ParseOptTrait_3_01long_01long_01_4.xhtml">ParseOptTrait&lt; long long &gt;</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d9d/structefd_1_1ParseOptTrait_3_01std_1_1string_01_4.xhtml">ParseOptTrait&lt; std::string &gt;</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dbd/structefd_1_1ParseOptTrait_3_01std_1_1vector_3_01std_1_1string_01_4_01_4.xhtml">ParseOptTrait&lt; std::vector&lt; std::string &gt; &gt;</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d4a/structefd_1_1ParseOptTrait_3_01unsigned_01_4.xhtml">ParseOptTrait&lt; unsigned &gt;</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da0/structefd_1_1ParseOptTrait_3_01unsigned_01long_01long_01_4.xhtml">ParseOptTrait&lt; unsigned long long &gt;</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d98/classefd_1_1Pass.xhtml">Pass</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base class for implementation of <a class="el" href="../../dd/d52/classefd_1_1QModule.xhtml" title="Qasm module representation. ">QModule</a> passes. This information will be used when the <a class="el" href="../../dd/d52/classefd_1_1QModule.xhtml" title="Qasm module representation. ">QModule</a>'s function is called.  <a href="../../d0/d98/classefd_1_1Pass.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/df9/classefd_1_1PassCache.xhtml">PassCache</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Static class that caches passes that were run by this compiler.  <a href="../../d1/df9/classefd_1_1PassCache.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d56/classefd_1_1PassT.xhtml">PassT</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Should serve as base class for classes that produces some data of type <em>T</em>.  <a href="../../db/d56/classefd_1_1PassT.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d84/classefd_1_1PassT_3_01void_01_4.xhtml">PassT&lt; void &gt;</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/df1/classefd_1_1PathFinder.xhtml">PathFinder</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface for finding the path between two vertices.  <a href="../../d1/df1/classefd_1_1PathFinder.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/df7/classefd_1_1PathGuidedSolBuilder.xhtml">PathGuidedSolBuilder</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Solves the dependencies by looking at the path in the graph.  <a href="../../da/df7/classefd_1_1PathGuidedSolBuilder.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/dac/structefd_1_1PossibleValuesListTrait.xhtml">PossibleValuesListTrait</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/da9/structefd_1_1PossibleValuesListTrait_3_01efd_1_1EnumString_3_01T_00_01first_00_01last_01_4_01_4.xhtml">PossibleValuesListTrait&lt; efd::EnumString&lt; T, first, last &gt; &gt;</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml">QArgsReplaceVisitor</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml">QbitAllocator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base abstract class that allocates the qbits used in the program to the qbits that are in the physical architecture.  <a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7c/classefd_1_1QbitterSolBuilder.xhtml">QbitterSolBuilder</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Solves the dependencies using the 'long-cnot' gates.  <a href="../../d2/d7c/classefd_1_1QbitterSolBuilder.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Qasm module representation.  <a href="../../dd/d52/classefd_1_1QModule.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml">QModulefyVisitor</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d03/classefd_1_1RandomMappingFinder.xhtml">RandomMappingFinder</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Randomizes the mapping.  <a href="../../dd/d03/classefd_1_1RandomMappingFinder.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml">Registry</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base registry class for sets.  <a href="../../dc/dd0/classefd_1_1Registry.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/dd7/classefd_1_1RenameQbitPass.xhtml">RenameQbitPass</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renames all the qbits according to the map from the constructor.  <a href="../../d8/dd7/classefd_1_1RenameQbitPass.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da6/classefd_1_1RenameQbitVisitor.xhtml">RenameQbitVisitor</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/ddc/classefd_1_1ReverseEdgesPass.xhtml">ReverseEdgesPass</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="../../d0/d98/classefd_1_1Pass.xhtml" title="Base class for implementation of QModule passes. This information will be used when the QModule&#39;s fun...">Pass</a> that reverses the edges accordingly with the architecture <a class="el" href="../../db/db3/classefd_1_1Graph.xhtml" title="Graph representation. ">Graph</a>.  <a href="../../d2/ddc/classefd_1_1ReverseEdgesPass.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d28/classefd_1_1ReverseEdgesVisitor.xhtml">ReverseEdgesVisitor</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/dd7/classefd_1_1SemanticVerifierPass.xhtml">SemanticVerifierPass</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Verifies the CNOT relations between every qubit.  <a href="../../d6/dd7/classefd_1_1SemanticVerifierPass.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/de5/classefd_1_1SemanticVerifierVisitor.xhtml">SemanticVerifierVisitor</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d1e/classefd_1_1SIFinder.xhtml">SIFinder</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface for implementing different algorithms for finding matchings (subgraph isomorphism).  <a href="../../d6/d1e/classefd_1_1SIFinder.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d8a/classefd_1_1SimpleDepSolver.xhtml">SimpleDepSolver</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">DependencySolver that allocates the logical qubits from an initial mapping.  <a href="../../d2/d8a/classefd_1_1SimpleDepSolver.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d2a/structefd_1_1Solution.xhtml">Solution</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">The solution for the allocation problem.  <a href="../../d3/d2a/structefd_1_1Solution.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d30/classefd_1_1SolutionBuilder.xhtml">SolutionBuilder</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface for building the solution from an initial mapping.  <a href="../../d7/d30/classefd_1_1SolutionBuilder.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml">SolutionImplPass</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d1d/classefd_1_1Stat.xhtml">Stat</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stats of a given type.  <a href="../../d6/d1d/classefd_1_1Stat.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d5d/classefd_1_1StatBase.xhtml">StatBase</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base class for stats.  <a href="../../db/d5d/classefd_1_1StatBase.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d51/classefd_1_1StatsPool.xhtml">StatsPool</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d62/structefd_1_1Swap.xhtml">Swap</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Struct used for representing a swap between two qubits;.  <a href="../../d8/d62/structefd_1_1Swap.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d89/classefd_1_1Timer.xhtml">Timer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tracks the elapsed time. One should use the methods <em>start</em> and <em>stop</em> in order to track the time of some event.  <a href="../../d4/d89/classefd_1_1Timer.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/dad/classefd_1_1TokenSwapFinder.xhtml">TokenSwapFinder</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml">UsedBitsVisitor</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d54/classefd_1_1WeightedGraph.xhtml">WeightedGraph</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/db6/classefd_1_1WeightedSIFinder.xhtml">WeightedSIFinder</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extends the <em><a class="el" href="../../d6/d1e/classefd_1_1SIFinder.xhtml" title="Interface for implementing different algorithms for finding matchings (subgraph isomorphism). ">SIFinder</a></em> class for weighted graphs.  <a href="../../d5/db6/classefd_1_1WeightedSIFinder.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d4f/classefd_1_1WeightedSIMappingFinder.xhtml">WeightedSIMappingFinder</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finds a mapping with a weighted partial matching algorithm (subgraph isomorphism).  <a href="../../d3/d4f/classefd_1_1WeightedSIMappingFinder.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d7a/structefd_1_1WrapperVal.xhtml">WrapperVal</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wrapper for primitive values.  <a href="../../d9/d7a/structefd_1_1WrapperVal.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d6b/classefd_1_1Xbit.xhtml">Xbit</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Represents the id of one Quantum or Classical bit.  <a href="../../d9/d6b/classefd_1_1Xbit.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml">XbitToNumber</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Maps every quantum and classic bit (not register) to a number inside a vector.  <a href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d66/classefd_1_1XbitToNumberVisitor.xhtml">XbitToNumberVisitor</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d2b/classefd_1_1XbitToNumberWrapperPass.xhtml">XbitToNumberWrapperPass</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">WrapperPass that yields a <em><a class="el" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml" title="Maps every quantum and classic bit (not register) to a number inside a vector. ">XbitToNumber</a></em> structure.  <a href="../../de/d2b/classefd_1_1XbitToNumberWrapperPass.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a625e85d4ffb4570748a2b743ffbe5264"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="../../db/d1f/classefd_1_1NDGateSign.xhtml">NDGateSign</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a625e85d4ffb4570748a2b743ffbe5264">NDOpaque</a></td></tr>
<tr class="separator:a625e85d4ffb4570748a2b743ffbe5264"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5cd572a4b0d839b3694a9a96ed8d8382"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="../../df/d1b/classefd_1_1NDValue.xhtml">NDValue</a>&lt; <a class="el" href="../../d4/deb/namespaceefd.xhtml#a4b9e08590f163e56213281494374989b">IntVal</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a5cd572a4b0d839b3694a9a96ed8d8382">NDInt</a></td></tr>
<tr class="separator:a5cd572a4b0d839b3694a9a96ed8d8382"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09cc80a1bf39266962f4da51e728985f"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="../../df/d1b/classefd_1_1NDValue.xhtml">NDValue</a>&lt; <a class="el" href="../../d4/deb/namespaceefd.xhtml#afda2d98251b905794740a8026d564048">RealVal</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a09cc80a1bf39266962f4da51e728985f">NDReal</a></td></tr>
<tr class="separator:a09cc80a1bf39266962f4da51e728985f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5c0a6c0dcdf33158eb125b0e362ed4c"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="../../df/d1b/classefd_1_1NDValue.xhtml">NDValue</a>&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#ab5c0a6c0dcdf33158eb125b0e362ed4c">NDId</a></td></tr>
<tr class="separator:ab5c0a6c0dcdf33158eb125b0e362ed4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fb055f5422d20c23a91c4d293c3f278"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="../../df/d1b/classefd_1_1NDValue.xhtml">NDValue</a>&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a4fb055f5422d20c23a91c4d293c3f278">NDString</a></td></tr>
<tr class="separator:a4fb055f5422d20c23a91c4d293c3f278"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b9e08590f163e56213281494374989b"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="../../d9/d7a/structefd_1_1WrapperVal.xhtml">WrapperVal</a>&lt; long long &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a4b9e08590f163e56213281494374989b">IntVal</a></td></tr>
<tr class="separator:a4b9e08590f163e56213281494374989b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afda2d98251b905794740a8026d564048"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="../../d9/d7a/structefd_1_1WrapperVal.xhtml">WrapperVal</a>&lt; double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#afda2d98251b905794740a8026d564048">RealVal</a></td></tr>
<tr class="separator:afda2d98251b905794740a8026d564048"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12a4775008cb8b6242cedc3621d98f9c"><td class="memItemLeft" align="right" valign="top">typedef std::vector&lt; uint32_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">Mapping</a></td></tr>
<tr class="memdesc:a12a4775008cb8b6242cedc3621d98f9c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines the type used for mapping the qubits.  <a href="#a12a4775008cb8b6242cedc3621d98f9c">More...</a><br /></td></tr>
<tr class="separator:a12a4775008cb8b6242cedc3621d98f9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0370997575fb50e5567c20c151d37592"><td class="memItemLeft" align="right" valign="top">typedef std::vector&lt; uint32_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a0370997575fb50e5567c20c151d37592">Assign</a></td></tr>
<tr class="separator:a0370997575fb50e5567c20c151d37592"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c6eb9e95f5fad95ab54779a502ea54f"><td class="memItemLeft" align="right" valign="top">typedef std::vector&lt; <a class="el" href="../../d8/d62/structefd_1_1Swap.xhtml">Swap</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a8c6eb9e95f5fad95ab54779a502ea54f">SwapSeq</a></td></tr>
<tr class="separator:a8c6eb9e95f5fad95ab54779a502ea54f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a322a63a8ebe2e63f296bfc15537834f8"><td class="memItemLeft" align="right" valign="top">typedef std::shared_ptr&lt; <a class="el" href="../../d4/deb/namespaceefd.xhtml#a8004b6dc0a8b2ccefd74aab5048dceca">ArchRegistry</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a322a63a8ebe2e63f296bfc15537834f8">ArchRegistryPtr</a></td></tr>
<tr class="separator:a322a63a8ebe2e63f296bfc15537834f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd77a48a3f6c5314aaca88206992b9ca"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="../../dc/d5d/classefd_1_1EnumString.xhtml">EnumString</a>&lt; <a class="el" href="../../d4/deb/namespaceefd.xhtml#abc6b2068b056c3d6eb2cdf91fb7c2a3f">Architecture</a>, <a class="el" href="../../d4/deb/namespaceefd.xhtml#abc6b2068b056c3d6eb2cdf91fb7c2a3fa64c29e728ce10959619fecf95dfdb2e0">Architecture::A_ibmqx2</a>, <a class="el" href="../../d4/deb/namespaceefd.xhtml#abc6b2068b056c3d6eb2cdf91fb7c2a3faf056857258fc5529fd07434e014be39e">Architecture::A_ibmqx3</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#acd77a48a3f6c5314aaca88206992b9ca">EnumArchitecture</a></td></tr>
<tr class="separator:acd77a48a3f6c5314aaca88206992b9ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8004b6dc0a8b2ccefd74aab5048dceca"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml">Registry</a>&lt; <a class="el" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a88315c40377965306f4325aa39628a2e">ArchGraph::uRef</a>, int, <a class="el" href="../../d4/deb/namespaceefd.xhtml#acd77a48a3f6c5314aaca88206992b9ca">EnumArchitecture</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a8004b6dc0a8b2ccefd74aab5048dceca">ArchRegistry</a></td></tr>
<tr class="separator:a8004b6dc0a8b2ccefd74aab5048dceca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b20b38f174c9cd0c82139e64058d2cc"><td class="memItemLeft" align="right" valign="top">typedef std::shared_ptr&lt; <a class="el" href="../../d4/deb/namespaceefd.xhtml#a5cce8a027b81e5d87625d252efe5b763">efd::AllocatorRegistry</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a2b20b38f174c9cd0c82139e64058d2cc">AllocatorRegistryPtr</a></td></tr>
<tr class="separator:a2b20b38f174c9cd0c82139e64058d2cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a829f2abec26c6c5fffb5cf37501b3514"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="../../dc/d5d/classefd_1_1EnumString.xhtml">EnumString</a>&lt; <a class="el" href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3">Allocator</a>, <a class="el" href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3af97f0e1738303c3421f25d4c96fb15e5">Allocator::Q_dynprog</a>, <a class="el" href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3a1ced6ff54615ab285424576d17de7a20">Allocator::Q_wqubiter</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a829f2abec26c6c5fffb5cf37501b3514">EnumAllocator</a></td></tr>
<tr class="separator:a829f2abec26c6c5fffb5cf37501b3514"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5cce8a027b81e5d87625d252efe5b763"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml">Registry</a>&lt; <a class="el" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a77f63874f86014322b038db294d61fee">QbitAllocator::uRef</a>, <a class="el" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a8c9131ca43a772179c24fa4dc9701bb2">ArchGraph::sRef</a>, <a class="el" href="../../d4/deb/namespaceefd.xhtml#a829f2abec26c6c5fffb5cf37501b3514">EnumAllocator</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a5cce8a027b81e5d87625d252efe5b763">AllocatorRegistry</a></td></tr>
<tr class="separator:a5cce8a027b81e5d87625d252efe5b763"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0275945f2cb203058ead872f748857e9"><td class="memItemLeft" align="right" valign="top">typedef std::vector&lt; <a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">Node::Ref</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a0275945f2cb203058ead872f748857e9">Layer</a></td></tr>
<tr class="separator:a0275945f2cb203058ead872f748857e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22ed6438334f1d7c7b0d25f64dbf4d3f"><td class="memItemLeft" align="right" valign="top">typedef std::vector&lt; <a class="el" href="../../d4/deb/namespaceefd.xhtml#a0275945f2cb203058ead872f748857e9">Layer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a22ed6438334f1d7c7b0d25f64dbf4d3f">Layers</a></td></tr>
<tr class="separator:a22ed6438334f1d7c7b0d25f64dbf4d3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f9170fd3a6f78d50afc01229e241d61"><td class="memItemLeft" align="right" valign="top">typedef std::vector&lt; uint32_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a0f9170fd3a6f78d50afc01229e241d61">Ordering</a></td></tr>
<tr class="separator:a0f9170fd3a6f78d50afc01229e241d61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7b4d3aa641452ee659f9934c837f081"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="../../d2/d54/classefd_1_1WeightedGraph.xhtml">WeightedGraph</a>&lt; uint32_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#ab7b4d3aa641452ee659f9934c837f081">DependencyGraph</a></td></tr>
<tr class="separator:ab7b4d3aa641452ee659f9934c837f081"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:a685e3afd76819bc134a3dfdd44c9e4e9"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9">ExitCode</a> { <a class="el" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9a1414203994e495fe3ee8884d6e117bda">ExitCode::EXIT_multi_deps</a> = 11, 
<a class="el" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9ab39d20266cc0612b52ed96575e06809a">ExitCode::EXIT_unreachable</a>
 }<tr class="memdesc:a685e3afd76819bc134a3dfdd44c9e4e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instead of issueing an 'assert(false)', we should use this enum in order to exit with errors.  <a href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:a685e3afd76819bc134a3dfdd44c9e4e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc6b2068b056c3d6eb2cdf91fb7c2a3f"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#abc6b2068b056c3d6eb2cdf91fb7c2a3f">Architecture</a> { <a class="el" href="../../d4/deb/namespaceefd.xhtml#abc6b2068b056c3d6eb2cdf91fb7c2a3faaeec718b2db0450be32c794d08c6a208">Architecture::EFD_FIRSTLAST</a>, 
<a class="el" href="../../d4/deb/namespaceefd.xhtml#abc6b2068b056c3d6eb2cdf91fb7c2a3fae0a6d291522f23381fd3ca6ece8e09af">Architecture::EFD_ARCH</a>, 
<a class="el" href="../../d4/deb/namespaceefd.xhtml#abc6b2068b056c3d6eb2cdf91fb7c2a3fa64c29e728ce10959619fecf95dfdb2e0">Architecture::A_ibmqx2</a>, 
<a class="el" href="../../d4/deb/namespaceefd.xhtml#abc6b2068b056c3d6eb2cdf91fb7c2a3faf056857258fc5529fd07434e014be39e">Architecture::A_ibmqx3</a>
 }</td></tr>
<tr class="separator:abc6b2068b056c3d6eb2cdf91fb7c2a3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ab6f82f2df49bbde5c943bbe60c3cf3"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3">Allocator</a> { <br />
&#160;&#160;<a class="el" href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3aaeec718b2db0450be32c794d08c6a208">Allocator::EFD_FIRSTLAST</a>, 
<a class="el" href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3a8a9062601e84bd8c64f39390c8f34f44">Allocator::EFD_ALLOCATOR</a>, 
<a class="el" href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3a5f2ff2f4e828d337aa0921a6111b8d80">Allocator::EFD_ALLOCATOR_SIMPLE</a>, 
<a class="el" href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3af97f0e1738303c3421f25d4c96fb15e5">Allocator::Q_dynprog</a>, 
<br />
&#160;&#160;<a class="el" href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3ae7494a1f8337e0a4ba91c5eff47460ae">Allocator::Q_bsi</a>, 
<a class="el" href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3a4fd366ee0143b32c83ef047986051793">Allocator::Q_grdy</a>, 
<a class="el" href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3a5ad34663e134e7817dc08f0a0b383db7">Allocator::Q_ibm</a>, 
<a class="el" href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3aa7944e4e6eedca0bec9157df8044afd5">Allocator::Q_wpm</a>, 
<br />
&#160;&#160;<a class="el" href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3a23368eb439e9cb17dcc7161f58835449">Allocator::Q_random</a>, 
<a class="el" href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3a3a5da971871062a96c51d09fb57fef2e">Allocator::Q_qubiter</a>, 
<a class="el" href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3a1ced6ff54615ab285424576d17de7a20">Allocator::Q_wqubiter</a>
<br />
 }</td></tr>
<tr class="separator:a3ab6f82f2df49bbde5c943bbe60c3cf3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86abfbd43b436abb77f79e057546835c"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a86abfbd43b436abb77f79e057546835c">SolutionBuilderOptions</a> { <a class="el" href="../../d4/deb/namespaceefd.xhtml#a86abfbd43b436abb77f79e057546835ca87b05ab204327971d60c5f4ca3af152f">SolutionBuilderOptions::ImproveInitial</a> = 0, 
<a class="el" href="../../d4/deb/namespaceefd.xhtml#a86abfbd43b436abb77f79e057546835ca30dedc873b8a976ce386642a5b4dc262">SolutionBuilderOptions::KeepStats</a>
 }<tr class="memdesc:a86abfbd43b436abb77f79e057546835c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Options for solution builders.  <a href="../../d4/deb/namespaceefd.xhtml#a86abfbd43b436abb77f79e057546835c">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:a86abfbd43b436abb77f79e057546835c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a3fd26bc2a0a0c6d9948d0d3cef2e1515"><td class="memTemplParams" colspan="2">template&lt;typename TargetTy , typename SrcTy &gt; </td></tr>
<tr class="memitem:a3fd26bc2a0a0c6d9948d0d3cef2e1515"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a3fd26bc2a0a0c6d9948d0d3cef2e1515">instanceOf</a> (const SrcTy *src)</td></tr>
<tr class="memdesc:a3fd26bc2a0a0c6d9948d0d3cef2e1515"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the pointer <em>src</em> is of class <em>TargetTy</em>.  <a href="#a3fd26bc2a0a0c6d9948d0d3cef2e1515">More...</a><br /></td></tr>
<tr class="separator:a3fd26bc2a0a0c6d9948d0d3cef2e1515"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cef687225e13315fc282dc40b5a6909"><td class="memTemplParams" colspan="2">template&lt;typename TargetTy , typename SrcTy &gt; </td></tr>
<tr class="memitem:a2cef687225e13315fc282dc40b5a6909"><td class="memTemplItemLeft" align="right" valign="top">TargetTy *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a2cef687225e13315fc282dc40b5a6909">dynCast</a> (SrcTy *src)</td></tr>
<tr class="memdesc:a2cef687225e13315fc282dc40b5a6909"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns <em>src</em> cast to <em>TargetTy</em>, iff it is of class <em>TargetTy</em>, otherwise it will return nullptr.  <a href="#a2cef687225e13315fc282dc40b5a6909">More...</a><br /></td></tr>
<tr class="separator:a2cef687225e13315fc282dc40b5a6909"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa119fd70b5ec5d99dd8682d63d2e9a92"><td class="memTemplParams" colspan="2">template&lt;typename T , typename U &gt; </td></tr>
<tr class="memitem:aa119fd70b5ec5d99dd8682d63d2e9a92"><td class="memTemplItemLeft" align="right" valign="top">std::unique_ptr&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#aa119fd70b5ec5d99dd8682d63d2e9a92">uniqueCastBackward</a> (std::unique_ptr&lt; U &gt; from)</td></tr>
<tr class="memdesc:aa119fd70b5ec5d99dd8682d63d2e9a92"><td class="mdescLeft">&#160;</td><td class="mdescRight">Uses the RTTI framework to cast backwardly an unique_ptr.  <a href="#aa119fd70b5ec5d99dd8682d63d2e9a92">More...</a><br /></td></tr>
<tr class="separator:aa119fd70b5ec5d99dd8682d63d2e9a92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7adca0e4de58074aa3f91827469a491"><td class="memTemplParams" colspan="2">template&lt;typename T , typename U &gt; </td></tr>
<tr class="memitem:ad7adca0e4de58074aa3f91827469a491"><td class="memTemplItemLeft" align="right" valign="top">std::unique_ptr&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">uniqueCastForward</a> (std::unique_ptr&lt; U &gt; from)</td></tr>
<tr class="memdesc:ad7adca0e4de58074aa3f91827469a491"><td class="mdescLeft">&#160;</td><td class="mdescRight">Uses the RTTI framework to cast forwardly an unique_ptr.  <a href="#ad7adca0e4de58074aa3f91827469a491">More...</a><br /></td></tr>
<tr class="separator:ad7adca0e4de58074aa3f91827469a491"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d73093d1b1ab771a2e970412a565f39"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a5d73093d1b1ab771a2e970412a565f39"><td class="memTemplItemLeft" align="right" valign="top">std::shared_ptr&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a5d73093d1b1ab771a2e970412a565f39">toShared</a> (std::unique_ptr&lt; T &gt; from)</td></tr>
<tr class="memdesc:a5d73093d1b1ab771a2e970412a565f39"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wrapper function that "transforms" a <em>std::unique_ptr</em> into a <em>std::shared_ptr</em>.  <a href="#a5d73093d1b1ab771a2e970412a565f39">More...</a><br /></td></tr>
<tr class="separator:a5d73093d1b1ab771a2e970412a565f39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6bbed132b341f48d4aad4f970e3822bc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a6bbed132b341f48d4aad4f970e3822bc">ParseArguments</a> (const int argc, const char **argv)</td></tr>
<tr class="memdesc:a6bbed132b341f48d4aad4f970e3822bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses the command line arguments (this function should be used in the main function).  <a href="#a6bbed132b341f48d4aad4f970e3822bc">More...</a><br /></td></tr>
<tr class="separator:a6bbed132b341f48d4aad4f970e3822bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9701f22b92e06bad8f57614d98e5aa81"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a9701f22b92e06bad8f57614d98e5aa81">ParseArguments</a> (int argc, char **argv)</td></tr>
<tr class="separator:a9701f22b92e06bad8f57614d98e5aa81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c9a5fad6a8e4da658dcd2ca3b4cf881"><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a5c9a5fad6a8e4da658dcd2ca3b4cf881">ErrorLog</a> (std::string file=&quot;&quot;, uint32_t line=0)</td></tr>
<tr class="memdesc:a5c9a5fad6a8e4da658dcd2ca3b4cf881"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a stream object for logging errors.  <a href="#a5c9a5fad6a8e4da658dcd2ca3b4cf881">More...</a><br /></td></tr>
<tr class="separator:a5c9a5fad6a8e4da658dcd2ca3b4cf881"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a785b5c3a46b7a8b06bd7e1396dc7249b"><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a785b5c3a46b7a8b06bd7e1396dc7249b">WarningLog</a> (std::string file=&quot;&quot;, uint32_t line=0)</td></tr>
<tr class="memdesc:a785b5c3a46b7a8b06bd7e1396dc7249b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a stream object for logging warnings.  <a href="#a785b5c3a46b7a8b06bd7e1396dc7249b">More...</a><br /></td></tr>
<tr class="separator:a785b5c3a46b7a8b06bd7e1396dc7249b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7ab0ddc084143ffaf0d25c47f04fbce"><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#ad7ab0ddc084143ffaf0d25c47f04fbce">InfoLog</a> (std::string file=&quot;&quot;, uint32_t line=0)</td></tr>
<tr class="memdesc:ad7ab0ddc084143ffaf0d25c47f04fbce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a stream object for logging information.  <a href="#ad7ab0ddc084143ffaf0d25c47f04fbce">More...</a><br /></td></tr>
<tr class="separator:ad7ab0ddc084143ffaf0d25c47f04fbce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1a967a3ed912aa103f063af3586254a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#ac3abcc468d810fb7f8d9190ec324fbae">ArchRegistry::RetTy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#ac1a967a3ed912aa103f063af3586254a">CreateArchIBMQX2</a> (int pad)</td></tr>
<tr class="separator:ac1a967a3ed912aa103f063af3586254a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ed4b95e611c32983fd791351050fe9e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#ac3abcc468d810fb7f8d9190ec324fbae">ArchRegistry::RetTy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a7ed4b95e611c32983fd791351050fe9e">CreateArchIBMQX3</a> (int pad)</td></tr>
<tr class="separator:a7ed4b95e611c32983fd791351050fe9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a033a77baa1aa02f207c7a918246aeb59"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a033a77baa1aa02f207c7a918246aeb59">InitializeAllArchitectures</a> ()</td></tr>
<tr class="memdesc:a033a77baa1aa02f207c7a918246aeb59"><td class="mdescLeft">&#160;</td><td class="mdescRight">Registers all available architectures in the register.  <a href="#a033a77baa1aa02f207c7a918246aeb59">More...</a><br /></td></tr>
<tr class="separator:a033a77baa1aa02f207c7a918246aeb59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2b3e87bf8e57ce91119a679dd13440e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#ac2b3e87bf8e57ce91119a679dd13440e">HasArchitecture</a> (<a class="el" href="../../d4/deb/namespaceefd.xhtml#acd77a48a3f6c5314aaca88206992b9ca">EnumArchitecture</a> key)</td></tr>
<tr class="memdesc:ac2b3e87bf8e57ce91119a679dd13440e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if there is an architecture mapped by <code>key</code>;.  <a href="#ac2b3e87bf8e57ce91119a679dd13440e">More...</a><br /></td></tr>
<tr class="separator:ac2b3e87bf8e57ce91119a679dd13440e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae853118f01bb2a68370fdb21db43b4f0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#ae853118f01bb2a68370fdb21db43b4f0">RegisterArchitecture</a> (<a class="el" href="../../d4/deb/namespaceefd.xhtml#acd77a48a3f6c5314aaca88206992b9ca">EnumArchitecture</a> key, <a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#ac2bb0afac7192e2bce5e51b4fc2955d3">ArchRegistry::CtorTy</a> ctor)</td></tr>
<tr class="memdesc:ae853118f01bb2a68370fdb21db43b4f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Register an architecture, mapping <code>key</code> to <code>ctor</code>.  <a href="#ae853118f01bb2a68370fdb21db43b4f0">More...</a><br /></td></tr>
<tr class="separator:ae853118f01bb2a68370fdb21db43b4f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24ee93e1ddaa0a368ff107a3f2e85771"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#ac3abcc468d810fb7f8d9190ec324fbae">ArchRegistry::RetTy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a24ee93e1ddaa0a368ff107a3f2e85771">CreateArchitecture</a> (<a class="el" href="../../d4/deb/namespaceefd.xhtml#acd77a48a3f6c5314aaca88206992b9ca">EnumArchitecture</a> key)</td></tr>
<tr class="memdesc:a24ee93e1ddaa0a368ff107a3f2e85771"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an architecture referenced by <code>name</code>.  <a href="#a24ee93e1ddaa0a368ff107a3f2e85771">More...</a><br /></td></tr>
<tr class="separator:a24ee93e1ddaa0a368ff107a3f2e85771"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acef44623062a67b96096a7d9d4448433"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#acef44623062a67b96096a7d9d4448433">PrintStats</a> (std::ostream &amp;out=std::cout)</td></tr>
<tr class="memdesc:acef44623062a67b96096a7d9d4448433"><td class="mdescLeft">&#160;</td><td class="mdescRight">Usually called in the end of the program, i.e. when all statistical data have already been collected.  <a href="#acef44623062a67b96096a7d9d4448433">More...</a><br /></td></tr>
<tr class="separator:acef44623062a67b96096a7d9d4448433"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4b41f17586b3bdf847d049e8994977c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#ae4b41f17586b3bdf847d049e8994977c">InitializeAllQbitAllocators</a> ()</td></tr>
<tr class="separator:ae4b41f17586b3bdf847d049e8994977c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af76f2871ea0244bc6e2b4a475d5cd3e3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#af76f2871ea0244bc6e2b4a475d5cd3e3">HasAllocator</a> (<a class="el" href="../../d4/deb/namespaceefd.xhtml#a829f2abec26c6c5fffb5cf37501b3514">EnumAllocator</a> key)</td></tr>
<tr class="memdesc:af76f2871ea0244bc6e2b4a475d5cd3e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if there is an allocator mapped by <code>key</code>;.  <a href="#af76f2871ea0244bc6e2b4a475d5cd3e3">More...</a><br /></td></tr>
<tr class="separator:af76f2871ea0244bc6e2b4a475d5cd3e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6303951fd07cf01d0c0e36b91b045b54"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a6303951fd07cf01d0c0e36b91b045b54">RegisterQbitAllocator</a> (<a class="el" href="../../d4/deb/namespaceefd.xhtml#a829f2abec26c6c5fffb5cf37501b3514">EnumAllocator</a> key, <a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#ac2bb0afac7192e2bce5e51b4fc2955d3">AllocatorRegistry::CtorTy</a> ctor)</td></tr>
<tr class="memdesc:a6303951fd07cf01d0c0e36b91b045b54"><td class="mdescLeft">&#160;</td><td class="mdescRight">Registers an allocator, mapping <code>name</code> to <code>ctor</code>.  <a href="#a6303951fd07cf01d0c0e36b91b045b54">More...</a><br /></td></tr>
<tr class="separator:a6303951fd07cf01d0c0e36b91b045b54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68293834a9b09cd376067ab0d3b27a92"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#ac3abcc468d810fb7f8d9190ec324fbae">AllocatorRegistry::RetTy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a68293834a9b09cd376067ab0d3b27a92">CreateQbitAllocator</a> (<a class="el" href="../../d4/deb/namespaceefd.xhtml#a829f2abec26c6c5fffb5cf37501b3514">EnumAllocator</a> key, <a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#a1568c83cf71bd7a44e7dd0e401592e2d">AllocatorRegistry::ArgTy</a> arg)</td></tr>
<tr class="memdesc:a68293834a9b09cd376067ab0d3b27a92"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an allocator referenced by <code>name</code> with arguments <code>arg</code>.  <a href="#a68293834a9b09cd376067ab0d3b27a92">More...</a><br /></td></tr>
<tr class="separator:a68293834a9b09cd376067ab0d3b27a92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b85c55f4f23821dedd4a7966df901c0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#ac3abcc468d810fb7f8d9190ec324fbae">AllocatorRegistry::RetTy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a4b85c55f4f23821dedd4a7966df901c0">CreateDynprogDepSolver</a> (<a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#a1568c83cf71bd7a44e7dd0e401592e2d">AllocatorRegistry::ArgTy</a> arg)</td></tr>
<tr class="separator:a4b85c55f4f23821dedd4a7966df901c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29b021cda3931b1603b72b2b45f169c8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#ac3abcc468d810fb7f8d9190ec324fbae">AllocatorRegistry::RetTy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a29b021cda3931b1603b72b2b45f169c8">CreateBoundedSIDepSolver</a> (<a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#a1568c83cf71bd7a44e7dd0e401592e2d">AllocatorRegistry::ArgTy</a> arg)</td></tr>
<tr class="separator:a29b021cda3931b1603b72b2b45f169c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6fae2ef1c68a631ebcefda367a89e25"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#ac3abcc468d810fb7f8d9190ec324fbae">AllocatorRegistry::RetTy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#af6fae2ef1c68a631ebcefda367a89e25">CreateGreedyCktQAllocator</a> (<a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#a1568c83cf71bd7a44e7dd0e401592e2d">AllocatorRegistry::ArgTy</a> arg)</td></tr>
<tr class="separator:af6fae2ef1c68a631ebcefda367a89e25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9db9e3409cfe38bea500cef5079bd035"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#ac3abcc468d810fb7f8d9190ec324fbae">AllocatorRegistry::RetTy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a9db9e3409cfe38bea500cef5079bd035">CreateIBMQAllocator</a> (<a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#a1568c83cf71bd7a44e7dd0e401592e2d">AllocatorRegistry::ArgTy</a> arg)</td></tr>
<tr class="separator:a9db9e3409cfe38bea500cef5079bd035"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e072897b1003b83e4f95d0093a8c27a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#ac3abcc468d810fb7f8d9190ec324fbae">AllocatorRegistry::RetTy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a9e072897b1003b83e4f95d0093a8c27a">CreateWeightedSIMappingFinderWithPathGuidedSolBuilder</a> (<a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#a1568c83cf71bd7a44e7dd0e401592e2d">AllocatorRegistry::ArgTy</a> arg)</td></tr>
<tr class="separator:a9e072897b1003b83e4f95d0093a8c27a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a427edad3eca821a641d5460f4b71b716"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#ac3abcc468d810fb7f8d9190ec324fbae">AllocatorRegistry::RetTy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a427edad3eca821a641d5460f4b71b716">CreateRandomMappingFinderWithPathGuidedSolBuilder</a> (<a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#a1568c83cf71bd7a44e7dd0e401592e2d">AllocatorRegistry::ArgTy</a> arg)</td></tr>
<tr class="separator:a427edad3eca821a641d5460f4b71b716"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28247af210548fec398e5024d284f155"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#ac3abcc468d810fb7f8d9190ec324fbae">AllocatorRegistry::RetTy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a28247af210548fec398e5024d284f155">CreateIdentityMappingFinderWithQbitterSolBuilder</a> (<a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#a1568c83cf71bd7a44e7dd0e401592e2d">AllocatorRegistry::ArgTy</a> arg)</td></tr>
<tr class="separator:a28247af210548fec398e5024d284f155"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb8728bc76fefc0c3913c6470202b62b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#ac3abcc468d810fb7f8d9190ec324fbae">AllocatorRegistry::RetTy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#aeb8728bc76fefc0c3913c6470202b62b">CreateWeightedSIMappingFinderWithQbitterSolBuilder</a> (<a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#a1568c83cf71bd7a44e7dd0e401592e2d">AllocatorRegistry::ArgTy</a> arg)</td></tr>
<tr class="separator:aeb8728bc76fefc0c3913c6470202b62b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b9a652c9403e0dbe7115d9d7f5e7d62"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a0370997575fb50e5567c20c151d37592">Assign</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">GenAssignment</a> (uint32_t archQ, <a class="el" href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">Mapping</a> mapping, bool fill=true)</td></tr>
<tr class="memdesc:a5b9a652c9403e0dbe7115d9d7f5e7d62"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generates an assignment mapping (maps the architecture's qubits to the logical ones) of size <code>archQ</code>.  <a href="#a5b9a652c9403e0dbe7115d9d7f5e7d62">More...</a><br /></td></tr>
<tr class="separator:a5b9a652c9403e0dbe7115d9d7f5e7d62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18b0007f75e6b8d651b15754ff89f910"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a18b0007f75e6b8d651b15754ff89f910">Fill</a> (uint32_t archQ, <a class="el" href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">Mapping</a> &amp;mapping)</td></tr>
<tr class="memdesc:a18b0007f75e6b8d651b15754ff89f910"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fills the unmapped qubits with the ones missing.  <a href="#a18b0007f75e6b8d651b15754ff89f910">More...</a><br /></td></tr>
<tr class="separator:a18b0007f75e6b8d651b15754ff89f910"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35884a2adaf86bf35e7e3f1f65acc522"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a35884a2adaf86bf35e7e3f1f65acc522">Fill</a> (<a class="el" href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">Mapping</a> &amp;mapping, <a class="el" href="../../d4/deb/namespaceefd.xhtml#a0370997575fb50e5567c20c151d37592">Assign</a> &amp;assign)</td></tr>
<tr class="separator:a35884a2adaf86bf35e7e3f1f65acc522"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a186bbb1cec68c992374b8795b10af1a8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">Mapping</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a186bbb1cec68c992374b8795b10af1a8">IdentityMapping</a> (uint32_t progQ)</td></tr>
<tr class="memdesc:a186bbb1cec68c992374b8795b10af1a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an identity mapping.  <a href="#a186bbb1cec68c992374b8795b10af1a8">More...</a><br /></td></tr>
<tr class="separator:a186bbb1cec68c992374b8795b10af1a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac5a20e6db5d358cf72d4816441d0b0d"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#aac5a20e6db5d358cf72d4816441d0b0d">MappingToString</a> (<a class="el" href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">Mapping</a> m)</td></tr>
<tr class="memdesc:aac5a20e6db5d358cf72d4816441d0b0d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prints the mapping <code>m</code> to a string and returns it.  <a href="#aac5a20e6db5d358cf72d4816441d0b0d">More...</a><br /></td></tr>
<tr class="separator:aac5a20e6db5d358cf72d4816441d0b0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd4cde60c75b526798dab375aa82125c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#acd4cde60c75b526798dab375aa82125c">InlineGate</a> (<a class="el" href="../../dd/d52/classefd_1_1QModule.xhtml#a66b6cdbe4eef6e77afbf7fd3148b9f02">QModule::Ref</a> qmod, <a class="el" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a27de177a3e7801a76d34e00afcae9838">NDQOp::Ref</a> qop)</td></tr>
<tr class="memdesc:acd4cde60c75b526798dab375aa82125c"><td class="mdescLeft">&#160;</td><td class="mdescRight">If found, inlines the gate that <code>qop</code> calls.  <a href="#acd4cde60c75b526798dab375aa82125c">More...</a><br /></td></tr>
<tr class="separator:acd4cde60c75b526798dab375aa82125c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b8442e2de32a9529d7a4fcd5829ef62"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a5b8442e2de32a9529d7a4fcd5829ef62">ProcessAST</a> (<a class="el" href="../../dd/d52/classefd_1_1QModule.xhtml#a66b6cdbe4eef6e77afbf7fd3148b9f02">QModule::Ref</a> qmod, <a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">Node::Ref</a> root)</td></tr>
<tr class="memdesc:a5b8442e2de32a9529d7a4fcd5829ef62"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processes the <code>root</code> node, and transform the entire AST into a <a class="el" href="../../dd/d52/classefd_1_1QModule.xhtml" title="Qasm module representation. ">QModule</a>.  <a href="#a5b8442e2de32a9529d7a4fcd5829ef62">More...</a><br /></td></tr>
<tr class="separator:a5b8442e2de32a9529d7a4fcd5829ef62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a194305909125a1398a1f0e00fbae1cf5"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a2c3fab44d60678aba91904ff92f5084c">NDGateSign::uRef</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a194305909125a1398a1f0e00fbae1cf5">GetIntrinsicGates</a> ()</td></tr>
<tr class="memdesc:a194305909125a1398a1f0e00fbae1cf5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a vector with the intrinsic gates implementation.  <a href="#a194305909125a1398a1f0e00fbae1cf5">More...</a><br /></td></tr>
<tr class="separator:a194305909125a1398a1f0e00fbae1cf5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad83c1dbaa41519964485ea8e2437bcb7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a5ef5ed743ddb6e586602c5242f2f36cc">NDQOp::uRef</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#ad83c1dbaa41519964485ea8e2437bcb7">CreateISwap</a> (<a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> lhs, <a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> rhs)</td></tr>
<tr class="memdesc:ad83c1dbaa41519964485ea8e2437bcb7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a call to the intrinsic swap function.  <a href="#ad83c1dbaa41519964485ea8e2437bcb7">More...</a><br /></td></tr>
<tr class="separator:ad83c1dbaa41519964485ea8e2437bcb7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c72243a170ffe8a4836e7092fd1469f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a5ef5ed743ddb6e586602c5242f2f36cc">NDQOp::uRef</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a3c72243a170ffe8a4836e7092fd1469f">CreateILongCX</a> (<a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> lhs, <a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> middle, <a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> rhs)</td></tr>
<tr class="memdesc:a3c72243a170ffe8a4836e7092fd1469f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a call to the intrinsic long cnot function.  <a href="#a3c72243a170ffe8a4836e7092fd1469f">More...</a><br /></td></tr>
<tr class="separator:a3c72243a170ffe8a4836e7092fd1469f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8e947f977669e54d6aaf3a43815833c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a5ef5ed743ddb6e586602c5242f2f36cc">NDQOp::uRef</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#af8e947f977669e54d6aaf3a43815833c">CreateIRevCX</a> (<a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> lhs, <a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> rhs)</td></tr>
<tr class="memdesc:af8e947f977669e54d6aaf3a43815833c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a call to the intrinsic reversal cnot function.  <a href="#af8e947f977669e54d6aaf3a43815833c">More...</a><br /></td></tr>
<tr class="separator:af8e947f977669e54d6aaf3a43815833c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9c1264648ba0395505dc5b54358c0a9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#ab9c1264648ba0395505dc5b54358c0a9">IsCNOTGateCall</a> (<a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">Node::Ref</a> ref)</td></tr>
<tr class="memdesc:ab9c1264648ba0395505dc5b54358c0a9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether <code>ref</code> is a CNOT gate.  <a href="#ab9c1264648ba0395505dc5b54358c0a9">More...</a><br /></td></tr>
<tr class="separator:ab9c1264648ba0395505dc5b54358c0a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1264355b1eb1da02a2ae2c1906ce0a5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#ac1264355b1eb1da02a2ae2c1906ce0a5">IsIntrinsicGateCall</a> (<a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">Node::Ref</a> ref)</td></tr>
<tr class="memdesc:ac1264355b1eb1da02a2ae2c1906ce0a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether <code>ref</code> is (or should be) an intrinsic gate.  <a href="#ac1264355b1eb1da02a2ae2c1906ce0a5">More...</a><br /></td></tr>
<tr class="separator:ac1264355b1eb1da02a2ae2c1906ce0a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6cbddf16d36e971fff36629ed192269b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a287cbca5c6c5fbf565ac32f435030eac">NDQOpGen::IntrinsicKind</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a6cbddf16d36e971fff36629ed192269b">GetIntrinsicKind</a> (<a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">Node::Ref</a> ref)</td></tr>
<tr class="memdesc:a6cbddf16d36e971fff36629ed192269b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the <a class="el" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a287cbca5c6c5fbf565ac32f435030eac">NDQOpGen::IntrinsicKind</a>, given a <a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml" title="Base class for AST nodes. ">Node</a> <code>ref</code>.  <a href="#a6cbddf16d36e971fff36629ed192269b">More...</a><br /></td></tr>
<tr class="separator:a6cbddf16d36e971fff36629ed192269b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ef7671eeb9b9b12d20549b08b9269c2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a5ef5ed743ddb6e586602c5242f2f36cc">NDQOp::uRef</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a4ef7671eeb9b9b12d20549b08b9269c2">CreateIntrinsicGate</a> (<a class="el" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a287cbca5c6c5fbf565ac32f435030eac">NDQOpGen::IntrinsicKind</a> kind, std::vector&lt; <a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> &gt; qargs)</td></tr>
<tr class="memdesc:a4ef7671eeb9b9b12d20549b08b9269c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an intrinsic gate of kind <code>kind</code> and arguments <code>args</code>.  <a href="#a4ef7671eeb9b9b12d20549b08b9269c2">More...</a><br /></td></tr>
<tr class="separator:a4ef7671eeb9b9b12d20549b08b9269c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b1cf6e8a83c7c7e449ef7f3ea28287c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/d52/classefd_1_1QModule.xhtml#a85ca5b04a1d4d196b30004c3e1acaf7e">QModule::uRef</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a6b1cf6e8a83c7c7e449ef7f3ea28287c">Compile</a> (<a class="el" href="../../dd/d52/classefd_1_1QModule.xhtml#a85ca5b04a1d4d196b30004c3e1acaf7e">QModule::uRef</a> qmod, <a class="el" href="../../d0/d62/structefd_1_1CompilationSettings.xhtml">CompilationSettings</a> settings)</td></tr>
<tr class="memdesc:a6b1cf6e8a83c7c7e449ef7f3ea28287c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compile <code>qmod</code>, and return the compiled version.  <a href="#a6b1cf6e8a83c7c7e449ef7f3ea28287c">More...</a><br /></td></tr>
<tr class="separator:a6b1cf6e8a83c7c7e449ef7f3ea28287c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35de5eb64a67e06cc3326d2eff64abba"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/d52/classefd_1_1QModule.xhtml#a85ca5b04a1d4d196b30004c3e1acaf7e">QModule::uRef</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a35de5eb64a67e06cc3326d2eff64abba">ParseFile</a> (std::string filepath)</td></tr>
<tr class="memdesc:a35de5eb64a67e06cc3326d2eff64abba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parse file in the path <code>filepath</code>.  <a href="#a35de5eb64a67e06cc3326d2eff64abba">More...</a><br /></td></tr>
<tr class="separator:a35de5eb64a67e06cc3326d2eff64abba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a540a63d03d49cb675f4f9d62e6b07780"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a540a63d03d49cb675f4f9d62e6b07780">PrintToStream</a> (<a class="el" href="../../dd/d52/classefd_1_1QModule.xhtml#a66b6cdbe4eef6e77afbf7fd3148b9f02">QModule::Ref</a> qmod, std::ostream &amp;o=std::cout, bool pretty=true)</td></tr>
<tr class="memdesc:a540a63d03d49cb675f4f9d62e6b07780"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print <code>qmod</code> to an standard output stream <code>o</code>.  <a href="#a540a63d03d49cb675f4f9d62e6b07780">More...</a><br /></td></tr>
<tr class="separator:a540a63d03d49cb675f4f9d62e6b07780"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fe79e93e6a1353b6d765bf2e540ee1c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a4fe79e93e6a1353b6d765bf2e540ee1c">PrintDependencyGraph</a> (<a class="el" href="../../dd/d52/classefd_1_1QModule.xhtml#a66b6cdbe4eef6e77afbf7fd3148b9f02">QModule::Ref</a> qmod, std::ostream &amp;o=std::cout)</td></tr>
<tr class="memdesc:a4fe79e93e6a1353b6d765bf2e540ee1c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print the dependency graph of the <code>qmod</code> in <code>o</code>.  <a href="#a4fe79e93e6a1353b6d765bf2e540ee1c">More...</a><br /></td></tr>
<tr class="separator:a4fe79e93e6a1353b6d765bf2e540ee1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4181eb2261a81187a3e8800ec2782ed"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#ab4181eb2261a81187a3e8800ec2782ed">ParseFile</a> (std::string filename, std::string path=&quot;./&quot;, bool forceStdLib=true)</td></tr>
<tr class="memdesc:ab4181eb2261a81187a3e8800ec2782ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parse <code>filename</code> at <code>path</code>.  <a href="#ab4181eb2261a81187a3e8800ec2782ed">More...</a><br /></td></tr>
<tr class="separator:ab4181eb2261a81187a3e8800ec2782ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93709641ce1593c2f8143206beb0a699"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a93709641ce1593c2f8143206beb0a699">ParseString</a> (std::string program, bool forceStdLib=true)</td></tr>
<tr class="memdesc:a93709641ce1593c2f8143206beb0a699"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parse the string <code>program</code>.  <a href="#a93709641ce1593c2f8143206beb0a699">More...</a><br /></td></tr>
<tr class="separator:a93709641ce1593c2f8143206beb0a699"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:afaf520a011031e3dc171b2896cba167f"><td class="memItemLeft" align="right" valign="top">const std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/deb/namespaceefd.xhtml#afaf520a011031e3dc171b2896cba167f">StdLibCX</a> = &quot;cx&quot;</td></tr>
<tr class="separator:afaf520a011031e3dc171b2896cba167f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="a5cce8a027b81e5d87625d252efe5b763"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5cce8a027b81e5d87625d252efe5b763">&#9670;&nbsp;</a></span>AllocatorRegistry</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml">Registry</a>&lt;<a class="el" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a77f63874f86014322b038db294d61fee">QbitAllocator::uRef</a>, <a class="el" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a8c9131ca43a772179c24fa4dc9701bb2">ArchGraph::sRef</a>, <a class="el" href="../../d4/deb/namespaceefd.xhtml#a829f2abec26c6c5fffb5cf37501b3514">EnumAllocator</a>&gt; <a class="el" href="../../d4/deb/namespaceefd.xhtml#a5cce8a027b81e5d87625d252efe5b763">efd::AllocatorRegistry</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../db/db1/Allocators_8h_source.xhtml#l00034">34</a> of file <a class="el" href="../../db/db1/Allocators_8h_source.xhtml">Allocators.h</a>.</p>

</div>
</div>
<a id="a2b20b38f174c9cd0c82139e64058d2cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b20b38f174c9cd0c82139e64058d2cc">&#9670;&nbsp;</a></span>AllocatorRegistryPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::shared_ptr&lt;<a class="el" href="../../d4/deb/namespaceefd.xhtml#a5cce8a027b81e5d87625d252efe5b763">efd::AllocatorRegistry</a>&gt; <a class="el" href="../../d4/deb/namespaceefd.xhtml#a2b20b38f174c9cd0c82139e64058d2cc">efd::AllocatorRegistryPtr</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../dc/dea/Allocators_8cpp_source.xhtml#l00017">17</a> of file <a class="el" href="../../dc/dea/Allocators_8cpp_source.xhtml">Allocators.cpp</a>.</p>

</div>
</div>
<a id="a8004b6dc0a8b2ccefd74aab5048dceca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8004b6dc0a8b2ccefd74aab5048dceca">&#9670;&nbsp;</a></span>ArchRegistry</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml">Registry</a>&lt;<a class="el" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a88315c40377965306f4325aa39628a2e">ArchGraph::uRef</a>, int, <a class="el" href="../../d4/deb/namespaceefd.xhtml#acd77a48a3f6c5314aaca88206992b9ca">EnumArchitecture</a>&gt; <a class="el" href="../../d4/deb/namespaceefd.xhtml#a8004b6dc0a8b2ccefd74aab5048dceca">efd::ArchRegistry</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../da/d8e/Architectures_8h_source.xhtml#l00028">28</a> of file <a class="el" href="../../da/d8e/Architectures_8h_source.xhtml">Architectures.h</a>.</p>

</div>
</div>
<a id="a322a63a8ebe2e63f296bfc15537834f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a322a63a8ebe2e63f296bfc15537834f8">&#9670;&nbsp;</a></span>ArchRegistryPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::shared_ptr&lt;<a class="el" href="../../d4/deb/namespaceefd.xhtml#a8004b6dc0a8b2ccefd74aab5048dceca">ArchRegistry</a>&gt; <a class="el" href="../../d4/deb/namespaceefd.xhtml#a322a63a8ebe2e63f296bfc15537834f8">efd::ArchRegistryPtr</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../d5/d6e/Architectures_8cpp_source.xhtml#l00006">6</a> of file <a class="el" href="../../d5/d6e/Architectures_8cpp_source.xhtml">Architectures.cpp</a>.</p>

</div>
</div>
<a id="a0370997575fb50e5567c20c151d37592"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0370997575fb50e5567c20c151d37592">&#9670;&nbsp;</a></span>Assign</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::vector&lt;uint32_t&gt; <a class="el" href="../../d4/deb/namespaceefd.xhtml#a0370997575fb50e5567c20c151d37592">efd::Assign</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../d1/d73/Defs_8h_source.xhtml#l00012">12</a> of file <a class="el" href="../../d1/d73/Defs_8h_source.xhtml">Defs.h</a>.</p>

</div>
</div>
<a id="ab7b4d3aa641452ee659f9934c837f081"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7b4d3aa641452ee659f9934c837f081">&#9670;&nbsp;</a></span>DependencyGraph</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="../../d2/d54/classefd_1_1WeightedGraph.xhtml">WeightedGraph</a>&lt;uint32_t&gt; <a class="el" href="../../d4/deb/namespaceefd.xhtml#ab7b4d3aa641452ee659f9934c837f081">efd::DependencyGraph</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../d9/d58/DependencyGraphBuilderPass_8h_source.xhtml#l00009">9</a> of file <a class="el" href="../../d9/d58/DependencyGraphBuilderPass_8h_source.xhtml">DependencyGraphBuilderPass.h</a>.</p>

</div>
</div>
<a id="a829f2abec26c6c5fffb5cf37501b3514"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a829f2abec26c6c5fffb5cf37501b3514">&#9670;&nbsp;</a></span>EnumAllocator</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="../../dc/d5d/classefd_1_1EnumString.xhtml">EnumString</a>&lt;<a class="el" href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3">Allocator</a>, <a class="el" href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3af97f0e1738303c3421f25d4c96fb15e5">Allocator::Q_dynprog</a> , <a class="el" href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3a1ced6ff54615ab285424576d17de7a20">Allocator::Q_wqubiter</a> &gt; <a class="el" href="../../d4/deb/namespaceefd.xhtml#a829f2abec26c6c5fffb5cf37501b3514">efd::EnumAllocator</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../db/db1/Allocators_8h_source.xhtml#l00002">2</a> of file <a class="el" href="../../db/db1/Allocators_8h_source.xhtml">Allocators.h</a>.</p>

</div>
</div>
<a id="acd77a48a3f6c5314aaca88206992b9ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd77a48a3f6c5314aaca88206992b9ca">&#9670;&nbsp;</a></span>EnumArchitecture</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="../../dc/d5d/classefd_1_1EnumString.xhtml">EnumString</a>&lt;<a class="el" href="../../d4/deb/namespaceefd.xhtml#abc6b2068b056c3d6eb2cdf91fb7c2a3f">Architecture</a>, <a class="el" href="../../d4/deb/namespaceefd.xhtml#abc6b2068b056c3d6eb2cdf91fb7c2a3fa64c29e728ce10959619fecf95dfdb2e0">Architecture::A_ibmqx2</a> , <a class="el" href="../../d4/deb/namespaceefd.xhtml#abc6b2068b056c3d6eb2cdf91fb7c2a3faf056857258fc5529fd07434e014be39e">Architecture::A_ibmqx3</a> &gt; <a class="el" href="../../d4/deb/namespaceefd.xhtml#acd77a48a3f6c5314aaca88206992b9ca">efd::EnumArchitecture</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../da/d8e/Architectures_8h_source.xhtml#l00002">2</a> of file <a class="el" href="../../da/d8e/Architectures_8h_source.xhtml">Architectures.h</a>.</p>

</div>
</div>
<a id="a4b9e08590f163e56213281494374989b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b9e08590f163e56213281494374989b">&#9670;&nbsp;</a></span>IntVal</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="../../d9/d7a/structefd_1_1WrapperVal.xhtml">WrapperVal</a>&lt;long long&gt; <a class="el" href="../../d4/deb/namespaceefd.xhtml#a4b9e08590f163e56213281494374989b">efd::IntVal</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../d1/d2e/WrapperVal_8h_source.xhtml#l00030">30</a> of file <a class="el" href="../../d1/d2e/WrapperVal_8h_source.xhtml">WrapperVal.h</a>.</p>

</div>
</div>
<a id="a0275945f2cb203058ead872f748857e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0275945f2cb203058ead872f748857e9">&#9670;&nbsp;</a></span>Layer</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::vector&lt;<a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">Node::Ref</a>&gt; <a class="el" href="../../d4/deb/namespaceefd.xhtml#a0275945f2cb203058ead872f748857e9">efd::Layer</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../dc/d33/LayersBuilderPass_8h_source.xhtml#l00011">11</a> of file <a class="el" href="../../dc/d33/LayersBuilderPass_8h_source.xhtml">LayersBuilderPass.h</a>.</p>

</div>
</div>
<a id="a22ed6438334f1d7c7b0d25f64dbf4d3f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22ed6438334f1d7c7b0d25f64dbf4d3f">&#9670;&nbsp;</a></span>Layers</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::vector&lt;<a class="el" href="../../d4/deb/namespaceefd.xhtml#a0275945f2cb203058ead872f748857e9">Layer</a>&gt; <a class="el" href="../../d4/deb/namespaceefd.xhtml#a22ed6438334f1d7c7b0d25f64dbf4d3f">efd::Layers</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../dc/d33/LayersBuilderPass_8h_source.xhtml#l00013">13</a> of file <a class="el" href="../../dc/d33/LayersBuilderPass_8h_source.xhtml">LayersBuilderPass.h</a>.</p>

</div>
</div>
<a id="a12a4775008cb8b6242cedc3621d98f9c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a12a4775008cb8b6242cedc3621d98f9c">&#9670;&nbsp;</a></span>Mapping</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::vector&lt;uint32_t&gt; <a class="el" href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">efd::Mapping</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Defines the type used for mapping the qubits. </p>

<p class="definition">Definition at line <a class="el" href="../../d1/d73/Defs_8h_source.xhtml#l00011">11</a> of file <a class="el" href="../../d1/d73/Defs_8h_source.xhtml">Defs.h</a>.</p>

</div>
</div>
<a id="ab5c0a6c0dcdf33158eb125b0e362ed4c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab5c0a6c0dcdf33158eb125b0e362ed4c">&#9670;&nbsp;</a></span>NDId</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="../../df/d1b/classefd_1_1NDValue.xhtml">NDValue</a>&lt;std::string&gt; <a class="el" href="../../d4/deb/namespaceefd.xhtml#ab5c0a6c0dcdf33158eb125b0e362ed4c">efd::NDId</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../d4/daf/Nodes_8h_source.xhtml#l00214">214</a> of file <a class="el" href="../../d4/daf/Nodes_8h_source.xhtml">Nodes.h</a>.</p>

</div>
</div>
<a id="a5cd572a4b0d839b3694a9a96ed8d8382"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5cd572a4b0d839b3694a9a96ed8d8382">&#9670;&nbsp;</a></span>NDInt</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="../../df/d1b/classefd_1_1NDValue.xhtml">NDValue</a>&lt;<a class="el" href="../../d4/deb/namespaceefd.xhtml#a4b9e08590f163e56213281494374989b">IntVal</a>&gt; <a class="el" href="../../d4/deb/namespaceefd.xhtml#a5cd572a4b0d839b3694a9a96ed8d8382">efd::NDInt</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../d4/daf/Nodes_8h_source.xhtml#l00212">212</a> of file <a class="el" href="../../d4/daf/Nodes_8h_source.xhtml">Nodes.h</a>.</p>

</div>
</div>
<a id="a625e85d4ffb4570748a2b743ffbe5264"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a625e85d4ffb4570748a2b743ffbe5264">&#9670;&nbsp;</a></span>NDOpaque</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="../../db/d1f/classefd_1_1NDGateSign.xhtml">NDGateSign</a> <a class="el" href="../../d4/deb/namespaceefd.xhtml#a625e85d4ffb4570748a2b743ffbe5264">efd::NDOpaque</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../d4/daf/Nodes_8h_source.xhtml#l00034">34</a> of file <a class="el" href="../../d4/daf/Nodes_8h_source.xhtml">Nodes.h</a>.</p>

</div>
</div>
<a id="a09cc80a1bf39266962f4da51e728985f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a09cc80a1bf39266962f4da51e728985f">&#9670;&nbsp;</a></span>NDReal</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="../../df/d1b/classefd_1_1NDValue.xhtml">NDValue</a>&lt;<a class="el" href="../../d4/deb/namespaceefd.xhtml#afda2d98251b905794740a8026d564048">RealVal</a>&gt; <a class="el" href="../../d4/deb/namespaceefd.xhtml#a09cc80a1bf39266962f4da51e728985f">efd::NDReal</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../d4/daf/Nodes_8h_source.xhtml#l00213">213</a> of file <a class="el" href="../../d4/daf/Nodes_8h_source.xhtml">Nodes.h</a>.</p>

</div>
</div>
<a id="a4fb055f5422d20c23a91c4d293c3f278"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4fb055f5422d20c23a91c4d293c3f278">&#9670;&nbsp;</a></span>NDString</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="../../df/d1b/classefd_1_1NDValue.xhtml">NDValue</a>&lt;std::string&gt; <a class="el" href="../../d4/deb/namespaceefd.xhtml#a4fb055f5422d20c23a91c4d293c3f278">efd::NDString</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../d4/daf/Nodes_8h_source.xhtml#l00215">215</a> of file <a class="el" href="../../d4/daf/Nodes_8h_source.xhtml">Nodes.h</a>.</p>

</div>
</div>
<a id="a0f9170fd3a6f78d50afc01229e241d61"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f9170fd3a6f78d50afc01229e241d61">&#9670;&nbsp;</a></span>Ordering</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::vector&lt;uint32_t&gt; <a class="el" href="../../d4/deb/namespaceefd.xhtml#a0f9170fd3a6f78d50afc01229e241d61">efd::Ordering</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../df/d01/LayerBasedOrderingWrapperPass_8h_source.xhtml#l00010">10</a> of file <a class="el" href="../../df/d01/LayerBasedOrderingWrapperPass_8h_source.xhtml">LayerBasedOrderingWrapperPass.h</a>.</p>

</div>
</div>
<a id="afda2d98251b905794740a8026d564048"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afda2d98251b905794740a8026d564048">&#9670;&nbsp;</a></span>RealVal</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="../../d9/d7a/structefd_1_1WrapperVal.xhtml">WrapperVal</a>&lt;double&gt; <a class="el" href="../../d4/deb/namespaceefd.xhtml#afda2d98251b905794740a8026d564048">efd::RealVal</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../d1/d2e/WrapperVal_8h_source.xhtml#l00031">31</a> of file <a class="el" href="../../d1/d2e/WrapperVal_8h_source.xhtml">WrapperVal.h</a>.</p>

</div>
</div>
<a id="a8c6eb9e95f5fad95ab54779a502ea54f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c6eb9e95f5fad95ab54779a502ea54f">&#9670;&nbsp;</a></span>SwapSeq</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::vector&lt;<a class="el" href="../../d8/d62/structefd_1_1Swap.xhtml">Swap</a>&gt; <a class="el" href="../../d4/deb/namespaceefd.xhtml#a8c6eb9e95f5fad95ab54779a502ea54f">efd::SwapSeq</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../d1/d73/Defs_8h_source.xhtml#l00023">23</a> of file <a class="el" href="../../d1/d73/Defs_8h_source.xhtml">Defs.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="a3ab6f82f2df49bbde5c943bbe60c3cf3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ab6f82f2df49bbde5c943bbe60c3cf3">&#9670;&nbsp;</a></span>Allocator</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3">efd::Allocator</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a3ab6f82f2df49bbde5c943bbe60c3cf3aaeec718b2db0450be32c794d08c6a208"></a>EFD_FIRSTLAST&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3ab6f82f2df49bbde5c943bbe60c3cf3a8a9062601e84bd8c64f39390c8f34f44"></a>EFD_ALLOCATOR&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3ab6f82f2df49bbde5c943bbe60c3cf3a5f2ff2f4e828d337aa0921a6111b8d80"></a>EFD_ALLOCATOR_SIMPLE&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3ab6f82f2df49bbde5c943bbe60c3cf3af97f0e1738303c3421f25d4c96fb15e5"></a>Q_dynprog&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3ab6f82f2df49bbde5c943bbe60c3cf3ae7494a1f8337e0a4ba91c5eff47460ae"></a>Q_bsi&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3ab6f82f2df49bbde5c943bbe60c3cf3a4fd366ee0143b32c83ef047986051793"></a>Q_grdy&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3ab6f82f2df49bbde5c943bbe60c3cf3a5ad34663e134e7817dc08f0a0b383db7"></a>Q_ibm&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3ab6f82f2df49bbde5c943bbe60c3cf3aa7944e4e6eedca0bec9157df8044afd5"></a>Q_wpm&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3ab6f82f2df49bbde5c943bbe60c3cf3a23368eb439e9cb17dcc7161f58835449"></a>Q_random&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3ab6f82f2df49bbde5c943bbe60c3cf3a3a5da971871062a96c51d09fb57fef2e"></a>Q_qubiter&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3ab6f82f2df49bbde5c943bbe60c3cf3a1ced6ff54615ab285424576d17de7a20"></a>Q_wqubiter&#160;</td><td class="fielddoc"></td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="../../db/db1/Allocators_8h_source.xhtml#l00010">10</a> of file <a class="el" href="../../db/db1/Allocators_8h_source.xhtml">Allocators.h</a>.</p>

</div>
</div>
<a id="abc6b2068b056c3d6eb2cdf91fb7c2a3f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abc6b2068b056c3d6eb2cdf91fb7c2a3f">&#9670;&nbsp;</a></span>Architecture</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="../../d4/deb/namespaceefd.xhtml#abc6b2068b056c3d6eb2cdf91fb7c2a3f">efd::Architecture</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="abc6b2068b056c3d6eb2cdf91fb7c2a3faaeec718b2db0450be32c794d08c6a208"></a>EFD_FIRSTLAST&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="abc6b2068b056c3d6eb2cdf91fb7c2a3fae0a6d291522f23381fd3ca6ece8e09af"></a>EFD_ARCH&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="abc6b2068b056c3d6eb2cdf91fb7c2a3fa64c29e728ce10959619fecf95dfdb2e0"></a>A_ibmqx2&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="abc6b2068b056c3d6eb2cdf91fb7c2a3faf056857258fc5529fd07434e014be39e"></a>A_ibmqx3&#160;</td><td class="fielddoc"></td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="../../da/d8e/Architectures_8h_source.xhtml#l00009">9</a> of file <a class="el" href="../../da/d8e/Architectures_8h_source.xhtml">Architectures.h</a>.</p>

</div>
</div>
<a id="a685e3afd76819bc134a3dfdd44c9e4e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a685e3afd76819bc134a3dfdd44c9e4e9">&#9670;&nbsp;</a></span>ExitCode</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9">efd::ExitCode</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Instead of issueing an 'assert(false)', we should use this enum in order to exit with errors. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a685e3afd76819bc134a3dfdd44c9e4e9a1414203994e495fe3ee8884d6e117bda"></a>EXIT_multi_deps&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a685e3afd76819bc134a3dfdd44c9e4e9ab39d20266cc0612b52ed96575e06809a"></a>EXIT_unreachable&#160;</td><td class="fielddoc"></td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="../../d1/d73/Defs_8h_source.xhtml#l00034">34</a> of file <a class="el" href="../../d1/d73/Defs_8h_source.xhtml">Defs.h</a>.</p>

</div>
</div>
<a id="a86abfbd43b436abb77f79e057546835c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86abfbd43b436abb77f79e057546835c">&#9670;&nbsp;</a></span>SolutionBuilderOptions</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="../../d4/deb/namespaceefd.xhtml#a86abfbd43b436abb77f79e057546835c">efd::SolutionBuilderOptions</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Options for solution builders. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a86abfbd43b436abb77f79e057546835ca87b05ab204327971d60c5f4ca3af152f"></a>ImproveInitial&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a86abfbd43b436abb77f79e057546835ca30dedc873b8a976ce386642a5b4dc262"></a>KeepStats&#160;</td><td class="fielddoc"></td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="../../db/d60/SolutionBuilder_8h_source.xhtml#l00009">9</a> of file <a class="el" href="../../db/d60/SolutionBuilder_8h_source.xhtml">SolutionBuilder.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a6b1cf6e8a83c7c7e449ef7f3ea28287c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b1cf6e8a83c7c7e449ef7f3ea28287c">&#9670;&nbsp;</a></span>Compile()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dd/d52/classefd_1_1QModule.xhtml#a85ca5b04a1d4d196b30004c3e1acaf7e">QModule::uRef</a> efd::Compile </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d52/classefd_1_1QModule.xhtml#a85ca5b04a1d4d196b30004c3e1acaf7e">QModule::uRef</a>&#160;</td>
          <td class="paramname"><em>qmod</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d0/d62/structefd_1_1CompilationSettings.xhtml">CompilationSettings</a>&#160;</td>
          <td class="paramname"><em>settings</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Compile <code>qmod</code>, and return the compiled version. </p>
<p>Transform <code>qmod</code> according to <code>settings</code>. It shall specify the architecture, the allocator to use, the basis vector and whether to reorder the program or not. </p>

<p class="definition">Definition at line <a class="el" href="../../df/dd9/Driver_8cpp_source.xhtml#l00024">24</a> of file <a class="el" href="../../df/dd9/Driver_8cpp_source.xhtml">Driver.cpp</a>.</p>

<p class="reference">References <a class="el" href="../../d6/d91/Transform_2Driver_8h_source.xhtml#l00012">efd::CompilationSettings::allocator</a>, <a class="el" href="../../d6/d91/Transform_2Driver_8h_source.xhtml#l00011">efd::CompilationSettings::archGraph</a>, <a class="el" href="../../d6/d91/Transform_2Driver_8h_source.xhtml#l00013">efd::CompilationSettings::basis</a>, <a class="el" href="../../d9/d5d/QModule_8cpp_source.xhtml#l00314">efd::QModule::clone()</a>, <a class="el" href="../../de/d6e/ArchVerifierPass_8cpp_source.xhtml#l00140">efd::ArchVerifierPass::Create()</a>, <a class="el" href="../../db/d17/ReverseEdgesPass_8cpp_source.xhtml#l00094">efd::ReverseEdgesPass::Create()</a>, <a class="el" href="../../dd/d49/SemanticVerifierPass_8cpp_source.xhtml#l00388">efd::SemanticVerifierPass::Create()</a>, <a class="el" href="../../dc/dea/Allocators_8cpp_source.xhtml#l00063">CreateQbitAllocator()</a>, <a class="el" href="../../d6/d91/Transform_2Driver_8h_source.xhtml#l00016">efd::CompilationSettings::force</a>, <a class="el" href="../../db/d82/PassCache_8h_source.xhtml#l00071">efd::PassCache::Get()</a>, <a class="el" href="../../df/d29/Pass_8h_source.xhtml#l00081">efd::PassT&lt; T &gt;::getData()</a>, <a class="el" href="../../de/de8/XbitToNumberPass_8cpp_source.xhtml#l00033">efd::XbitToNumber::getQSize()</a>, <a class="el" href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00039">efd::Solution::mInitial</a>, <a class="el" href="../../d6/d91/Transform_2Driver_8h_source.xhtml#l00014">efd::CompilationSettings::reorder</a>, <a class="el" href="../../db/d82/PassCache_8h_source.xhtml#l00047">efd::PassCache::Run()</a>, <a class="el" href="../../dd/d49/SemanticVerifierPass_8cpp_source.xhtml#l00384">efd::SemanticVerifierPass::setInlineAll()</a>, <a class="el" href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00326">efd::QbitAllocator::setInlineAll()</a>, <a class="el" href="../../dd/dea/Graph_8cpp_source.xhtml#l00036">efd::Graph::size()</a>, and <a class="el" href="../../d6/d91/Transform_2Driver_8h_source.xhtml#l00015">efd::CompilationSettings::verify</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../de/d8e/Enfield_8cpp_source.xhtml#l00052">main()</a>.</p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d4/deb/namespaceefd_a6b1cf6e8a83c7c7e449ef7f3ea28287c_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="ac1a967a3ed912aa103f063af3586254a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1a967a3ed912aa103f063af3586254a">&#9670;&nbsp;</a></span>CreateArchIBMQX2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#ac3abcc468d810fb7f8d9190ec324fbae">ArchRegistry::RetTy</a> efd::CreateArchIBMQX2 </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>pad</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../d5/d6e/Architectures_8cpp_source.xhtml#l00003">3</a> of file <a class="el" href="../../d5/d6e/Architectures_8cpp_source.xhtml">Architectures.cpp</a>.</p>

</div>
</div>
<a id="a7ed4b95e611c32983fd791351050fe9e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7ed4b95e611c32983fd791351050fe9e">&#9670;&nbsp;</a></span>CreateArchIBMQX3()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#ac3abcc468d810fb7f8d9190ec324fbae">ArchRegistry::RetTy</a> efd::CreateArchIBMQX3 </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>pad</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../d5/d6e/Architectures_8cpp_source.xhtml#l00004">4</a> of file <a class="el" href="../../d5/d6e/Architectures_8cpp_source.xhtml">Architectures.cpp</a>.</p>

</div>
</div>
<a id="a24ee93e1ddaa0a368ff107a3f2e85771"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24ee93e1ddaa0a368ff107a3f2e85771">&#9670;&nbsp;</a></span>CreateArchitecture()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#ac3abcc468d810fb7f8d9190ec324fbae">efd::ArchRegistry::RetTy</a> efd::CreateArchitecture </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/deb/namespaceefd.xhtml#acd77a48a3f6c5314aaca88206992b9ca">EnumArchitecture</a>&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates an architecture referenced by <code>name</code>. </p>

<p class="definition">Definition at line <a class="el" href="../../d5/d6e/Architectures_8cpp_source.xhtml#l00091">91</a> of file <a class="el" href="../../d5/d6e/Architectures_8cpp_source.xhtml">Architectures.cpp</a>.</p>

<p class="reference">References <a class="el" href="../../da/d66/Registry_8h_source.xhtml#l00062">efd::Registry&lt; RTy, ATy, KTy, CTy &gt;::createObj()</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../de/d8e/Enfield_8cpp_source.xhtml#l00052">main()</a>.</p>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d4/deb/namespaceefd_a24ee93e1ddaa0a368ff107a3f2e85771_cgraph.svg" width="572" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a29b021cda3931b1603b72b2b45f169c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a29b021cda3931b1603b72b2b45f169c8">&#9670;&nbsp;</a></span>CreateBoundedSIDepSolver()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#ac3abcc468d810fb7f8d9190ec324fbae">AllocatorRegistry::RetTy</a> efd::CreateBoundedSIDepSolver </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#a1568c83cf71bd7a44e7dd0e401592e2d">AllocatorRegistry::ArgTy</a>&#160;</td>
          <td class="paramname"><em>arg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a4b85c55f4f23821dedd4a7966df901c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b85c55f4f23821dedd4a7966df901c0">&#9670;&nbsp;</a></span>CreateDynprogDepSolver()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#ac3abcc468d810fb7f8d9190ec324fbae">AllocatorRegistry::RetTy</a> efd::CreateDynprogDepSolver </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#a1568c83cf71bd7a44e7dd0e401592e2d">AllocatorRegistry::ArgTy</a>&#160;</td>
          <td class="paramname"><em>arg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="af6fae2ef1c68a631ebcefda367a89e25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af6fae2ef1c68a631ebcefda367a89e25">&#9670;&nbsp;</a></span>CreateGreedyCktQAllocator()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#ac3abcc468d810fb7f8d9190ec324fbae">AllocatorRegistry::RetTy</a> efd::CreateGreedyCktQAllocator </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#a1568c83cf71bd7a44e7dd0e401592e2d">AllocatorRegistry::ArgTy</a>&#160;</td>
          <td class="paramname"><em>arg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9db9e3409cfe38bea500cef5079bd035"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9db9e3409cfe38bea500cef5079bd035">&#9670;&nbsp;</a></span>CreateIBMQAllocator()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#ac3abcc468d810fb7f8d9190ec324fbae">AllocatorRegistry::RetTy</a> efd::CreateIBMQAllocator </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#a1568c83cf71bd7a44e7dd0e401592e2d">AllocatorRegistry::ArgTy</a>&#160;</td>
          <td class="paramname"><em>arg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a28247af210548fec398e5024d284f155"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a28247af210548fec398e5024d284f155">&#9670;&nbsp;</a></span>CreateIdentityMappingFinderWithQbitterSolBuilder()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#ac3abcc468d810fb7f8d9190ec324fbae">AllocatorRegistry::RetTy</a> efd::CreateIdentityMappingFinderWithQbitterSolBuilder </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#a1568c83cf71bd7a44e7dd0e401592e2d">AllocatorRegistry::ArgTy</a>&#160;</td>
          <td class="paramname"><em>arg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a3c72243a170ffe8a4836e7092fd1469f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c72243a170ffe8a4836e7092fd1469f">&#9670;&nbsp;</a></span>CreateILongCX()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a5ef5ed743ddb6e586602c5242f2f36cc">NDQOp::uRef</a> efd::CreateILongCX </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a>&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a>&#160;</td>
          <td class="paramname"><em>middle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a>&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a call to the intrinsic long cnot function. </p>

<p class="definition">Definition at line <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00159">159</a> of file <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml">Utils.cpp</a>.</p>

<p class="reference">References <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00065">efd::NDQOpLongCX::NDQOpLongCX()</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00133">CreateIntrinsicGate()</a>.</p>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d4/deb/namespaceefd_a3c72243a170ffe8a4836e7092fd1469f_cgraph.svg" width="100%" height="480"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a4ef7671eeb9b9b12d20549b08b9269c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ef7671eeb9b9b12d20549b08b9269c2">&#9670;&nbsp;</a></span>CreateIntrinsicGate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a5ef5ed743ddb6e586602c5242f2f36cc">NDQOp::uRef</a> efd::CreateIntrinsicGate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a287cbca5c6c5fbf565ac32f435030eac">NDQOpGen::IntrinsicKind</a>&#160;</td>
          <td class="paramname"><em>kind</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; <a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> &gt;&#160;</td>
          <td class="paramname"><em>qargs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates an intrinsic gate of kind <code>kind</code> and arguments <code>args</code>. </p>

<p class="definition">Definition at line <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00133">133</a> of file <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml">Utils.cpp</a>.</p>

<p class="reference">References <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00159">CreateILongCX()</a>, <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00164">CreateIRevCX()</a>, <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00153">CreateISwap()</a>, <a class="el" href="../../d4/daf/Nodes_8h_source.xhtml#l00938">efd::NDQOpGen::K_INTRINSIC_LCX</a>, <a class="el" href="../../d4/daf/Nodes_8h_source.xhtml#l00937">efd::NDQOpGen::K_INTRINSIC_REV_CX</a>, and <a class="el" href="../../d4/daf/Nodes_8h_source.xhtml#l00936">efd::NDQOpGen::K_INTRINSIC_SWAP</a>.</p>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d4/deb/namespaceefd_a4ef7671eeb9b9b12d20549b08b9269c2_cgraph.svg" width="100%" height="504"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="af8e947f977669e54d6aaf3a43815833c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af8e947f977669e54d6aaf3a43815833c">&#9670;&nbsp;</a></span>CreateIRevCX()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a5ef5ed743ddb6e586602c5242f2f36cc">NDQOp::uRef</a> efd::CreateIRevCX </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a>&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a>&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a call to the intrinsic reversal cnot function. </p>

<p class="definition">Definition at line <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00164">164</a> of file <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml">Utils.cpp</a>.</p>

<p class="reference">References <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00078">efd::NDQOpRevCX::NDQOpRevCX()</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00133">CreateIntrinsicGate()</a>.</p>
<div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d4/deb/namespaceefd_af8e947f977669e54d6aaf3a43815833c_cgraph.svg" width="100%" height="480"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="ad83c1dbaa41519964485ea8e2437bcb7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad83c1dbaa41519964485ea8e2437bcb7">&#9670;&nbsp;</a></span>CreateISwap()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a5ef5ed743ddb6e586602c5242f2f36cc">NDQOp::uRef</a> efd::CreateISwap </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a>&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a>&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a call to the intrinsic swap function. </p>

<p class="definition">Definition at line <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00153">153</a> of file <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml">Utils.cpp</a>.</p>

<p class="reference">References <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00053">efd::NDQOpSwap::NDQOpSwap()</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00133">CreateIntrinsicGate()</a>.</p>
<div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d4/deb/namespaceefd_ad83c1dbaa41519964485ea8e2437bcb7_cgraph.svg" width="100%" height="480"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a68293834a9b09cd376067ab0d3b27a92"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a68293834a9b09cd376067ab0d3b27a92">&#9670;&nbsp;</a></span>CreateQbitAllocator()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#ac3abcc468d810fb7f8d9190ec324fbae">efd::AllocatorRegistry::RetTy</a> efd::CreateQbitAllocator </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a829f2abec26c6c5fffb5cf37501b3514">EnumAllocator</a>&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#a1568c83cf71bd7a44e7dd0e401592e2d">AllocatorRegistry::ArgTy</a>&#160;</td>
          <td class="paramname"><em>arg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates an allocator referenced by <code>name</code> with arguments <code>arg</code>. </p>

<p class="definition">Definition at line <a class="el" href="../../dc/dea/Allocators_8cpp_source.xhtml#l00063">63</a> of file <a class="el" href="../../dc/dea/Allocators_8cpp_source.xhtml">Allocators.cpp</a>.</p>

<p class="reference">References <a class="el" href="../../da/d66/Registry_8h_source.xhtml#l00062">efd::Registry&lt; RTy, ATy, KTy, CTy &gt;::createObj()</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../df/dd9/Driver_8cpp_source.xhtml#l00024">Compile()</a>.</p>
<div id="dynsection-6" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-6-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-6-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-6-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d4/deb/namespaceefd_a68293834a9b09cd376067ab0d3b27a92_cgraph.svg" width="578" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a427edad3eca821a641d5460f4b71b716"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a427edad3eca821a641d5460f4b71b716">&#9670;&nbsp;</a></span>CreateRandomMappingFinderWithPathGuidedSolBuilder()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#ac3abcc468d810fb7f8d9190ec324fbae">AllocatorRegistry::RetTy</a> efd::CreateRandomMappingFinderWithPathGuidedSolBuilder </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#a1568c83cf71bd7a44e7dd0e401592e2d">AllocatorRegistry::ArgTy</a>&#160;</td>
          <td class="paramname"><em>arg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9e072897b1003b83e4f95d0093a8c27a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e072897b1003b83e4f95d0093a8c27a">&#9670;&nbsp;</a></span>CreateWeightedSIMappingFinderWithPathGuidedSolBuilder()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#ac3abcc468d810fb7f8d9190ec324fbae">AllocatorRegistry::RetTy</a> efd::CreateWeightedSIMappingFinderWithPathGuidedSolBuilder </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#a1568c83cf71bd7a44e7dd0e401592e2d">AllocatorRegistry::ArgTy</a>&#160;</td>
          <td class="paramname"><em>arg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aeb8728bc76fefc0c3913c6470202b62b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb8728bc76fefc0c3913c6470202b62b">&#9670;&nbsp;</a></span>CreateWeightedSIMappingFinderWithQbitterSolBuilder()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#ac3abcc468d810fb7f8d9190ec324fbae">AllocatorRegistry::RetTy</a> efd::CreateWeightedSIMappingFinderWithQbitterSolBuilder </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#a1568c83cf71bd7a44e7dd0e401592e2d">AllocatorRegistry::ArgTy</a>&#160;</td>
          <td class="paramname"><em>arg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2cef687225e13315fc282dc40b5a6909"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2cef687225e13315fc282dc40b5a6909">&#9670;&nbsp;</a></span>dynCast()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename TargetTy , typename SrcTy &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">TargetTy* efd::dynCast </td>
          <td>(</td>
          <td class="paramtype">SrcTy *&#160;</td>
          <td class="paramname"><em>src</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns <em>src</em> cast to <em>TargetTy</em>, iff it is of class <em>TargetTy</em>, otherwise it will return nullptr. </p>

<p class="definition">Definition at line <a class="el" href="../../d5/dfc/RTTI_8h_source.xhtml#l00015">15</a> of file <a class="el" href="../../d5/dfc/RTTI_8h_source.xhtml">RTTI.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00729">efd::NDGateSign::getArgs()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00896">efd::NDQOp::getArgs()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00522">efd::NDIfStmt::getCondId()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00530">efd::NDIfStmt::getCondN()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00670">efd::NDInclude::getFilename()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00799">efd::NDGateDecl::getGOpList()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00186">efd::NDDecl::getId()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00291">efd::NDIdRef::getId()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00888">efd::NDQOp::getId()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00678">efd::NDInclude::getInnerAST()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00299">efd::NDIdRef::getN()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00737">efd::NDGateSign::getQArgs()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00904">efd::NDQOp::getQArgs()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00538">efd::NDIfStmt::getQOp()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00219">efd::NDRegDecl::getSize()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00617">efd::NDQasmVersion::getStatements()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00609">efd::NDQasmVersion::getVersion()</a>, <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00395">InlineGate()</a>, <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00107">IsIntrinsicGateCall()</a>, <a class="el" href="../../df/dcc/CircuitGraphBuilderPass_8cpp_source.xhtml#l00010">efd::CircuitGraphBuilderPass::run()</a>, <a class="el" href="../../d9/d5d/QModule_8cpp_source.xhtml#l00221">efd::QModule::toString()</a>, <a class="el" href="../../d8/d9d/LayersBuilderPass_8cpp_source.xhtml#l00069">efd::UsedBitsVisitor::visit()</a>, <a class="el" href="../../dd/d49/SemanticVerifierPass_8cpp_source.xhtml#l00286">efd::SemanticVerifierVisitor::visit()</a>, <a class="el" href="../../de/de8/XbitToNumberPass_8cpp_source.xhtml#l00113">efd::XbitToNumberVisitor::visit()</a>, and <a class="el" href="../../da/dcd/DependencyBuilderPass_8cpp_source.xhtml#l00162">efd::DependencyBuilderVisitor::visit()</a>.</p>

</div>
</div>
<a id="a5c9a5fad6a8e4da658dcd2ca3b4cf881"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5c9a5fad6a8e4da658dcd2ca3b4cf881">&#9670;&nbsp;</a></span>ErrorLog()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream &amp; efd::ErrorLog </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>file</em> = <code>&quot;&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>line</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a stream object for logging errors. </p>

<p class="definition">Definition at line <a class="el" href="../../d0/d72/Defs_8cpp_source.xhtml#l00027">27</a> of file <a class="el" href="../../d0/d72/Defs_8cpp_source.xhtml">Defs.cpp</a>.</p>

<p class="reference">References <a class="el" href="../../d9/d41/CommandLine_8h_source.xhtml#l00158">efd::Opt&lt; T &gt;::getVal()</a>.</p>
<div id="dynsection-7" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-7-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-7-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-7-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d4/deb/namespaceefd_a5c9a5fad6a8e4da658dcd2ca3b4cf881_cgraph.svg" width="271" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a18b0007f75e6b8d651b15754ff89f910"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18b0007f75e6b8d651b15754ff89f910">&#9670;&nbsp;</a></span>Fill() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void efd::Fill </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>archQ</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">Mapping</a> &amp;&#160;</td>
          <td class="paramname"><em>mapping</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Fills the unmapped qubits with the ones missing. </p>

<p class="definition">Definition at line <a class="el" href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00372">372</a> of file <a class="el" href="../../d0/d91/QbitAllocator_8cpp_source.xhtml">QbitAllocator.cpp</a>.</p>

<p class="reference">References <a class="el" href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00354">Fill()</a>, and <a class="el" href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00335">GenAssignment()</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../d5/d8f/BoundedSIDepSolver_8cpp_source.xhtml#l00063">efd::BoundedSIDepSolver::solve()</a>.</p>
<div id="dynsection-8" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-8-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-8-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-8-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d4/deb/namespaceefd_a18b0007f75e6b8d651b15754ff89f910_cgraph.svg" width="379" height="63"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a35884a2adaf86bf35e7e3f1f65acc522"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a35884a2adaf86bf35e7e3f1f65acc522">&#9670;&nbsp;</a></span>Fill() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void efd::Fill </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">Mapping</a> &amp;&#160;</td>
          <td class="paramname"><em>mapping</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a0370997575fb50e5567c20c151d37592">Assign</a> &amp;&#160;</td>
          <td class="paramname"><em>assign</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00354">354</a> of file <a class="el" href="../../d0/d91/QbitAllocator_8cpp_source.xhtml">QbitAllocator.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00372">Fill()</a>, and <a class="el" href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00335">GenAssignment()</a>.</p>

</div>
</div>
<a id="a5b9a652c9403e0dbe7115d9d7f5e7d62"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5b9a652c9403e0dbe7115d9d7f5e7d62">&#9670;&nbsp;</a></span>GenAssignment()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a0370997575fb50e5567c20c151d37592">efd::Assign</a> efd::GenAssignment </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>archQ</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">Mapping</a>&#160;</td>
          <td class="paramname"><em>mapping</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>fill</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Generates an assignment mapping (maps the architecture's qubits to the logical ones) of size <code>archQ</code>. </p>

<p class="definition">Definition at line <a class="el" href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00335">335</a> of file <a class="el" href="../../d0/d91/QbitAllocator_8cpp_source.xhtml">QbitAllocator.cpp</a>.</p>

<p class="reference">References <a class="el" href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00354">Fill()</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../db/de4/QbitterSolBuilder_8cpp_source.xhtml#l00005">efd::QbitterSolBuilder::build()</a>, <a class="el" href="../../d3/d84/PathGuidedSolBuilder_8cpp_source.xhtml#l00023">efd::PathGuidedSolBuilder::build()</a>, <a class="el" href="../../d4/dd0/GreedyCktQAllocator_8cpp_source.xhtml#l00034">efd::GreedyCktQAllocator::executeAllocation()</a>, <a class="el" href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00372">Fill()</a>, <a class="el" href="../../d5/d8f/BoundedSIDepSolver_8cpp_source.xhtml#l00063">efd::BoundedSIDepSolver::solve()</a>, and <a class="el" href="../../d1/d31/DynprogDepSolver_8cpp_source.xhtml#l00054">efd::DynprogDepSolver::solve()</a>.</p>
<div id="dynsection-9" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-9-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-9-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-9-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d4/deb/namespaceefd_a5b9a652c9403e0dbe7115d9d7f5e7d62_cgraph.svg" width="266" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a194305909125a1398a1f0e00fbae1cf5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a194305909125a1398a1f0e00fbae1cf5">&#9670;&nbsp;</a></span>GetIntrinsicGates()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a2c3fab44d60678aba91904ff92f5084c">NDGateSign::uRef</a> &gt; efd::GetIntrinsicGates </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a vector with the intrinsic gates implementation. </p>

<p class="definition">Definition at line <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00036">36</a> of file <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml">Utils.cpp</a>.</p>

<p class="reference">References <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00114">efd::Node::clone()</a>, and <a class="el" href="../../dc/d09/uRefCast_8h_source.xhtml#l00035">uniqueCastForward()</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../d9/d5d/QModule_8cpp_source.xhtml#l00344">efd::QModule::GetFromAST()</a>.</p>
<div id="dynsection-10" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-10-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-10-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-10-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d4/deb/namespaceefd_a194305909125a1398a1f0e00fbae1cf5_cgraph.svg" width="562" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a6cbddf16d36e971fff36629ed192269b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6cbddf16d36e971fff36629ed192269b">&#9670;&nbsp;</a></span>GetIntrinsicKind()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a287cbca5c6c5fbf565ac32f435030eac">NDQOpGen::IntrinsicKind</a> efd::GetIntrinsicKind </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">Node::Ref</a>&#160;</td>
          <td class="paramname"><em>ref</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the <a class="el" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a287cbca5c6c5fbf565ac32f435030eac">NDQOpGen::IntrinsicKind</a>, given a <a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml" title="Base class for AST nodes. ">Node</a> <code>ref</code>. </p>
<p>This function should be only called if <code>ref</code> is really an intrinsic function. Otherwise, it will crash. </p>

<p class="definition">Definition at line <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00119">119</a> of file <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml">Utils.cpp</a>.</p>

<p class="reference">References <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00110">efd::Node::getOperation()</a>, <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00051">efd::NDQOpSwap::IdStr</a>, <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00063">efd::NDQOpLongCX::IdStr</a>, <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00076">efd::NDQOpRevCX::IdStr</a>, <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00107">IsIntrinsicGateCall()</a>, <a class="el" href="../../d4/daf/Nodes_8h_source.xhtml#l00938">efd::NDQOpGen::K_INTRINSIC_LCX</a>, <a class="el" href="../../d4/daf/Nodes_8h_source.xhtml#l00937">efd::NDQOpGen::K_INTRINSIC_REV_CX</a>, and <a class="el" href="../../d4/daf/Nodes_8h_source.xhtml#l00936">efd::NDQOpGen::K_INTRINSIC_SWAP</a>.</p>
<div id="dynsection-11" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-11-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-11-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-11-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d4/deb/namespaceefd_a6cbddf16d36e971fff36629ed192269b_cgraph.svg" width="100%" height="423"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="af76f2871ea0244bc6e2b4a475d5cd3e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af76f2871ea0244bc6e2b4a475d5cd3e3">&#9670;&nbsp;</a></span>HasAllocator()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool efd::HasAllocator </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a829f2abec26c6c5fffb5cf37501b3514">EnumAllocator</a>&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns true if there is an allocator mapped by <code>key</code>;. </p>

<p class="definition">Definition at line <a class="el" href="../../dc/dea/Allocators_8cpp_source.xhtml#l00054">54</a> of file <a class="el" href="../../dc/dea/Allocators_8cpp_source.xhtml">Allocators.cpp</a>.</p>

<p class="reference">References <a class="el" href="../../da/d66/Registry_8h_source.xhtml#l00057">efd::Registry&lt; RTy, ATy, KTy, CTy &gt;::hasObj()</a>.</p>
<div id="dynsection-12" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-12-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-12-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-12-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d4/deb/namespaceefd_af76f2871ea0244bc6e2b4a475d5cd3e3_cgraph.svg" width="328" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ac2b3e87bf8e57ce91119a679dd13440e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac2b3e87bf8e57ce91119a679dd13440e">&#9670;&nbsp;</a></span>HasArchitecture()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool efd::HasArchitecture </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/deb/namespaceefd.xhtml#acd77a48a3f6c5314aaca88206992b9ca">EnumArchitecture</a>&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns true if there is an architecture mapped by <code>key</code>;. </p>

<p class="definition">Definition at line <a class="el" href="../../d5/d6e/Architectures_8cpp_source.xhtml#l00083">83</a> of file <a class="el" href="../../d5/d6e/Architectures_8cpp_source.xhtml">Architectures.cpp</a>.</p>

<p class="reference">References <a class="el" href="../../da/d66/Registry_8h_source.xhtml#l00057">efd::Registry&lt; RTy, ATy, KTy, CTy &gt;::hasObj()</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../de/d8e/Enfield_8cpp_source.xhtml#l00052">main()</a>.</p>
<div id="dynsection-13" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-13-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-13-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-13-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d4/deb/namespaceefd_ac2b3e87bf8e57ce91119a679dd13440e_cgraph.svg" width="348" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a186bbb1cec68c992374b8795b10af1a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a186bbb1cec68c992374b8795b10af1a8">&#9670;&nbsp;</a></span>IdentityMapping()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">efd::Mapping</a> efd::IdentityMapping </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>progQ</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns an identity mapping. </p>

<p class="definition">Definition at line <a class="el" href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00377">377</a> of file <a class="el" href="../../d0/d91/QbitAllocator_8cpp_source.xhtml">QbitAllocator.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../d5/d8f/BoundedSIDepSolver_8cpp_source.xhtml#l00063">efd::BoundedSIDepSolver::solve()</a>.</p>

</div>
</div>
<a id="ad7ab0ddc084143ffaf0d25c47f04fbce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7ab0ddc084143ffaf0d25c47f04fbce">&#9670;&nbsp;</a></span>InfoLog()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream &amp; efd::InfoLog </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>file</em> = <code>&quot;&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>line</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a stream object for logging information. </p>

<p class="definition">Definition at line <a class="el" href="../../d0/d72/Defs_8cpp_source.xhtml#l00039">39</a> of file <a class="el" href="../../d0/d72/Defs_8cpp_source.xhtml">Defs.cpp</a>.</p>

<p class="reference">References <a class="el" href="../../d9/d41/CommandLine_8h_source.xhtml#l00158">efd::Opt&lt; T &gt;::getVal()</a>.</p>
<div id="dynsection-14" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-14-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-14-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-14-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d4/deb/namespaceefd_ad7ab0ddc084143ffaf0d25c47f04fbce_cgraph.svg" width="264" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a033a77baa1aa02f207c7a918246aeb59"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a033a77baa1aa02f207c7a918246aeb59">&#9670;&nbsp;</a></span>InitializeAllArchitectures()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void efd::InitializeAllArchitectures </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Registers all available architectures in the register. </p>

<p class="definition">Definition at line <a class="el" href="../../d5/d6e/Architectures_8cpp_source.xhtml#l00074">74</a> of file <a class="el" href="../../d5/d6e/Architectures_8cpp_source.xhtml">Architectures.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../de/d8e/Enfield_8cpp_source.xhtml#l00052">main()</a>.</p>

</div>
</div>
<a id="ae4b41f17586b3bdf847d049e8994977c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae4b41f17586b3bdf847d049e8994977c">&#9670;&nbsp;</a></span>InitializeAllQbitAllocators()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void efd::InitializeAllQbitAllocators </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../dc/dea/Allocators_8cpp_source.xhtml#l00052">52</a> of file <a class="el" href="../../dc/dea/Allocators_8cpp_source.xhtml">Allocators.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../de/d8e/Enfield_8cpp_source.xhtml#l00052">main()</a>.</p>

</div>
</div>
<a id="acd4cde60c75b526798dab375aa82125c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd4cde60c75b526798dab375aa82125c">&#9670;&nbsp;</a></span>InlineGate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void efd::InlineGate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d52/classefd_1_1QModule.xhtml#a66b6cdbe4eef6e77afbf7fd3148b9f02">QModule::Ref</a>&#160;</td>
          <td class="paramname"><em>qmod</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a27de177a3e7801a76d34e00afcae9838">NDQOp::Ref</a>&#160;</td>
          <td class="paramname"><em>qop</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>If found, inlines the gate that <code>qop</code> calls. </p>

<p class="definition">Definition at line <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00395">395</a> of file <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml">Utils.cpp</a>.</p>

<p class="reference">References <a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#ab813c60af1717cf50e92a28b274c24ef">efd::Node::apply()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00114">efd::Node::clone()</a>, <a class="el" href="../../d5/dfc/RTTI_8h_source.xhtml#l00015">dynCast()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00729">efd::NDGateSign::getArgs()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00896">efd::NDQOp::getArgs()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00021">efd::Node::getChild()</a>, <a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a11df06f4d8e590426340024cbb2db23e">efd::Node::getChildNumber()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00799">efd::NDGateDecl::getGOpList()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00888">efd::NDQOp::getId()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00086">efd::Node::getParent()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00737">efd::NDGateSign::getQArgs()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00904">efd::NDQOp::getQArgs()</a>, <a class="el" href="../../d9/d5d/QModule_8cpp_source.xhtml#l00304">efd::QModule::getQGate()</a>, <a class="el" href="../../d4/daf/Nodes_8h_source.xhtml#l01023">efd::NDValue&lt; T &gt;::getVal()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00718">efd::NDGateSign::isOpaque()</a>, <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00323">efd::QArgsReplaceVisitor::QArgsReplaceVisitor()</a>, <a class="el" href="../../d9/d5d/QModule_8cpp_source.xhtml#l00103">efd::QModule::replaceStatement()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00542">efd::NDIfStmt::setQOp()</a>, and <a class="el" href="../../dc/d09/uRefCast_8h_source.xhtml#l00035">uniqueCastForward()</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../d9/d5d/QModule_8cpp_source.xhtml#l00063">efd::QModule::inlineCall()</a>.</p>
<div id="dynsection-15" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-15-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-15-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-15-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d4/deb/namespaceefd_acd4cde60c75b526798dab375aa82125c_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a3fd26bc2a0a0c6d9948d0d3cef2e1515"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3fd26bc2a0a0c6d9948d0d3cef2e1515">&#9670;&nbsp;</a></span>instanceOf()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename TargetTy , typename SrcTy &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool efd::instanceOf </td>
          <td>(</td>
          <td class="paramtype">const SrcTy *&#160;</td>
          <td class="paramname"><em>src</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns true if the pointer <em>src</em> is of class <em>TargetTy</em>. </p>

<p class="definition">Definition at line <a class="el" href="../../d5/dfc/RTTI_8h_source.xhtml#l00008">8</a> of file <a class="el" href="../../d5/dfc/RTTI_8h_source.xhtml">RTTI.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00431">efd::NDList::Create()</a>, and <a class="el" href="../../d9/d5d/QModule_8cpp_source.xhtml#l00063">efd::QModule::inlineCall()</a>.</p>

</div>
</div>
<a id="ab9c1264648ba0395505dc5b54358c0a9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab9c1264648ba0395505dc5b54358c0a9">&#9670;&nbsp;</a></span>IsCNOTGateCall()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool efd::IsCNOTGateCall </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">Node::Ref</a>&#160;</td>
          <td class="paramname"><em>ref</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns whether <code>ref</code> is a CNOT gate. </p>
<p>This is used because there may be gates like the standard library 'cx'. </p>

<p class="definition">Definition at line <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00092">92</a> of file <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml">Utils.cpp</a>.</p>

<p class="reference">References <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00054">efd::Node::getKind()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00110">efd::Node::getOperation()</a>, <a class="el" href="../../d4/daf/Nodes_8h_source.xhtml#l00058">efd::Node::K_QOP_CX</a>, <a class="el" href="../../d4/daf/Nodes_8h_source.xhtml#l00060">efd::Node::K_QOP_GEN</a>, and <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00090">StdLibCX</a>.</p>
<div id="dynsection-16" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-16-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-16-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-16-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d4/deb/namespaceefd_ab9c1264648ba0395505dc5b54358c0a9_cgraph.svg" width="368" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ac1264355b1eb1da02a2ae2c1906ce0a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1264355b1eb1da02a2ae2c1906ce0a5">&#9670;&nbsp;</a></span>IsIntrinsicGateCall()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool efd::IsIntrinsicGateCall </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">Node::Ref</a>&#160;</td>
          <td class="paramname"><em>ref</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns whether <code>ref</code> is (or should be) an intrinsic gate. </p>

<p class="definition">Definition at line <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00107">107</a> of file <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml">Utils.cpp</a>.</p>

<p class="reference">References <a class="el" href="../../d5/dfc/RTTI_8h_source.xhtml#l00015">dynCast()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00912">efd::NDQOp::getOperation()</a>, <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00051">efd::NDQOpSwap::IdStr</a>, <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00063">efd::NDQOpLongCX::IdStr</a>, and <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00076">efd::NDQOpRevCX::IdStr</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00119">GetIntrinsicKind()</a>.</p>
<div id="dynsection-17" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-17-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-17-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-17-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d4/deb/namespaceefd_ac1264355b1eb1da02a2ae2c1906ce0a5_cgraph.svg" width="100%" height="385"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="aac5a20e6db5d358cf72d4816441d0b0d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac5a20e6db5d358cf72d4816441d0b0d">&#9670;&nbsp;</a></span>MappingToString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string efd::MappingToString </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">Mapping</a>&#160;</td>
          <td class="paramname"><em>m</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Prints the mapping <code>m</code> to a string and returns it. </p>

<p class="definition">Definition at line <a class="el" href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00387">387</a> of file <a class="el" href="../../d0/d91/QbitAllocator_8cpp_source.xhtml">QbitAllocator.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../dd/d90/IBMQAllocator_8cpp_source.xhtml#l00168">efd::IBMQAllocator::executeAllocation()</a>, <a class="el" href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00139">efd::SolutionImplPass::run()</a>, and <a class="el" href="../../d5/d8f/BoundedSIDepSolver_8cpp_source.xhtml#l00063">efd::BoundedSIDepSolver::solve()</a>.</p>

</div>
</div>
<a id="a6bbed132b341f48d4aad4f970e3822bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6bbed132b341f48d4aad4f970e3822bc">&#9670;&nbsp;</a></span>ParseArguments() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void efd::ParseArguments </td>
          <td>(</td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>argc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char **&#160;</td>
          <td class="paramname"><em>argv</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parses the command line arguments (this function should be used in the main function). </p>

<p class="definition">Definition at line <a class="el" href="../../df/dd1/CommandLine_8cpp_source.xhtml#l00233">233</a> of file <a class="el" href="../../df/dd1/CommandLine_8cpp_source.xhtml">CommandLine.cpp</a>.</p>

<p class="reference">References <a class="el" href="../../d6/d25/classefd_1_1OptBase.xhtml#a36fb712beadd9a5429bc2d7121eb71af">efd::OptBase::argsConsumed()</a>, <a class="el" href="../../d9/d41/CommandLine_8h_source.xhtml#l00158">efd::Opt&lt; T &gt;::getVal()</a>, <a class="el" href="../../df/dd1/CommandLine_8cpp_source.xhtml#l00149">efd::OptBase::isParsed()</a>, <a class="el" href="../../df/dd1/CommandLine_8cpp_source.xhtml#l00153">efd::OptBase::isRequired()</a>, <a class="el" href="../../df/dd1/CommandLine_8cpp_source.xhtml#l00020">efd::ArgsParser::mArgMap</a>, and <a class="el" href="../../df/dd1/CommandLine_8cpp_source.xhtml#l00157">efd::OptBase::parse()</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../df/dd1/CommandLine_8cpp_source.xhtml#l00227">ParseArguments()</a>.</p>
<div id="dynsection-18" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-18-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-18-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-18-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d4/deb/namespaceefd_a6bbed132b341f48d4aad4f970e3822bc_cgraph.svg" width="611" height="240"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a9701f22b92e06bad8f57614d98e5aa81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9701f22b92e06bad8f57614d98e5aa81">&#9670;&nbsp;</a></span>ParseArguments() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void efd::ParseArguments </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>argc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char **&#160;</td>
          <td class="paramname"><em>argv</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../df/dd1/CommandLine_8cpp_source.xhtml#l00227">227</a> of file <a class="el" href="../../df/dd1/CommandLine_8cpp_source.xhtml">CommandLine.cpp</a>.</p>

<p class="reference">References <a class="el" href="../../df/dd1/CommandLine_8cpp_source.xhtml#l00233">ParseArguments()</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../de/d8e/Enfield_8cpp_source.xhtml#l00052">main()</a>.</p>
<div id="dynsection-19" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-19-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-19-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-19-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d4/deb/namespaceefd_a9701f22b92e06bad8f57614d98e5aa81_cgraph.svg" width="100%" height="480"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="ab4181eb2261a81187a3e8800ec2782ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab4181eb2261a81187a3e8800ec2782ed">&#9670;&nbsp;</a></span>ParseFile() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> efd::ParseFile </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>path</em> = <code>&quot;./&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>forceStdLib</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parse <code>filename</code> at <code>path</code>. </p>

<p class="reference">Referenced by <a class="el" href="../../d9/d5d/QModule_8cpp_source.xhtml#l00355">efd::QModule::Parse()</a>.</p>

</div>
</div>
<a id="a35de5eb64a67e06cc3326d2eff64abba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a35de5eb64a67e06cc3326d2eff64abba">&#9670;&nbsp;</a></span>ParseFile() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dd/d52/classefd_1_1QModule.xhtml#a85ca5b04a1d4d196b30004c3e1acaf7e">QModule::uRef</a> efd::ParseFile </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>filepath</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parse file in the path <code>filepath</code>. </p>

<p class="definition">Definition at line <a class="el" href="../../df/dd9/Driver_8cpp_source.xhtml#l00080">80</a> of file <a class="el" href="../../df/dd9/Driver_8cpp_source.xhtml">Driver.cpp</a>.</p>

<p class="reference">References <a class="el" href="../../d9/d5d/QModule_8cpp_source.xhtml#l00355">efd::QModule::Parse()</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../de/d8e/Enfield_8cpp_source.xhtml#l00052">main()</a>.</p>
<div id="dynsection-20" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-20-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-20-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-20-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d4/deb/namespaceefd_a35de5eb64a67e06cc3326d2eff64abba_cgraph.svg" width="100%" height="530"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a93709641ce1593c2f8143206beb0a699"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a93709641ce1593c2f8143206beb0a699">&#9670;&nbsp;</a></span>ParseString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> efd::ParseString </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>program</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>forceStdLib</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parse the string <code>program</code>. </p>

<p class="reference">Referenced by <a class="el" href="../../d9/d5d/QModule_8cpp_source.xhtml#l00333">efd::QModule::Create()</a>, and <a class="el" href="../../d9/d5d/QModule_8cpp_source.xhtml#l00364">efd::QModule::ParseString()</a>.</p>

</div>
</div>
<a id="a4fe79e93e6a1353b6d765bf2e540ee1c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4fe79e93e6a1353b6d765bf2e540ee1c">&#9670;&nbsp;</a></span>PrintDependencyGraph()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void efd::PrintDependencyGraph </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d52/classefd_1_1QModule.xhtml#a66b6cdbe4eef6e77afbf7fd3148b9f02">QModule::Ref</a>&#160;</td>
          <td class="paramname"><em>qmod</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>o</em> = <code>std::cout</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Print the dependency graph of the <code>qmod</code> in <code>o</code>. </p>

<p class="definition">Definition at line <a class="el" href="../../df/dd9/Driver_8cpp_source.xhtml#l00107">107</a> of file <a class="el" href="../../df/dd9/Driver_8cpp_source.xhtml">Driver.cpp</a>.</p>

<p class="reference">References <a class="el" href="../../dd/dea/Graph_8cpp_source.xhtml#l00086">efd::Graph::dotify()</a>, <a class="el" href="../../db/d82/PassCache_8h_source.xhtml#l00071">efd::PassCache::Get()</a>, <a class="el" href="../../df/d29/Pass_8h_source.xhtml#l00081">efd::PassT&lt; T &gt;::getData()</a>, <a class="el" href="../../dc/d09/Stats_8h_source.xhtml#l00071">efd::Stat&lt; T &gt;::getVal()</a>, <a class="el" href="../../dc/d09/Stats_8h_source.xhtml#l00082">efd::Stat&lt; T &gt;::operator+=()</a>, <a class="el" href="../../dc/d09/Stats_8h_source.xhtml#l00076">efd::Stat&lt; T &gt;::operator=()</a>, <a class="el" href="../../dd/dea/Graph_8cpp_source.xhtml#l00036">efd::Graph::size()</a>, and <a class="el" href="../../dd/dea/Graph_8cpp_source.xhtml#l00040">efd::Graph::succ()</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../de/d8e/Enfield_8cpp_source.xhtml#l00052">main()</a>.</p>
<div id="dynsection-21" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-21-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-21-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-21-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d4/deb/namespaceefd_a4fe79e93e6a1353b6d765bf2e540ee1c_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="acef44623062a67b96096a7d9d4448433"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acef44623062a67b96096a7d9d4448433">&#9670;&nbsp;</a></span>PrintStats()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void efd::PrintStats </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>out</em> = <code>std::cout</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Usually called in the end of the program, i.e. when all statistical data have already been collected. </p>

<p class="definition">Definition at line <a class="el" href="../../d6/d1f/Stats_8cpp_source.xhtml#l00061">61</a> of file <a class="el" href="../../d6/d1f/Stats_8cpp_source.xhtml">Stats.cpp</a>.</p>

<p class="reference">References <a class="el" href="../../d6/d1f/Stats_8cpp_source.xhtml#l00031">efd::StatsPool::print()</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../de/d8e/Enfield_8cpp_source.xhtml#l00052">main()</a>.</p>
<div id="dynsection-22" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-22-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-22-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-22-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d4/deb/namespaceefd_acef44623062a67b96096a7d9d4448433_cgraph.svg" width="100%" height="366"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a540a63d03d49cb675f4f9d62e6b07780"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a540a63d03d49cb675f4f9d62e6b07780">&#9670;&nbsp;</a></span>PrintToStream()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void efd::PrintToStream </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d52/classefd_1_1QModule.xhtml#a66b6cdbe4eef6e77afbf7fd3148b9f02">QModule::Ref</a>&#160;</td>
          <td class="paramname"><em>qmod</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>o</em> = <code>std::cout</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>pretty</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Print <code>qmod</code> to an standard output stream <code>o</code>. </p>

<p class="definition">Definition at line <a class="el" href="../../df/dd9/Driver_8cpp_source.xhtml#l00103">103</a> of file <a class="el" href="../../df/dd9/Driver_8cpp_source.xhtml">Driver.cpp</a>.</p>

<p class="reference">References <a class="el" href="../../d9/d5d/QModule_8cpp_source.xhtml#l00217">efd::QModule::print()</a>.</p>
<div id="dynsection-23" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-23-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-23-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-23-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d4/deb/namespaceefd_a540a63d03d49cb675f4f9d62e6b07780_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a5b8442e2de32a9529d7a4fcd5829ef62"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5b8442e2de32a9529d7a4fcd5829ef62">&#9670;&nbsp;</a></span>ProcessAST()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void efd::ProcessAST </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d52/classefd_1_1QModule.xhtml#a66b6cdbe4eef6e77afbf7fd3148b9f02">QModule::Ref</a>&#160;</td>
          <td class="paramname"><em>qmod</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">Node::Ref</a>&#160;</td>
          <td class="paramname"><em>root</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processes the <code>root</code> node, and transform the entire AST into a <a class="el" href="../../dd/d52/classefd_1_1QModule.xhtml" title="Qasm module representation. ">QModule</a>. </p>

<p class="definition">Definition at line <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00308">308</a> of file <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml">Utils.cpp</a>.</p>

<p class="reference">References <a class="el" href="../../d6/d6a/classefd_1_1Node.xhtml#ab813c60af1717cf50e92a28b274c24ef">efd::Node::apply()</a>, and <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00181">efd::QModulefyVisitor::QModulefyVisitor()</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../d9/d5d/QModule_8cpp_source.xhtml#l00344">efd::QModule::GetFromAST()</a>.</p>
<div id="dynsection-24" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-24-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-24-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-24-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d4/deb/namespaceefd_a5b8442e2de32a9529d7a4fcd5829ef62_cgraph.svg" width="330" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ae853118f01bb2a68370fdb21db43b4f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae853118f01bb2a68370fdb21db43b4f0">&#9670;&nbsp;</a></span>RegisterArchitecture()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void efd::RegisterArchitecture </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/deb/namespaceefd.xhtml#acd77a48a3f6c5314aaca88206992b9ca">EnumArchitecture</a>&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#ac2bb0afac7192e2bce5e51b4fc2955d3">ArchRegistry::CtorTy</a>&#160;</td>
          <td class="paramname"><em>ctor</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Register an architecture, mapping <code>key</code> to <code>ctor</code>. </p>

<p class="definition">Definition at line <a class="el" href="../../d5/d6e/Architectures_8cpp_source.xhtml#l00087">87</a> of file <a class="el" href="../../d5/d6e/Architectures_8cpp_source.xhtml">Architectures.cpp</a>.</p>

<p class="reference">References <a class="el" href="../../da/d66/Registry_8h_source.xhtml#l00048">efd::Registry&lt; RTy, ATy, KTy, CTy &gt;::registerObj()</a>.</p>
<div id="dynsection-25" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-25-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-25-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-25-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d4/deb/namespaceefd_ae853118f01bb2a68370fdb21db43b4f0_cgraph.svg" width="588" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a6303951fd07cf01d0c0e36b91b045b54"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6303951fd07cf01d0c0e36b91b045b54">&#9670;&nbsp;</a></span>RegisterQbitAllocator()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void efd::RegisterQbitAllocator </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/deb/namespaceefd.xhtml#a829f2abec26c6c5fffb5cf37501b3514">EnumAllocator</a>&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dc/dd0/classefd_1_1Registry.xhtml#ac2bb0afac7192e2bce5e51b4fc2955d3">AllocatorRegistry::CtorTy</a>&#160;</td>
          <td class="paramname"><em>ctor</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Registers an allocator, mapping <code>name</code> to <code>ctor</code>. </p>

<p class="definition">Definition at line <a class="el" href="../../dc/dea/Allocators_8cpp_source.xhtml#l00058">58</a> of file <a class="el" href="../../dc/dea/Allocators_8cpp_source.xhtml">Allocators.cpp</a>.</p>

<p class="reference">References <a class="el" href="../../da/d66/Registry_8h_source.xhtml#l00048">efd::Registry&lt; RTy, ATy, KTy, CTy &gt;::registerObj()</a>.</p>
<div id="dynsection-26" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-26-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-26-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-26-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d4/deb/namespaceefd_a6303951fd07cf01d0c0e36b91b045b54_cgraph.svg" width="594" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a5d73093d1b1ab771a2e970412a565f39"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d73093d1b1ab771a2e970412a565f39">&#9670;&nbsp;</a></span>toShared()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;T&gt; efd::toShared </td>
          <td>(</td>
          <td class="paramtype">std::unique_ptr&lt; T &gt;&#160;</td>
          <td class="paramname"><em>from</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Wrapper function that "transforms" a <em>std::unique_ptr</em> into a <em>std::shared_ptr</em>. </p>
<p>Note that the unique_ptr will lose the reference to the previously pointed object. </p>

<p class="definition">Definition at line <a class="el" href="../../dc/d09/uRefCast_8h_source.xhtml#l00050">50</a> of file <a class="el" href="../../dc/d09/uRefCast_8h_source.xhtml">uRefCast.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../d9/ddd/WeightedSIMappingFinder_8cpp_source.xhtml#l00006">efd::WeightedSIMappingFinder::find()</a>, and <a class="el" href="../../de/de8/XbitToNumberPass_8cpp_source.xhtml#l00090">efd::XbitToNumberVisitor::visit()</a>.</p>

</div>
</div>
<a id="aa119fd70b5ec5d99dd8682d63d2e9a92"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa119fd70b5ec5d99dd8682d63d2e9a92">&#9670;&nbsp;</a></span>uniqueCastBackward()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename U &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt;T&gt; efd::uniqueCastBackward </td>
          <td>(</td>
          <td class="paramtype">std::unique_ptr&lt; U &gt;&#160;</td>
          <td class="paramname"><em>from</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Uses the RTTI framework to cast backwardly an unique_ptr. </p>
<p>Note that it transfers the ownership. So, if the cast returns an error, by assertion the execution stops.</p>
<p>It casts from a derived class to a base one. </p>

<p class="definition">Definition at line <a class="el" href="../../dc/d09/uRefCast_8h_source.xhtml#l00017">17</a> of file <a class="el" href="../../dc/d09/uRefCast_8h_source.xhtml">uRefCast.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00241">efd::QModulefyVisitor::visit()</a>.</p>

</div>
</div>
<a id="ad7adca0e4de58074aa3f91827469a491"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7adca0e4de58074aa3f91827469a491">&#9670;&nbsp;</a></span>uniqueCastForward()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename U &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt;T&gt; efd::uniqueCastForward </td>
          <td>(</td>
          <td class="paramtype">std::unique_ptr&lt; U &gt;&#160;</td>
          <td class="paramname"><em>from</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Uses the RTTI framework to cast forwardly an unique_ptr. </p>
<p>Note that it transfers the ownership. So, if the cast returns an error, by assertion the execution stops.</p>
<p>It casts from a base class to a derived one. </p>

<p class="definition">Definition at line <a class="el" href="../../dc/d09/uRefCast_8h_source.xhtml#l00035">35</a> of file <a class="el" href="../../dc/d09/uRefCast_8h_source.xhtml">uRefCast.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../d9/d5d/QModule_8cpp_source.xhtml#l00314">efd::QModule::clone()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00213">efd::NDRegDecl::cloneImpl()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00285">efd::NDIdRef::cloneImpl()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00591">efd::NDQasmVersion::cloneImpl()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00653">efd::NDInclude::cloneImpl()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00722">efd::NDGateSign::cloneImpl()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00790">efd::NDGateDecl::cloneImpl()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00988">efd::NDQOpBarrier::cloneImpl()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l01077">efd::NDQOpU::cloneImpl()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l01152">efd::NDQOpGen::cloneImpl()</a>, <a class="el" href="../../d1/d89/Nodes_8cpp_source.xhtml#l00515">efd::NDIfStmt::cloneImpl()</a>, <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00036">GetIntrinsicGates()</a>, <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00395">InlineGate()</a>, <a class="el" href="../../d0/dfd/Generator_8cpp_source.xhtml#l00017">main()</a>, and <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00232">efd::QModulefyVisitor::visit()</a>.</p>

</div>
</div>
<a id="a785b5c3a46b7a8b06bd7e1396dc7249b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a785b5c3a46b7a8b06bd7e1396dc7249b">&#9670;&nbsp;</a></span>WarningLog()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream &amp; efd::WarningLog </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>file</em> = <code>&quot;&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>line</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a stream object for logging warnings. </p>

<p class="definition">Definition at line <a class="el" href="../../d0/d72/Defs_8cpp_source.xhtml#l00033">33</a> of file <a class="el" href="../../d0/d72/Defs_8cpp_source.xhtml">Defs.cpp</a>.</p>

<p class="reference">References <a class="el" href="../../d9/d41/CommandLine_8h_source.xhtml#l00158">efd::Opt&lt; T &gt;::getVal()</a>.</p>
<div id="dynsection-27" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-27-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-27-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-27-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d4/deb/namespaceefd_a785b5c3a46b7a8b06bd7e1396dc7249b_cgraph.svg" width="291" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="afaf520a011031e3dc171b2896cba167f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afaf520a011031e3dc171b2896cba167f">&#9670;&nbsp;</a></span>StdLibCX</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::string efd::StdLibCX = &quot;cx&quot;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00090">90</a> of file <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml">Utils.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../df/d0c/Utils_8cpp_source.xhtml#l00092">IsCNOTGateCall()</a>.</p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue May 1 2018 23:34:01 for Enfield by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
