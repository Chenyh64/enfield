<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Enfield: lib/Transform/Allocators/QbitAllocator.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Enfield
   </div>
   <div id="projectbrief">An OpenQASM source-to-source compiler for optimization.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_97aefd0d527b934f1d99a682da8fe6a9.xhtml">lib</a></li><li class="navelem"><a class="el" href="../../dir_582f290f049f08c25ab9fc887a9170ac.xhtml">Transform</a></li><li class="navelem"><a class="el" href="../../dir_06974191db7fbe66527a95ceac77ccfb.xhtml">Allocators</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">QbitAllocator.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d0/d91/QbitAllocator_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&quot;enfield/Transform/Allocators/QbitAllocator.h&quot;</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&quot;enfield/Transform/RenameQbitsPass.h&quot;</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&quot;enfield/Transform/InlineAllPass.h&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&quot;enfield/Transform/PassCache.h&quot;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&quot;enfield/Transform/Utils.h&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&quot;enfield/Arch/ArchGraph.h&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&quot;enfield/Analysis/NodeVisitor.h&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&quot;enfield/Support/RTTI.h&quot;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&quot;enfield/Support/uRefCast.h&quot;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&quot;enfield/Support/Timer.h&quot;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&lt;</span><span class="preprocessor">iterator</span><span class="preprocessor">&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&lt;</span><span class="preprocessor">cassert</span><span class="preprocessor">&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">// ------------------ Solution Implementer ----------------------</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">namespace</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a> {</div><div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml">   17</a></span>&#160;    <span class="keyword">class</span> <a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml">SolutionImplPass</a> : <span class="keyword">public</span> <a class="code" href="../../db/d56/classefd_1_1PassT.xhtml">PassT</a>&lt;<span class="keywordtype">void</span>&gt;, <span class="keyword">public</span> <a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor</a> {</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;        <span class="keyword">private</span>:</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;            <a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml">Solution</a>&amp; mData;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;            <a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml">XbitToNumber</a> mXbitToNumber;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;            <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::vector&lt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">Ref</a>&gt; mMap;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;            <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::unordered_map&lt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">Ref</a>, <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::vector&lt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a>&gt;&gt; mReplVector;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;            uint32_t mDepIdx;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;            <span class="comment">/// \brief Gets the node mapped to the string version of \p ref.</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a> getMappedNode(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">Ref</a> ref);</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            <span class="comment">/// \brief Wraps \p ref with \p ifstmt if \p ifstmt is not nullptr.</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;            <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a> wrapWithIfNode(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a> ref, <a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">NDIfStmt</a>::<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a6d274d00b3f4892cc91a844d1ee61dc9">Ref</a> ifstmt);</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            <span class="comment">/// \brief Apply the swaps for the current dependency.</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            <span class="keywordtype">void</span> applyOperations(<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml">NDQOp</a>::<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a27de177a3e7801a76d34e00afcae9838">Ref</a> ref, <a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">NDIfStmt</a>::<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a6d274d00b3f4892cc91a844d1ee61dc9">Ref</a> ifstmt = <span class="keywordtype">nullptr</span>);</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        <span class="keyword">public</span>:</div><div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a7841dcb9503f9aa95ac1f3d26bf7697a">   36</a></span>&#160;            <a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a7841dcb9503f9aa95ac1f3d26bf7697a">SolutionImplPass</a>(<a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml">Solution</a>&amp; sol) : mData(sol) {}</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            <span class="keywordtype">bool</span> <a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a5d85584bddab20ad392b712ac26708cb">run</a>(<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a66b6cdbe4eef6e77afbf7fd3148b9f02">Ref</a> qmod) <span class="keyword">override</span>;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a20b7e81a4638e5bc78d1ad8412978951">visit</a>(<a class="code" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml">NDQOpMeasure</a>::<a class="code" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#a953962fb4b6faf4a097c93334b61b813">Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#ae23e6bc556937d7fb7da447dbe657fa1">visit</a>(<a class="code" href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml">NDQOpReset</a>::<a class="code" href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml#a49df0206fc1d4cad2bce5fdd65ee99ac">Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a75619983ec2ccc088d8d432b41912477">visit</a>(<a class="code" href="../../d7/dbe/classefd_1_1NDQOpU.xhtml">NDQOpU</a>::<a class="code" href="../../d7/dbe/classefd_1_1NDQOpU.xhtml#afd9aacd39dcd46ba651258bd0ca3678a">Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a0c61cf352053252ff5a1f1ad0dd390e3">visit</a>(<a class="code" href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml">NDQOpBarrier</a>::<a class="code" href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml#a9d8a9b7f76b12026f053c14571dbfb05">Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a28d1b0365e4cae364c3f2cdd5d16bfcd">visit</a>(<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">NDIfStmt</a>::<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a6d274d00b3f4892cc91a844d1ee61dc9">Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a516b3c303be3cc491a95d78b3a963d69">visit</a>(<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml">NDList</a>::<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a4c28c0c6e21cdf3ae1a8b8df7b7ea569">Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a857bc2a48e98f8c814e551f76b5be396">visit</a>(<a class="code" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml">NDQOpCX</a>::<a class="code" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a6d812c45491ef0cb54c2377f78167b46">Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a24c5e7f75654d419c496998458a8b871">visit</a>(<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml">NDQOpGen</a>::<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a56e32e98055644bc5fff505ad46b3386">Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    };</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml">SolutionImplPass</a>::getMappedNode(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">Ref</a> ref) {</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    uint32_t id = mXbitToNumber<a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ae645e4b0ccb9c25c534883843484f06a">.</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ae645e4b0ccb9c25c534883843484f06a">getQUId</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ae645e4b0ccb9c25c534883843484f06a">(</a>ref<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">-&gt;</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">toString</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">)</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ae645e4b0ccb9c25c534883843484f06a">)</a>;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordflow">return</span> mMap[id]<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">-&gt;</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">clone</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">)</a>;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;}</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml">SolutionImplPass</a>::wrapWithIfNode</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a> ref, <a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">NDIfStmt</a>::<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a6d274d00b3f4892cc91a844d1ee61dc9">Ref</a> ifstmt) {</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordflow">if</span> (ifstmt != <span class="keywordtype">nullptr</span>) {</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="keyword">auto</span> ifclone = <a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">uniqueCastForward</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">&lt;</a><a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">NDIfStmt</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">&gt;</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">(</a>ifstmt<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">-&gt;</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">clone</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">)</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">)</a>;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        ifclone-&gt;<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#acf7a372c40a8d67d3d642d2bdffb9472">setQOp</a><a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#acf7a372c40a8d67d3d642d2bdffb9472">(</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">uniqueCastForward</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">&lt;</a><a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml">NDQOp</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">&gt;</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">(</a><a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(ref)<a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">)</a><a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#acf7a372c40a8d67d3d642d2bdffb9472">)</a>;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        ref = <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(ifclone);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    }</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordflow">return</span> ref;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml">SolutionImplPass</a>::applyOperations(<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml">NDQOp</a>::<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a27de177a3e7801a76d34e00afcae9838">Ref</a> qop, <a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">NDIfStmt</a>::<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a6d274d00b3f4892cc91a844d1ee61dc9">Ref</a> ifstmt) {</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordtype">bool</span> stillHasOpSeqs = mDepIdx &lt; mData<a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#ab9f13ffebeaa6a3fd9825c5780eeac02">.</a><a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#ab9f13ffebeaa6a3fd9825c5780eeac02">mOpSeqs</a>.size();</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordtype">bool</span> isIfStmtAndHasOp = ifstmt &amp;&amp; stillHasOpSeqs &amp;&amp; ifstmt == mData<a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#ab9f13ffebeaa6a3fd9825c5780eeac02">.</a><a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#ab9f13ffebeaa6a3fd9825c5780eeac02">mOpSeqs</a>[mDepIdx].first;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordtype">bool</span> isQOpAndHasOp = !ifstmt &amp;&amp; stillHasOpSeqs &amp;&amp; qop == mData<a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#ab9f13ffebeaa6a3fd9825c5780eeac02">.</a><a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#ab9f13ffebeaa6a3fd9825c5780eeac02">mOpSeqs</a>[mDepIdx].first;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordflow">if</span> (isIfStmtAndHasOp || isQOpAndHasOp) {</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="keyword">auto</span>&amp; ops = mData<a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#ab9f13ffebeaa6a3fd9825c5780eeac02">.</a><a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#ab9f13ffebeaa6a3fd9825c5780eeac02">mOpSeqs</a>[mDepIdx].second;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        ++mDepIdx;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">Ref</a> key = ifstmt;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keywordflow">if</span> (key == <span class="keywordtype">nullptr</span>) { key = qop; }</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        mReplVector[key] = <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::vector&lt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a>&gt;();</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; op : ops) {</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            <span class="keywordflow">switch</span> (op<a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml#a8b4600b23c317966b2529213b1f649db">.</a><a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml#a8b4600b23c317966b2529213b1f649db">mK</a>) {</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml">Operation</a><a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3adfad524e27630088f14e4334a0ed385c">::</a><a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3adfad524e27630088f14e4334a0ed385c">K_OP_CNOT</a>:</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                    {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                        <span class="keyword">auto</span> clone = <a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">uniqueCastForward</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">&lt;</a><a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml">NDQOp</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">&gt;</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">(</a>qop<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">-&gt;</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">clone</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">)</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">)</a>;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                        clone-&gt;<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">getQArgs</a><a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">(</a><a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">)</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a0c627fa9aac8afe1562eae8f64830bff">-&gt;</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a0c627fa9aac8afe1562eae8f64830bff">apply</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a0c627fa9aac8afe1562eae8f64830bff">(</a><span class="keyword">this</span><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a0c627fa9aac8afe1562eae8f64830bff">)</a>;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                        mReplVector[key].push_back(wrapWithIfNode(<a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(clone), ifstmt));</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                    }</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml">Operation</a><a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3a46bb7ba2b32ce435a8ffafb2bab56671">::</a><a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3a46bb7ba2b32ce435a8ffafb2bab56671">K_OP_SWAP</a>:</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                    mReplVector[key].push_back(</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                            <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad83c1dbaa41519964485ea8e2437bcb7">::</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad83c1dbaa41519964485ea8e2437bcb7">CreateISwap</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad83c1dbaa41519964485ea8e2437bcb7">(</a>mMap[op.mU]<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">-&gt;</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">clone</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">)</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad83c1dbaa41519964485ea8e2437bcb7">,</a> mMap[op.mV]<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">-&gt;</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">clone</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">)</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ad83c1dbaa41519964485ea8e2437bcb7">)</a>);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                    <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::swap(mMap[op.mU], mMap[op.mV]);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml">Operation</a><a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3adf6090959dc5eaaa4fe429aa4c4bfe06">::</a><a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3adf6090959dc5eaaa4fe429aa4c4bfe06">K_OP_REV</a>:</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                    {</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                        <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a> call = <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#af8e947f977669e54d6aaf3a43815833c">::</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#af8e947f977669e54d6aaf3a43815833c">CreateIRevCX</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#af8e947f977669e54d6aaf3a43815833c">(</a></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                                    mMap[op.mU]<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">-&gt;</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">clone</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">)</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#af8e947f977669e54d6aaf3a43815833c">,</a></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                                    mMap[op.mV]<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">-&gt;</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">clone</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">)</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#af8e947f977669e54d6aaf3a43815833c">)</a>;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                        mReplVector[key].push_back(wrapWithIfNode(<a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(call), ifstmt));</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                    }</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml">Operation</a><a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3a20b669183f13598bd8a76a795be32afb">::</a><a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3a20b669183f13598bd8a76a795be32afb">K_OP_LCNOT</a>:</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                    {</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                        <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a> call = <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a3c72243a170ffe8a4836e7092fd1469f">::</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a3c72243a170ffe8a4836e7092fd1469f">CreateILongCX</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a3c72243a170ffe8a4836e7092fd1469f">(</a></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                                    mMap[op.mU]<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">-&gt;</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">clone</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">)</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a3c72243a170ffe8a4836e7092fd1469f">,</a></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                                    mMap[op.mW]<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">-&gt;</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">clone</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">)</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a3c72243a170ffe8a4836e7092fd1469f">,</a></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                                    mMap[op.mV]<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">-&gt;</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">clone</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">(</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">)</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a3c72243a170ffe8a4836e7092fd1469f">)</a>;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                        mReplVector[key].push_back(wrapWithIfNode(<a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(call), ifstmt));</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                    }</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            }</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        }</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="keywordflow">if</span> (ops.empty()) {</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            qop<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">-&gt;</a><a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">getQArgs</a><a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">(</a><a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">)</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a0c627fa9aac8afe1562eae8f64830bff">-&gt;</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a0c627fa9aac8afe1562eae8f64830bff">apply</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a0c627fa9aac8afe1562eae8f64830bff">(</a><span class="keyword">this</span><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a0c627fa9aac8afe1562eae8f64830bff">)</a>;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        }</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        qop<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">-&gt;</a><a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">getQArgs</a><a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">(</a><a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">)</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a0c627fa9aac8afe1562eae8f64830bff">-&gt;</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a0c627fa9aac8afe1562eae8f64830bff">apply</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a0c627fa9aac8afe1562eae8f64830bff">(</a><span class="keyword">this</span><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a0c627fa9aac8afe1562eae8f64830bff">)</a>;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    }</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="comment">// if (!mReplVector[key].empty()) {</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="comment">//     NDQOp::uRef clone = uniqueCastForward&lt;NDQOp&gt;(ref-&gt;clone());</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="comment">//     auto qargs = clone-&gt;getQArgs();</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="comment">//     for (uint32_t i = 0, e = qargs-&gt;getChildNumber(); i &lt; e; ++i) {</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="comment">//         auto qarg = qargs-&gt;getChild(i);</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="comment">//         qargs-&gt;setChild(i, getMappedNode(qarg));</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="comment">//     }</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="comment">//     mReplVector[key].push_back(wrapWithIfNode(std::move(clone), ifstmt));</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="comment">// }</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;}</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a5d85584bddab20ad392b712ac26708cb">  139</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml">SolutionImplPass</a>::<a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a5d85584bddab20ad392b712ac26708cb">run</a>(<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a66b6cdbe4eef6e77afbf7fd3148b9f02">Ref</a> qmod) {</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <a class="code" href="../../d1/d73/Defs_8h.xhtml#a12c2040f25d8e3a7b9e1c2024c618cb6">INF</a> &lt;&lt; <span class="stringliteral">&quot;Initial Configuration: &quot;</span> &lt;&lt; <a class="code" href="../../d4/deb/namespaceefd.xhtml#aac5a20e6db5d358cf72d4816441d0b0d">MappingToString</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#aac5a20e6db5d358cf72d4816441d0b0d">(</a>mData<a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#a61fb88a6c3077b7d1abb47887bd01b11">.</a><a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#a61fb88a6c3077b7d1abb47887bd01b11">mInitial</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#aac5a20e6db5d358cf72d4816441d0b0d">)</a> &lt;&lt; <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::endl;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keyword">auto</span> xtonpass = <a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml">PassCache</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a8c54d0a438f35de5629ae78c886687a8">::</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a8c54d0a438f35de5629ae78c886687a8">Get</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a8c54d0a438f35de5629ae78c886687a8">&lt;</a><a class="code" href="../../de/d2b/classefd_1_1XbitToNumberWrapperPass.xhtml">XbitToNumberWrapperPass</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a8c54d0a438f35de5629ae78c886687a8">&gt;</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a8c54d0a438f35de5629ae78c886687a8">(</a>qmod<a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a8c54d0a438f35de5629ae78c886687a8">)</a>;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    mXbitToNumber = xtonpass<a class="code" href="../../db/d56/classefd_1_1PassT.xhtml#aae3442c1486bcec7622a64451262d684">-&gt;</a><a class="code" href="../../db/d56/classefd_1_1PassT.xhtml#aae3442c1486bcec7622a64451262d684">getData</a><a class="code" href="../../db/d56/classefd_1_1PassT.xhtml#aae3442c1486bcec7622a64451262d684">(</a><a class="code" href="../../db/d56/classefd_1_1PassT.xhtml#aae3442c1486bcec7622a64451262d684">)</a>;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    mMap.assign(mXbitToNumber<a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ab395508705fe60ed3bd0cfb28eb5ffc6">.</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ab395508705fe60ed3bd0cfb28eb5ffc6">getQSize</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ab395508705fe60ed3bd0cfb28eb5ffc6">(</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ab395508705fe60ed3bd0cfb28eb5ffc6">)</a>, <span class="keywordtype">nullptr</span>);</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordflow">for</span> (uint32_t i = 0, e = mXbitToNumber<a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ab395508705fe60ed3bd0cfb28eb5ffc6">.</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ab395508705fe60ed3bd0cfb28eb5ffc6">getQSize</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ab395508705fe60ed3bd0cfb28eb5ffc6">(</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ab395508705fe60ed3bd0cfb28eb5ffc6">)</a>; i &lt; e; ++i) {</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        mMap[i] = mXbitToNumber<a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#a5ec70df49186af44e04433433bd13090">.</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#a5ec70df49186af44e04433433bd13090">getQNode</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#a5ec70df49186af44e04433433bd13090">(</a>mData<a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#a61fb88a6c3077b7d1abb47887bd01b11">.</a><a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#a61fb88a6c3077b7d1abb47887bd01b11">mInitial</a>[i]<a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#a5ec70df49186af44e04433433bd13090">)</a>;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    }</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    mDepIdx = 0;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> it = qmod<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#ac00e1eb93f94c00db1e6a661d8f95d9d">-&gt;</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#ac00e1eb93f94c00db1e6a661d8f95d9d">stmt_begin</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#ac00e1eb93f94c00db1e6a661d8f95d9d">(</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#ac00e1eb93f94c00db1e6a661d8f95d9d">)</a>, end = qmod<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a23d45e3b6c65d5fa14b199da8b0617c7">-&gt;</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a23d45e3b6c65d5fa14b199da8b0617c7">stmt_end</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a23d45e3b6c65d5fa14b199da8b0617c7">(</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a23d45e3b6c65d5fa14b199da8b0617c7">)</a>; it != end; ++it) {</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        (*it)-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ab813c60af1717cf50e92a28b274c24ef">apply</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ab813c60af1717cf50e92a28b274c24ef">(</a><span class="keyword">this</span><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ab813c60af1717cf50e92a28b274c24ef">)</a>;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    }</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; pair : mReplVector) {</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="keywordflow">if</span> (!pair.second.empty())</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            qmod<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#abaf0b3dd099e4b098b89772b6a134d07">-&gt;</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#abaf0b3dd099e4b098b89772b6a134d07">replaceStatement</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#abaf0b3dd099e4b098b89772b6a134d07">(</a>pair.first<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#abaf0b3dd099e4b098b89772b6a134d07">,</a> <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(pair.second)<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#abaf0b3dd099e4b098b89772b6a134d07">)</a>;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    }</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;}</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a20b7e81a4638e5bc78d1ad8412978951">  163</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml">SolutionImplPass</a>::<a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a20b7e81a4638e5bc78d1ad8412978951">visit</a>(<a class="code" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml">NDQOpMeasure</a>::<a class="code" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#a953962fb4b6faf4a097c93334b61b813">Ref</a> ref) {</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    applyOperations(ref);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;}</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#ae23e6bc556937d7fb7da447dbe657fa1">  167</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml">SolutionImplPass</a>::<a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#ae23e6bc556937d7fb7da447dbe657fa1">visit</a>(<a class="code" href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml">NDQOpReset</a>::<a class="code" href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml#a49df0206fc1d4cad2bce5fdd65ee99ac">Ref</a> ref) {</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    applyOperations(ref);</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;}</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a75619983ec2ccc088d8d432b41912477">  171</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml">SolutionImplPass</a>::<a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a75619983ec2ccc088d8d432b41912477">visit</a>(<a class="code" href="../../d7/dbe/classefd_1_1NDQOpU.xhtml">NDQOpU</a>::<a class="code" href="../../d7/dbe/classefd_1_1NDQOpU.xhtml#afd9aacd39dcd46ba651258bd0ca3678a">Ref</a> ref) {</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    applyOperations(ref);</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;}</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno"><a class="line" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a0c61cf352053252ff5a1f1ad0dd390e3">  175</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml">SolutionImplPass</a>::<a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a0c61cf352053252ff5a1f1ad0dd390e3">visit</a>(<a class="code" href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml">NDQOpBarrier</a>::<a class="code" href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml#a9d8a9b7f76b12026f053c14571dbfb05">Ref</a> ref) {</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    applyOperations(ref);</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;}</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno"><a class="line" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a28d1b0365e4cae364c3f2cdd5d16bfcd">  179</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml">SolutionImplPass</a>::<a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a28d1b0365e4cae364c3f2cdd5d16bfcd">visit</a>(<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">NDIfStmt</a>::<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a6d274d00b3f4892cc91a844d1ee61dc9">Ref</a> ref) {</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    applyOperations(ref<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ae5c408d49862e644f1d299ab5b2f121d">-&gt;</a><a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ae5c408d49862e644f1d299ab5b2f121d">getQOp</a><a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ae5c408d49862e644f1d299ab5b2f121d">(</a><a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ae5c408d49862e644f1d299ab5b2f121d">)</a>, ref);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;}</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno"><a class="line" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a516b3c303be3cc491a95d78b3a963d69">  183</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml">SolutionImplPass</a>::<a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a516b3c303be3cc491a95d78b3a963d69">visit</a>(<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml">NDList</a>::<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a4c28c0c6e21cdf3ae1a8b8df7b7ea569">Ref</a> ref) {</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordflow">for</span> (uint32_t i = 0, e = ref<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a7d1b691a45689241a8138539a2be8596">-&gt;</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a7d1b691a45689241a8138539a2be8596">getChildNumber</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a7d1b691a45689241a8138539a2be8596">(</a><a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a7d1b691a45689241a8138539a2be8596">)</a>; i &lt; e; ++i) {</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        ref<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#aad4510814ff15bd26fe2f95f9d2a2279">-&gt;</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#aad4510814ff15bd26fe2f95f9d2a2279">setChild</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#aad4510814ff15bd26fe2f95f9d2a2279">(</a>i<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#aad4510814ff15bd26fe2f95f9d2a2279">,</a> getMappedNode(ref<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">-&gt;</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">getChild</a><a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">(</a>i<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">)</a>)<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#aad4510814ff15bd26fe2f95f9d2a2279">)</a>;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    }</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;}</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno"><a class="line" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a857bc2a48e98f8c814e551f76b5be396">  189</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml">SolutionImplPass</a>::<a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a857bc2a48e98f8c814e551f76b5be396">visit</a>(<a class="code" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml">NDQOpCX</a>::<a class="code" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a6d812c45491ef0cb54c2377f78167b46">Ref</a> ref) {</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    applyOperations(ref);</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;}</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno"><a class="line" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a24c5e7f75654d419c496998458a8b871">  193</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml">SolutionImplPass</a>::<a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a24c5e7f75654d419c496998458a8b871">visit</a>(<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml">NDQOpGen</a>::<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a56e32e98055644bc5fff505ad46b3386">Ref</a> ref) {</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    applyOperations(ref);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;}</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">// ------------------ QbitAllocator ----------------------</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keyword">static</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml">Stat</a>&lt;uint32_t&gt; DepStat</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml#ad4e3a44a99c1261a0be802b6f4c0f67d">(</a><span class="stringliteral">&quot;Dependencies&quot;</span><a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml#ad4e3a44a99c1261a0be802b6f4c0f67d">,</a> <span class="stringliteral">&quot;The number of dependencies of this program.&quot;</span><a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml#ad4e3a44a99c1261a0be802b6f4c0f67d">)</a>;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="keyword">static</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml">Stat</a>&lt;<span class="keywordtype">double</span>&gt; AllocTime</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml#ad4e3a44a99c1261a0be802b6f4c0f67d">(</a><span class="stringliteral">&quot;AllocTime&quot;</span><a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml#ad4e3a44a99c1261a0be802b6f4c0f67d">,</a> <span class="stringliteral">&quot;Time to allocate all qubits.&quot;</span><a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml#ad4e3a44a99c1261a0be802b6f4c0f67d">)</a>;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keyword">static</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml">Stat</a>&lt;<span class="keywordtype">double</span>&gt; InlineTime</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml#ad4e3a44a99c1261a0be802b6f4c0f67d">(</a><span class="stringliteral">&quot;InlineTime&quot;</span><a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml#ad4e3a44a99c1261a0be802b6f4c0f67d">,</a> <span class="stringliteral">&quot;Time to inline all gates.&quot;</span><a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml#ad4e3a44a99c1261a0be802b6f4c0f67d">)</a>;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="keyword">static</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml">Stat</a>&lt;<span class="keywordtype">double</span>&gt; ReplaceTime</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml#ad4e3a44a99c1261a0be802b6f4c0f67d">(</a><span class="stringliteral">&quot;ReplaceTime&quot;</span><a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml#ad4e3a44a99c1261a0be802b6f4c0f67d">,</a> <span class="stringliteral">&quot;Time to replace all qubits to the corresponding architechture ones.&quot;</span><a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml#ad4e3a44a99c1261a0be802b6f4c0f67d">)</a>;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="keyword">static</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml">Stat</a>&lt;<span class="keywordtype">double</span>&gt; RenameTime</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml#ad4e3a44a99c1261a0be802b6f4c0f67d">(</a><span class="stringliteral">&quot;RenameTime&quot;</span><a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml#ad4e3a44a99c1261a0be802b6f4c0f67d">,</a> <span class="stringliteral">&quot;Time to rename all qubits to the mapped qubits.&quot;</span><a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml#ad4e3a44a99c1261a0be802b6f4c0f67d">)</a>;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml">Stat</a>&lt;uint32_t&gt; <a class="code" href="../../d0/d91/QbitAllocator_8cpp.xhtml#a833f140810dc39cda19daa437e7abcb0">TotalCost</a></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml#ad4e3a44a99c1261a0be802b6f4c0f67d">(</a><span class="stringliteral">&quot;TotalCost&quot;</span><a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml#ad4e3a44a99c1261a0be802b6f4c0f67d">,</a> <span class="stringliteral">&quot;Total cost after allocating the qubits.&quot;</span><a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml#ad4e3a44a99c1261a0be802b6f4c0f67d">)</a>;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::Opt&lt;uint32_t&gt; <a class="code" href="../../d0/d91/QbitAllocator_8cpp.xhtml#a99fd7c5ea250372d9b17e42df7764318">SwapCost</a></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<a class="code" href="../../de/d50/classefd_1_1Opt.xhtml#a47df596bfe4f88f23b9c989d10abc164">(</a><span class="stringliteral">&quot;-swap-cost&quot;</span><a class="code" href="../../de/d50/classefd_1_1Opt.xhtml#a47df596bfe4f88f23b9c989d10abc164">,</a> <span class="stringliteral">&quot;Cost of using a swap function.&quot;</span><a class="code" href="../../de/d50/classefd_1_1Opt.xhtml#a47df596bfe4f88f23b9c989d10abc164">,</a> 7<a class="code" href="../../de/d50/classefd_1_1Opt.xhtml#a47df596bfe4f88f23b9c989d10abc164">,</a> <span class="keyword">false</span><a class="code" href="../../de/d50/classefd_1_1Opt.xhtml#a47df596bfe4f88f23b9c989d10abc164">)</a>;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::Opt&lt;uint32_t&gt; <a class="code" href="../../d0/d91/QbitAllocator_8cpp.xhtml#a36846d9fb7f5b314db3aa16d72efe81f">RevCost</a></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<a class="code" href="../../de/d50/classefd_1_1Opt.xhtml#a47df596bfe4f88f23b9c989d10abc164">(</a><span class="stringliteral">&quot;-rev-cost&quot;</span><a class="code" href="../../de/d50/classefd_1_1Opt.xhtml#a47df596bfe4f88f23b9c989d10abc164">,</a> <span class="stringliteral">&quot;Cost of using a reverse edge.&quot;</span><a class="code" href="../../de/d50/classefd_1_1Opt.xhtml#a47df596bfe4f88f23b9c989d10abc164">,</a> 4<a class="code" href="../../de/d50/classefd_1_1Opt.xhtml#a47df596bfe4f88f23b9c989d10abc164">,</a> <span class="keyword">false</span><a class="code" href="../../de/d50/classefd_1_1Opt.xhtml#a47df596bfe4f88f23b9c989d10abc164">)</a>;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::Opt&lt;uint32_t&gt; <a class="code" href="../../d0/d91/QbitAllocator_8cpp.xhtml#a37e324531f1d9e6e8b4304b6043309a9">LCXCost</a></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<a class="code" href="../../de/d50/classefd_1_1Opt.xhtml#a47df596bfe4f88f23b9c989d10abc164">(</a><span class="stringliteral">&quot;-lcx-cost&quot;</span><a class="code" href="../../de/d50/classefd_1_1Opt.xhtml#a47df596bfe4f88f23b9c989d10abc164">,</a> <span class="stringliteral">&quot;Cost of using long cnot gate.&quot;</span><a class="code" href="../../de/d50/classefd_1_1Opt.xhtml#a47df596bfe4f88f23b9c989d10abc164">,</a> 10<a class="code" href="../../de/d50/classefd_1_1Opt.xhtml#a47df596bfe4f88f23b9c989d10abc164">,</a> <span class="keyword">false</span><a class="code" href="../../de/d50/classefd_1_1Opt.xhtml#a47df596bfe4f88f23b9c989d10abc164">)</a>;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno"><a class="line" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#aa380bf007e46c8c8f09ffe7d4a552d54">  219</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml">QbitAllocator</a>::<a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#aa380bf007e46c8c8f09ffe7d4a552d54">QbitAllocator</a>(<a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml">ArchGraph</a>::<a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a8c9131ca43a772179c24fa4dc9701bb2">sRef</a> archGraph)</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    : <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#acacd8c581f5858d96fc551af781be664">mInlineAll</a>(<span class="keyword">false</span>), <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a4d7d13dd12213a9f247d1304472badbd">mArchGraph</a>(archGraph) {</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;}</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml">QbitAllocator</a>::inlineAllGates() {</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="keyword">auto</span> inlinePass = <a class="code" href="../../d5/de3/classefd_1_1InlineAllPass.xhtml">InlineAllPass</a><a class="code" href="../../d5/de3/classefd_1_1InlineAllPass.xhtml#a39637a556c08bf458f9bf20812d11470">::</a><a class="code" href="../../d5/de3/classefd_1_1InlineAllPass.xhtml#a39637a556c08bf458f9bf20812d11470">Create</a><a class="code" href="../../d5/de3/classefd_1_1InlineAllPass.xhtml#a39637a556c08bf458f9bf20812d11470">(</a><a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a0e4d317bfe27af72deffa87f85630037">mBasis</a><a class="code" href="../../d5/de3/classefd_1_1InlineAllPass.xhtml#a39637a556c08bf458f9bf20812d11470">)</a>;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml">PassCache</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a22f92cfd25891762477252a6cbcc4906">::</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a22f92cfd25891762477252a6cbcc4906">Run</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a22f92cfd25891762477252a6cbcc4906">(</a><a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a85958f7018c9dc1b6710420712399065">mMod</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a22f92cfd25891762477252a6cbcc4906">,</a> inlinePass.get()<a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a22f92cfd25891762477252a6cbcc4906">)</a>;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;}</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml">QbitAllocator</a>::replaceWithArchSpecs() {</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="comment">// Renaming program qbits to architecture qbits.</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <a class="code" href="../../d8/dd7/classefd_1_1RenameQbitPass.xhtml">RenameQbitPass</a>::<a class="code" href="../../d8/dd7/classefd_1_1RenameQbitPass.xhtml#afc4aead060964c7f60ff9316cd5199a3">ArchMap</a> toArchMap;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="keyword">auto</span> xtn = <a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml">PassCache</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a8c54d0a438f35de5629ae78c886687a8">::</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a8c54d0a438f35de5629ae78c886687a8">Get</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a8c54d0a438f35de5629ae78c886687a8">&lt;</a><a class="code" href="../../de/d2b/classefd_1_1XbitToNumberWrapperPass.xhtml">XbitToNumberWrapperPass</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a8c54d0a438f35de5629ae78c886687a8">&gt;</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a8c54d0a438f35de5629ae78c886687a8">(</a><a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a85958f7018c9dc1b6710420712399065">mMod</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a8c54d0a438f35de5629ae78c886687a8">)</a>;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keyword">auto</span> xbitToNumber = xtn<a class="code" href="../../db/d56/classefd_1_1PassT.xhtml#aae3442c1486bcec7622a64451262d684">-&gt;</a><a class="code" href="../../db/d56/classefd_1_1PassT.xhtml#aae3442c1486bcec7622a64451262d684">getData</a><a class="code" href="../../db/d56/classefd_1_1PassT.xhtml#aae3442c1486bcec7622a64451262d684">(</a><a class="code" href="../../db/d56/classefd_1_1PassT.xhtml#aae3442c1486bcec7622a64451262d684">)</a>;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="keywordflow">for</span> (uint32_t i = 0, e = xbitToNumber<a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ab395508705fe60ed3bd0cfb28eb5ffc6">.</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ab395508705fe60ed3bd0cfb28eb5ffc6">getQSize</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ab395508705fe60ed3bd0cfb28eb5ffc6">(</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ab395508705fe60ed3bd0cfb28eb5ffc6">)</a>; i &lt; e; ++i) {</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        toArchMap[xbitToNumber.getQStrId(i)] = <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a4d7d13dd12213a9f247d1304472badbd">mArchGraph</a>-&gt;<a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a1388225779727295176780b9a68aedf2">getNode</a><a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a1388225779727295176780b9a68aedf2">(</a>i<a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a1388225779727295176780b9a68aedf2">)</a>;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    }</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <span class="keyword">auto</span> renamePass = <a class="code" href="../../d8/dd7/classefd_1_1RenameQbitPass.xhtml">RenameQbitPass</a><a class="code" href="../../d8/dd7/classefd_1_1RenameQbitPass.xhtml#a0b50e7bed18048ff76f94e5e53311c6b">::</a><a class="code" href="../../d8/dd7/classefd_1_1RenameQbitPass.xhtml#a0b50e7bed18048ff76f94e5e53311c6b">Create</a><a class="code" href="../../d8/dd7/classefd_1_1RenameQbitPass.xhtml#a0b50e7bed18048ff76f94e5e53311c6b">(</a>toArchMap<a class="code" href="../../d8/dd7/classefd_1_1RenameQbitPass.xhtml#a0b50e7bed18048ff76f94e5e53311c6b">)</a>;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml">PassCache</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a22f92cfd25891762477252a6cbcc4906">::</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a22f92cfd25891762477252a6cbcc4906">Run</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a22f92cfd25891762477252a6cbcc4906">(</a><a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a85958f7018c9dc1b6710420712399065">mMod</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a22f92cfd25891762477252a6cbcc4906">,</a> renamePass.get()<a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a22f92cfd25891762477252a6cbcc4906">)</a>;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="comment">// Replacing the old qbit declarations with the architecture&#39;s qbit</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <span class="comment">// declaration.</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a85958f7018c9dc1b6710420712399065">mMod</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#af0725ce17bd18e6bddf698e89b1de4bf">-&gt;</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#af0725ce17bd18e6bddf698e89b1de4bf">removeAllQRegs</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#af0725ce17bd18e6bddf698e89b1de4bf">(</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#af0725ce17bd18e6bddf698e89b1de4bf">)</a>;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> it = <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a4d7d13dd12213a9f247d1304472badbd">mArchGraph</a>-&gt;<a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a0481cd8304cd18c5708e67244e754723">reg_begin</a><a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a0481cd8304cd18c5708e67244e754723">(</a><a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a0481cd8304cd18c5708e67244e754723">)</a>, e = <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a4d7d13dd12213a9f247d1304472badbd">mArchGraph</a>-&gt;<a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a32ca17290f67e79f38c1b591ca2c1257">reg_end</a><a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a32ca17290f67e79f38c1b591ca2c1257">(</a><a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a32ca17290f67e79f38c1b591ca2c1257">)</a>; it != e; ++it)</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a85958f7018c9dc1b6710420712399065">mMod</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a13a3c3e6d3455ff05f837fbd5fc4a06e">-&gt;</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a13a3c3e6d3455ff05f837fbd5fc4a06e">insertReg</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a13a3c3e6d3455ff05f837fbd5fc4a06e">(</a><a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml">NDRegDecl</a><a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#af206910448d281670d3afe89f3ff4677">::</a><a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#af206910448d281670d3afe89f3ff4677">CreateQ</a></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                <a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#af206910448d281670d3afe89f3ff4677">(</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#ab5c0a6c0dcdf33158eb125b0e362ed4c">NDId</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a96ab9dcd008523aa2f4cfc2eb95d7178">::</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a96ab9dcd008523aa2f4cfc2eb95d7178">Create</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a96ab9dcd008523aa2f4cfc2eb95d7178">(</a>it-&gt;first<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a96ab9dcd008523aa2f4cfc2eb95d7178">)</a><a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#af206910448d281670d3afe89f3ff4677">,</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml#a5cd572a4b0d839b3694a9a96ed8d8382">NDInt</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a96ab9dcd008523aa2f4cfc2eb95d7178">::</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a96ab9dcd008523aa2f4cfc2eb95d7178">Create</a><a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a96ab9dcd008523aa2f4cfc2eb95d7178">(</a><a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::to_string(it-&gt;second)<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a96ab9dcd008523aa2f4cfc2eb95d7178">)</a><a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#af206910448d281670d3afe89f3ff4677">)</a><a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a13a3c3e6d3455ff05f837fbd5fc4a06e">)</a>;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;}</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno"><a class="line" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#ad14c92694bf2e4c5874ac1bcc477a6dc">  250</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml">QbitAllocator</a>::<a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#ad14c92694bf2e4c5874ac1bcc477a6dc">run</a>(<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>::<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a66b6cdbe4eef6e77afbf7fd3148b9f02">Ref</a> qmod) {</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml">Timer</a> timer;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="comment">// Setting the class QModule.</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a85958f7018c9dc1b6710420712399065">mMod</a> = qmod;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#acacd8c581f5858d96fc551af781be664">mInlineAll</a>) {</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        <span class="comment">// Setting up timer ----------------</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        timer<a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a04b2df0f873780111173bc5e2a1810aa">.</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a04b2df0f873780111173bc5e2a1810aa">start</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a04b2df0f873780111173bc5e2a1810aa">(</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a04b2df0f873780111173bc5e2a1810aa">)</a>;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        <span class="comment">// ---------------------------------</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        inlineAllGates();</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        <span class="comment">// Stopping timer and setting the stat -----------------</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        timer<a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a0b9a3de677363a5d3f995ac03a3d0a5e">.</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a0b9a3de677363a5d3f995ac03a3d0a5e">stop</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a0b9a3de677363a5d3f995ac03a3d0a5e">(</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a0b9a3de677363a5d3f995ac03a3d0a5e">)</a>;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        InlineTime <a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml#a8618606575e5c9045c0ec670fbdadaab">=</a> ((<span class="keywordtype">double</span>) timer<a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#ac83f06f2145058ef3b3b6a53892ed39b">.</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#ac83f06f2145058ef3b3b6a53892ed39b">getMicroseconds</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#ac83f06f2145058ef3b3b6a53892ed39b">(</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#ac83f06f2145058ef3b3b6a53892ed39b">)</a> / 1000000.0);</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        <span class="comment">// -----------------------------------------------------</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    }</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <span class="comment">// Replacing all declared registers to the registers declared in the</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <span class="comment">// architecture graph.</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <span class="comment">// Setting up timer ----------------</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    timer<a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a04b2df0f873780111173bc5e2a1810aa">.</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a04b2df0f873780111173bc5e2a1810aa">start</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a04b2df0f873780111173bc5e2a1810aa">(</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a04b2df0f873780111173bc5e2a1810aa">)</a>;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <span class="comment">// ---------------------------------</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    replaceWithArchSpecs();</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <span class="comment">// Stopping timer and setting the stat -----------------</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    timer<a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a0b9a3de677363a5d3f995ac03a3d0a5e">.</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a0b9a3de677363a5d3f995ac03a3d0a5e">stop</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a0b9a3de677363a5d3f995ac03a3d0a5e">(</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a0b9a3de677363a5d3f995ac03a3d0a5e">)</a>;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    ReplaceTime <a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml#a8618606575e5c9045c0ec670fbdadaab">=</a> ((<span class="keywordtype">double</span>) timer<a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#ac83f06f2145058ef3b3b6a53892ed39b">.</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#ac83f06f2145058ef3b3b6a53892ed39b">getMicroseconds</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#ac83f06f2145058ef3b3b6a53892ed39b">(</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#ac83f06f2145058ef3b3b6a53892ed39b">)</a> / 1000000.0);</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <span class="comment">// -----------------------------------------------------</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <span class="comment">// Getting the new information, since it can be the case that the qmodule</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <span class="comment">// was modified.</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keyword">auto</span> depPass = <a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml">PassCache</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a8c54d0a438f35de5629ae78c886687a8">::</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a8c54d0a438f35de5629ae78c886687a8">Get</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a8c54d0a438f35de5629ae78c886687a8">&lt;</a><a class="code" href="../../d1/d06/classefd_1_1DependencyBuilderWrapperPass.xhtml">DependencyBuilderWrapperPass</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a8c54d0a438f35de5629ae78c886687a8">&gt;</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a8c54d0a438f35de5629ae78c886687a8">(</a><a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a85958f7018c9dc1b6710420712399065">mMod</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a8c54d0a438f35de5629ae78c886687a8">)</a>;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <span class="keyword">auto</span> depBuilder = depPass<a class="code" href="../../db/d56/classefd_1_1PassT.xhtml#aae3442c1486bcec7622a64451262d684">-&gt;</a><a class="code" href="../../db/d56/classefd_1_1PassT.xhtml#aae3442c1486bcec7622a64451262d684">getData</a><a class="code" href="../../db/d56/classefd_1_1PassT.xhtml#aae3442c1486bcec7622a64451262d684">(</a><a class="code" href="../../db/d56/classefd_1_1PassT.xhtml#aae3442c1486bcec7622a64451262d684">)</a>;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <span class="keyword">auto</span>&amp; deps = depBuilder<a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a7c4de988e4910f1ab11c137ed3f35049">.</a><a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a7c4de988e4910f1ab11c137ed3f35049">getDependencies</a><a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a7c4de988e4910f1ab11c137ed3f35049">(</a><a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a7c4de988e4910f1ab11c137ed3f35049">)</a>;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <span class="comment">// Counting total dependencies.</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    uint32_t totalDeps = 0;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; d : deps)</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        totalDeps += d<a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml#a8095a13dbb497fcb3cc56c8bcdb135f9">.</a><a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml#a8095a13dbb497fcb3cc56c8bcdb135f9">mDeps</a>.size();</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    DepStat <a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml#a8618606575e5c9045c0ec670fbdadaab">=</a> totalDeps;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <span class="comment">// Filling Qubit information.</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a09fe8045d6640c9583f9dabfbd2db9ce">mVQubits</a> = depBuilder<a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#aaf7edc4be1a175a700bf080018f41d61">.</a><a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#aaf7edc4be1a175a700bf080018f41d61">mXbitToNumber</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ab395508705fe60ed3bd0cfb28eb5ffc6">.</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ab395508705fe60ed3bd0cfb28eb5ffc6">getQSize</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ab395508705fe60ed3bd0cfb28eb5ffc6">(</a><a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ab395508705fe60ed3bd0cfb28eb5ffc6">)</a>;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a4d48c40aef0cafc61f748a978264a5c3">mPQubits</a> = <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a4d7d13dd12213a9f247d1304472badbd">mArchGraph</a>-&gt;<a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#aa85ea20ad74d6a7df7a52c13a9fabe2d">size</a><a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#aa85ea20ad74d6a7df7a52c13a9fabe2d">(</a><a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#aa85ea20ad74d6a7df7a52c13a9fabe2d">)</a>;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <span class="comment">// Setting up timer ----------------</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    timer<a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a04b2df0f873780111173bc5e2a1810aa">.</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a04b2df0f873780111173bc5e2a1810aa">start</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a04b2df0f873780111173bc5e2a1810aa">(</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a04b2df0f873780111173bc5e2a1810aa">)</a>;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <span class="comment">// ---------------------------------</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    mData = <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a34312df8398c33f3f004d3fd7c838228">executeAllocation</a><a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a34312df8398c33f3f004d3fd7c838228">(</a><a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a85958f7018c9dc1b6710420712399065">mMod</a><a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a34312df8398c33f3f004d3fd7c838228">)</a>;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="comment">// Stopping timer and setting the stat -----------------</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    timer<a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a0b9a3de677363a5d3f995ac03a3d0a5e">.</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a0b9a3de677363a5d3f995ac03a3d0a5e">stop</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a0b9a3de677363a5d3f995ac03a3d0a5e">(</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a0b9a3de677363a5d3f995ac03a3d0a5e">)</a>;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    AllocTime <a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml#a8618606575e5c9045c0ec670fbdadaab">=</a> ((<span class="keywordtype">double</span>) timer<a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#ac83f06f2145058ef3b3b6a53892ed39b">.</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#ac83f06f2145058ef3b3b6a53892ed39b">getMicroseconds</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#ac83f06f2145058ef3b3b6a53892ed39b">(</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#ac83f06f2145058ef3b3b6a53892ed39b">)</a> / 1000000.0);</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <span class="comment">// -----------------------------------------------------</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <a class="code" href="../../d0/d91/QbitAllocator_8cpp.xhtml#a833f140810dc39cda19daa437e7abcb0">TotalCost</a> <a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml#a8618606575e5c9045c0ec670fbdadaab">=</a> mData<a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#a95fbd5a3cc1c578ed6082a4b4fead836">.</a><a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#a95fbd5a3cc1c578ed6082a4b4fead836">mCost</a>;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <span class="comment">// Setting up timer ----------------</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    timer<a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a04b2df0f873780111173bc5e2a1810aa">.</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a04b2df0f873780111173bc5e2a1810aa">start</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a04b2df0f873780111173bc5e2a1810aa">(</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a04b2df0f873780111173bc5e2a1810aa">)</a>;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <span class="comment">// ---------------------------------</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml">SolutionImplPass</a> pass<a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a7841dcb9503f9aa95ac1f3d26bf7697a">(</a>mData<a class="code" href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a7841dcb9503f9aa95ac1f3d26bf7697a">)</a>;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml">PassCache</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a22f92cfd25891762477252a6cbcc4906">::</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a22f92cfd25891762477252a6cbcc4906">Run</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a22f92cfd25891762477252a6cbcc4906">(</a><a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a85958f7018c9dc1b6710420712399065">mMod</a><a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a22f92cfd25891762477252a6cbcc4906">,</a> &amp;pass<a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#a22f92cfd25891762477252a6cbcc4906">)</a>;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <span class="comment">// Stopping timer and setting the stat -----------------</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    timer<a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a0b9a3de677363a5d3f995ac03a3d0a5e">.</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a0b9a3de677363a5d3f995ac03a3d0a5e">stop</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a0b9a3de677363a5d3f995ac03a3d0a5e">(</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a0b9a3de677363a5d3f995ac03a3d0a5e">)</a>;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    RenameTime <a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml#a8618606575e5c9045c0ec670fbdadaab">=</a> ((<span class="keywordtype">double</span>) timer<a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#ac83f06f2145058ef3b3b6a53892ed39b">.</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#ac83f06f2145058ef3b3b6a53892ed39b">getMicroseconds</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#ac83f06f2145058ef3b3b6a53892ed39b">(</a><a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#ac83f06f2145058ef3b3b6a53892ed39b">)</a> / 1000000.0);</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    <span class="comment">// -----------------------------------------------------</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;}</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno"><a class="line" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a997aa1c89bcfbcd5d5d796537c71c99a">  326</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml">QbitAllocator</a>::<a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a997aa1c89bcfbcd5d5d796537c71c99a">setInlineAll</a>(<a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#af5639e021a0ebb35ea61b55488ce5054">BasisVector</a> basis) {</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#acacd8c581f5858d96fc551af781be664">mInlineAll</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a0e4d317bfe27af72deffa87f85630037">mBasis</a> = basis;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;}</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno"><a class="line" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#aae527130ae67369e7ba62acae89438c5">  331</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml">QbitAllocator</a>::<a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#aae527130ae67369e7ba62acae89438c5">setDontInline</a>() {</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#acacd8c581f5858d96fc551af781be664">mInlineAll</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;}</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div><div class="line"><a name="l00335"></a><span class="lineno"><a class="line" href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">  335</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d4/deb/namespaceefd.xhtml#a0370997575fb50e5567c20c151d37592">Assign</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">GenAssignment</a>(uint32_t archQ, <a class="code" href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">Mapping</a> mapping, <span class="keywordtype">bool</span> fill) {</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    uint32_t progQ = mapping.size();</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <span class="comment">// &#39;archQ&#39; is the number of qubits from the architecture.</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::vector&lt;uint32_t&gt; assign(archQ, _undef);</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <span class="comment">// for &#39;u&#39; in arch; and &#39;a&#39; in prog:</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <span class="comment">// if &#39;a&#39; -&gt; &#39;u&#39;, then &#39;u&#39; -&gt; &#39;a&#39;</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <span class="keywordflow">for</span> (uint32_t i = 0; i &lt; progQ; ++i)</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        <span class="keywordflow">if</span> (mapping[i] != _undef)</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;            assign[mapping[i]] = i;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    <span class="keywordflow">if</span> (fill) {</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;        <span class="comment">// Fill the qubits in the architecture that were not mapped.</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        <a class="code" href="../../d4/deb/namespaceefd.xhtml#a35884a2adaf86bf35e7e3f1f65acc522">Fill</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a35884a2adaf86bf35e7e3f1f65acc522">(</a>mapping<a class="code" href="../../d4/deb/namespaceefd.xhtml#a35884a2adaf86bf35e7e3f1f65acc522">,</a> assign<a class="code" href="../../d4/deb/namespaceefd.xhtml#a35884a2adaf86bf35e7e3f1f65acc522">)</a>;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    }</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    <span class="keywordflow">return</span> assign;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;}</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div><div class="line"><a name="l00354"></a><span class="lineno"><a class="line" href="../../d4/deb/namespaceefd.xhtml#a35884a2adaf86bf35e7e3f1f65acc522">  354</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d4/deb/namespaceefd.xhtml#a35884a2adaf86bf35e7e3f1f65acc522">Fill</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">Mapping</a>&amp; mapping, <a class="code" href="../../d4/deb/namespaceefd.xhtml#a0370997575fb50e5567c20c151d37592">Assign</a>&amp; assign) {</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    uint32_t progQ = mapping.size(), archQ = assign.size();</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    uint32_t a = 0, u = 0;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    <span class="keywordflow">do</span> {</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;        <span class="keywordflow">while</span> (a &lt; progQ &amp;&amp; mapping[a] != _undef) ++a;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        <span class="keywordflow">while</span> (u &lt; archQ &amp;&amp; assign[u] != _undef) ++u;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        <span class="keywordflow">if</span> (u &lt; archQ &amp;&amp; a &lt; progQ) {</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            mapping[a] = u;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            assign[u] = a;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;            ++u; ++a;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        }</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    } <span class="keywordflow">while</span> (<span class="keyword">true</span>);</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;}</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno"><a class="line" href="../../d4/deb/namespaceefd.xhtml#a18b0007f75e6b8d651b15754ff89f910">  372</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d4/deb/namespaceefd.xhtml#a18b0007f75e6b8d651b15754ff89f910">Fill</a>(uint32_t archQ, <a class="code" href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">Mapping</a>&amp; mapping) {</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    <span class="keyword">auto</span> assign = <a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">GenAssignment</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">(</a>archQ<a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">,</a> mapping<a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">,</a> <span class="keyword">false</span><a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">)</a>;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    <a class="code" href="../../d4/deb/namespaceefd.xhtml#a35884a2adaf86bf35e7e3f1f65acc522">Fill</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a35884a2adaf86bf35e7e3f1f65acc522">(</a>mapping<a class="code" href="../../d4/deb/namespaceefd.xhtml#a35884a2adaf86bf35e7e3f1f65acc522">,</a> assign<a class="code" href="../../d4/deb/namespaceefd.xhtml#a35884a2adaf86bf35e7e3f1f65acc522">)</a>;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;}</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;</div><div class="line"><a name="l00377"></a><span class="lineno"><a class="line" href="../../d4/deb/namespaceefd.xhtml#a186bbb1cec68c992374b8795b10af1a8">  377</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">Mapping</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d4/deb/namespaceefd.xhtml#a186bbb1cec68c992374b8795b10af1a8">IdentityMapping</a>(uint32_t progQ) {</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    <a class="code" href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">Mapping</a> mapping(progQ, _undef);</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <span class="keywordflow">for</span> (uint32_t i = 0; i &lt; progQ; ++i) {</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        mapping[i] = i;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    }</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    <span class="keywordflow">return</span> mapping;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;}</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div><div class="line"><a name="l00387"></a><span class="lineno"><a class="line" href="../../d4/deb/namespaceefd.xhtml#aac5a20e6db5d358cf72d4816441d0b0d">  387</a></span>&#160;<a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::string <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d4/deb/namespaceefd.xhtml#aac5a20e6db5d358cf72d4816441d0b0d">MappingToString</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">Mapping</a> m) {</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::string s = <span class="stringliteral">&quot;[&quot;</span>;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    <span class="keywordflow">for</span> (uint32_t i = 0, e = m.size(); i &lt; e; ++i) {</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;        s = s + <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::to_string(i) + <span class="stringliteral">&quot; =&gt; &quot;</span>;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        <span class="keywordflow">if</span> (m[i] == _undef) s = s + <span class="stringliteral">&quot;_undef&quot;</span>;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        <span class="keywordflow">else</span> s = s + <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::to_string(m[i]);</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;        s = s + <span class="stringliteral">&quot;;&quot;</span>;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        <span class="keywordflow">if</span> (i != e - 1) s = s + <span class="stringliteral">&quot; &quot;</span>;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    }</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    s = s + <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    <span class="keywordflow">return</span> s;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;}</div><div class="ttc" id="classefd_1_1XbitToNumberWrapperPass_xhtml"><div class="ttname"><a href="../../de/d2b/classefd_1_1XbitToNumberWrapperPass.xhtml">efd::XbitToNumberWrapperPass</a></div><div class="ttdoc">WrapperPass that yields a XbitToNumber structure. </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d94/XbitToNumberPass_8h_source.xhtml#l00069">XbitToNumberPass.h:69</a></div></div>
<div class="ttc" id="classefd_1_1NodeVisitor_xhtml"><div class="ttname"><a href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">efd::NodeVisitor</a></div><div class="ttdoc">Interface class to be used as a visitor. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d8d/NodeVisitor_8h_source.xhtml#l00009">NodeVisitor.h:9</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml_a32ca17290f67e79f38c1b591ca2c1257"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a32ca17290f67e79f38c1b591ca2c1257">efd::ArchGraph::reg_end</a></div><div class="ttdeci">RegsIterator reg_end()</div><div class="ttdoc">The end iterator for the mRegs. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d51/ArchGraph_8cpp_source.xhtml#l00087">ArchGraph.cpp:87</a></div></div>
<div class="ttc" id="classefd_1_1Timer_xhtml"><div class="ttname"><a href="../../d4/d89/classefd_1_1Timer.xhtml">efd::Timer</a></div><div class="ttdoc">Tracks the elapsed time. One should use the methods start and stop in order to track the time of some...</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d27/Timer_8h_source.xhtml#l00014">Timer.h:14</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a0370997575fb50e5567c20c151d37592"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a0370997575fb50e5567c20c151d37592">efd::Assign</a></div><div class="ttdeci">std::vector&lt; uint32_t &gt; Assign</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d73/Defs_8h_source.xhtml#l00012">Defs.h:12</a></div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_a34312df8398c33f3f004d3fd7c838228"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a34312df8398c33f3f004d3fd7c838228">efd::QbitAllocator::executeAllocation</a></div><div class="ttdeci">virtual Solution executeAllocation(QModule::Ref qmod)=0</div><div class="ttdoc">Executes the allocation algorithm after the preprocessing. </div></div>
<div class="ttc" id="classefd_1_1PassT_xhtml_aae3442c1486bcec7622a64451262d684"><div class="ttname"><a href="../../db/d56/classefd_1_1PassT.xhtml#aae3442c1486bcec7622a64451262d684">efd::PassT::getData</a></div><div class="ttdeci">T &amp; getData()</div><div class="ttdef"><b>Definition:</b> <a href="../../df/d29/Pass_8h_source.xhtml#l00081">Pass.h:81</a></div></div>
<div class="ttc" id="QbitAllocator_8cpp_xhtml_a37e324531f1d9e6e8b4304b6043309a9"><div class="ttname"><a href="../../d0/d91/QbitAllocator_8cpp.xhtml#a37e324531f1d9e6e8b4304b6043309a9">LCXCost</a></div><div class="ttdeci">efd::Opt&lt; uint32_t &gt; LCXCost(&quot;-lcx-cost&quot;, &quot;Cost of using long cnot gate.&quot;, 10, false)</div></div>
<div class="ttc" id="structefd_1_1Operation_xhtml_a010c1fff81b57b9b0ed92619855ce7e3adf6090959dc5eaaa4fe429aa4c4bfe06"><div class="ttname"><a href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3adf6090959dc5eaaa4fe429aa4c4bfe06">efd::Operation::K_OP_REV</a></div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00019">QbitAllocator.h:19</a></div></div>
<div class="ttc" id="classefd_1_1RenameQbitPass_xhtml_a0b50e7bed18048ff76f94e5e53311c6b"><div class="ttname"><a href="../../d8/dd7/classefd_1_1RenameQbitPass.xhtml#a0b50e7bed18048ff76f94e5e53311c6b">efd::RenameQbitPass::Create</a></div><div class="ttdeci">static RenameQbitPass::uRef Create(ArchMap map)</div><div class="ttdoc">Creates a new instance of this pass. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d2f/RenameQbitsPass_8cpp_source.xhtml#l00082">RenameQbitsPass.cpp:82</a></div></div>
<div class="ttc" id="classefd_1_1Timer_xhtml_ac83f06f2145058ef3b3b6a53892ed39b"><div class="ttname"><a href="../../d4/d89/classefd_1_1Timer.xhtml#ac83f06f2145058ef3b3b6a53892ed39b">efd::Timer::getMicroseconds</a></div><div class="ttdeci">uint64_t getMicroseconds()</div><div class="ttdoc">Gets the number of microseconds stored in mDuration. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/dc2/Timer_8cpp_source.xhtml#l00026">Timer.cpp:26</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml_a1388225779727295176780b9a68aedf2"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a1388225779727295176780b9a68aedf2">efd::ArchGraph::getNode</a></div><div class="ttdeci">Node::Ref getNode(uint32_t i) const</div><div class="ttdoc">Gets the node corresponding to the uid. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d51/ArchGraph_8cpp_source.xhtml#l00029">ArchGraph.cpp:29</a></div></div>
<div class="ttc" id="structefd_1_1XbitToNumber_xhtml_ab395508705fe60ed3bd0cfb28eb5ffc6"><div class="ttname"><a href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ab395508705fe60ed3bd0cfb28eb5ffc6">efd::XbitToNumber::getQSize</a></div><div class="ttdeci">uint32_t getQSize(NDGateDecl::Ref gate=nullptr) const</div><div class="ttdoc">Returns the number of qbits in a given gate (if any). </div><div class="ttdef"><b>Definition:</b> <a href="../../de/de8/XbitToNumberPass_8cpp_source.xhtml#l00033">XbitToNumberPass.cpp:33</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a6c85c9bd21014b73497de741cc75f706"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">efd::Node::clone</a></div><div class="ttdeci">Node::uRef clone() const</div><div class="ttdoc">Clones the current node (deep copy). </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00114">Nodes.cpp:114</a></div></div>
<div class="ttc" id="classefd_1_1SolutionImplPass_xhtml_ae23e6bc556937d7fb7da447dbe657fa1"><div class="ttname"><a href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#ae23e6bc556937d7fb7da447dbe657fa1">efd::SolutionImplPass::visit</a></div><div class="ttdeci">void visit(NDQOpReset::Ref ref) override</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00167">QbitAllocator.cpp:167</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a63e30243eca03b0c85d8c4856e91c79d"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">efd::Node::getChild</a></div><div class="ttdeci">Ref getChild(uint32_t i) const</div><div class="ttdoc">Gets the i-th child. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00021">Nodes.cpp:21</a></div></div>
<div class="ttc" id="classefd_1_1SolutionImplPass_xhtml"><div class="ttname"><a href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml">efd::SolutionImplPass</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00017">QbitAllocator.cpp:17</a></div></div>
<div class="ttc" id="structefd_1_1Dependencies_xhtml_a8095a13dbb497fcb3cc56c8bcdb135f9"><div class="ttname"><a href="../../d1/dca/structefd_1_1Dependencies.xhtml#a8095a13dbb497fcb3cc56c8bcdb135f9">efd::Dependencies::mDeps</a></div><div class="ttdeci">std::vector&lt; Dep &gt; mDeps</div><div class="ttdef"><b>Definition:</b> <a href="../../d9/dcf/DependencyBuilderPass_8h_source.xhtml#l00028">DependencyBuilderPass.h:28</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a35884a2adaf86bf35e7e3f1f65acc522"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a35884a2adaf86bf35e7e3f1f65acc522">efd::Fill</a></div><div class="ttdeci">void Fill(Mapping &amp;mapping, Assign &amp;assign)</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00354">QbitAllocator.cpp:354</a></div></div>
<div class="ttc" id="classefd_1_1SolutionImplPass_xhtml_a0c61cf352053252ff5a1f1ad0dd390e3"><div class="ttname"><a href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a0c61cf352053252ff5a1f1ad0dd390e3">efd::SolutionImplPass::visit</a></div><div class="ttdeci">void visit(NDQOpBarrier::Ref ref) override</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00175">QbitAllocator.cpp:175</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_ab813c60af1717cf50e92a28b274c24ef"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#ab813c60af1717cf50e92a28b274c24ef">efd::Node::apply</a></div><div class="ttdeci">virtual void apply(NodeVisitor *visitor)=0</div><div class="ttdoc">Used by visitor classes. </div></div>
<div class="ttc" id="classefd_1_1NDQOpGen_xhtml"><div class="ttname"><a href="../../d2/dff/classefd_1_1NDQOpGen.xhtml">efd::NDQOpGen</a></div><div class="ttdoc">NDQOp specialized for generic gates. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00930">Nodes.h:930</a></div></div>
<div class="ttc" id="classefd_1_1Timer_xhtml_a0b9a3de677363a5d3f995ac03a3d0a5e"><div class="ttname"><a href="../../d4/d89/classefd_1_1Timer.xhtml#a0b9a3de677363a5d3f995ac03a3d0a5e">efd::Timer::stop</a></div><div class="ttdeci">void stop()</div><div class="ttdoc">Stops the timer. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/dc2/Timer_8cpp_source.xhtml#l00015">Timer.cpp:15</a></div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_a997aa1c89bcfbcd5d5d796537c71c99a"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a997aa1c89bcfbcd5d5d796537c71c99a">efd::QbitAllocator::setInlineAll</a></div><div class="ttdeci">void setInlineAll(BasisVector basis={})</div><div class="ttdoc">Flags the QbitAllocator to inline all gates, but those inside the basis vector, before mapping...</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00326">QbitAllocator.cpp:326</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpMeasure_xhtml_a953962fb4b6faf4a097c93334b61b813"><div class="ttname"><a href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#a953962fb4b6faf4a097c93334b61b813">efd::NDQOpMeasure::Ref</a></div><div class="ttdeci">NDQOpMeasure * Ref</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00683">Nodes.h:683</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_abaf0b3dd099e4b098b89772b6a134d07"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#abaf0b3dd099e4b098b89772b6a134d07">efd::QModule::replaceStatement</a></div><div class="ttdeci">Iterator replaceStatement(Node::Ref stmt, std::vector&lt; Node::uRef &gt; stmts)</div><div class="ttdoc">Replaces the stmt by the vector stmts. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00103">QModule.cpp:103</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpReset_xhtml"><div class="ttname"><a href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml">efd::NDQOpReset</a></div><div class="ttdoc">NDQOp specialized for reset operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00630">Nodes.h:630</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a5b9a652c9403e0dbe7115d9d7f5e7d62"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">efd::GenAssignment</a></div><div class="ttdeci">Assign GenAssignment(uint32_t archQ, Mapping mapping, bool fill=true)</div><div class="ttdoc">Generates an assignment mapping (maps the architecture&amp;#39;s qubits to the logical ones) of size archQ...</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00335">QbitAllocator.cpp:335</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a3c72243a170ffe8a4836e7092fd1469f"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a3c72243a170ffe8a4836e7092fd1469f">efd::CreateILongCX</a></div><div class="ttdeci">NDQOp::uRef CreateILongCX(Node::uRef lhs, Node::uRef middle, Node::uRef rhs)</div><div class="ttdoc">Creates a call to the intrinsic long cnot function. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00159">Utils.cpp:159</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_aac5a20e6db5d358cf72d4816441d0b0d"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#aac5a20e6db5d358cf72d4816441d0b0d">efd::MappingToString</a></div><div class="ttdeci">std::string MappingToString(Mapping m)</div><div class="ttdoc">Prints the mapping m to a string and returns it. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00387">QbitAllocator.cpp:387</a></div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_a4d7d13dd12213a9f247d1304472badbd"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a4d7d13dd12213a9f247d1304472badbd">efd::QbitAllocator::mArchGraph</a></div><div class="ttdeci">ArchGraph::sRef mArchGraph</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00069">QbitAllocator.h:69</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml">efd::ArchGraph</a></div><div class="ttdoc">This is the base class for the architectures that this project will be supporting. </div><div class="ttdef"><b>Definition:</b> <a href="../../d7/d9d/ArchGraph_8h_source.xhtml#l00010">ArchGraph.h:10</a></div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_ad14c92694bf2e4c5874ac1bcc477a6dc"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#ad14c92694bf2e4c5874ac1bcc477a6dc">efd::QbitAllocator::run</a></div><div class="ttdeci">bool run(QModule::Ref qmod) override</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00250">QbitAllocator.cpp:250</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a5cd572a4b0d839b3694a9a96ed8d8382"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a5cd572a4b0d839b3694a9a96ed8d8382">efd::NDInt</a></div><div class="ttdeci">NDValue&lt; IntVal &gt; NDInt</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00212">Nodes.h:212</a></div></div>
<div class="ttc" id="classefd_1_1Graph_xhtml_aa85ea20ad74d6a7df7a52c13a9fabe2d"><div class="ttname"><a href="../../db/db3/classefd_1_1Graph.xhtml#aa85ea20ad74d6a7df7a52c13a9fabe2d">efd::Graph::size</a></div><div class="ttdeci">uint32_t size() const</div><div class="ttdoc">Return the number of vertices. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/dea/Graph_8cpp_source.xhtml#l00036">Graph.cpp:36</a></div></div>
<div class="ttc" id="classefd_1_1Stat_xhtml"><div class="ttname"><a href="../../d6/d1d/classefd_1_1Stat.xhtml">efd::Stat</a></div><div class="ttdoc">Stats of a given type. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d09/Stats_8h_source.xhtml#l00041">Stats.h:41</a></div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_acacd8c581f5858d96fc551af781be664"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#acacd8c581f5858d96fc551af781be664">efd::QbitAllocator::mInlineAll</a></div><div class="ttdeci">bool mInlineAll</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00068">QbitAllocator.h:68</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a23d45e3b6c65d5fa14b199da8b0617c7"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a23d45e3b6c65d5fa14b199da8b0617c7">efd::QModule::stmt_end</a></div><div class="ttdeci">Iterator stmt_end()</div><div class="ttdoc">Iterator to the end of the statement node vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00201">QModule.cpp:201</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml">efd::QModule</a></div><div class="ttdoc">Qasm module representation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d73/QModule_8h_source.xhtml#l00013">QModule.h:13</a></div></div>
<div class="ttc" id="classefd_1_1DependencyBuilderWrapperPass_xhtml"><div class="ttname"><a href="../../d1/d06/classefd_1_1DependencyBuilderWrapperPass.xhtml">efd::DependencyBuilderWrapperPass</a></div><div class="ttdoc">WrapperPass that yields a DependencyBuilder structure. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/dcf/DependencyBuilderPass_8h_source.xhtml#l00093">DependencyBuilderPass.h:93</a></div></div>
<div class="ttc" id="structefd_1_1Operation_xhtml"><div class="ttname"><a href="../../dc/d90/structefd_1_1Operation.xhtml">efd::Operation</a></div><div class="ttdoc">Struct used to describe the operation chosen for each solving each dependency. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00015">QbitAllocator.h:15</a></div></div>
<div class="ttc" id="structefd_1_1XbitToNumber_xhtml_a5ec70df49186af44e04433433bd13090"><div class="ttname"><a href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#a5ec70df49186af44e04433433bd13090">efd::XbitToNumber::getQNode</a></div><div class="ttdeci">Node::Ref getQNode(uint32_t id, NDGateDecl::Ref gate=nullptr) const</div><div class="ttdoc">Get a Node::Ref, representing that qbit. </div><div class="ttdef"><b>Definition:</b> <a href="../../de/de8/XbitToNumberPass_8cpp_source.xhtml#l00063">XbitToNumberPass.cpp:63</a></div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_a4d48c40aef0cafc61f748a978264a5c3"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a4d48c40aef0cafc61f748a978264a5c3">efd::QbitAllocator::mPQubits</a></div><div class="ttdeci">uint32_t mPQubits</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00074">QbitAllocator.h:74</a></div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_aae527130ae67369e7ba62acae89438c5"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#aae527130ae67369e7ba62acae89438c5">efd::QbitAllocator::setDontInline</a></div><div class="ttdeci">void setDontInline()</div><div class="ttdoc">Flags the QbitAllocator not to inline. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00331">QbitAllocator.cpp:331</a></div></div>
<div class="ttc" id="structefd_1_1Operation_xhtml_a010c1fff81b57b9b0ed92619855ce7e3a20b669183f13598bd8a76a795be32afb"><div class="ttname"><a href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3a20b669183f13598bd8a76a795be32afb">efd::Operation::K_OP_LCNOT</a></div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00020">QbitAllocator.h:20</a></div></div>
<div class="ttc" id="classefd_1_1NDList_xhtml_a4c28c0c6e21cdf3ae1a8b8df7b7ea569"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml#a4c28c0c6e21cdf3ae1a8b8df7b7ea569">efd::NDList::Ref</a></div><div class="ttdeci">NDList * Ref</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00333">Nodes.h:333</a></div></div>
<div class="ttc" id="structefd_1_1XbitToNumber_xhtml"><div class="ttname"><a href="../../db/d0c/structefd_1_1XbitToNumber.xhtml">efd::XbitToNumber</a></div><div class="ttdoc">Maps every quantum and classic bit (not register) to a number inside a vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d94/XbitToNumberPass_8h_source.xhtml#l00023">XbitToNumberPass.h:23</a></div></div>
<div class="ttc" id="classefd_1_1PassT_xhtml"><div class="ttname"><a href="../../db/d56/classefd_1_1PassT.xhtml">efd::PassT</a></div><div class="ttdoc">Should serve as base class for classes that produces some data of type T. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d29/Pass_8h_source.xhtml#l00040">Pass.h:40</a></div></div>
<div class="ttc" id="namespaceefd_xhtml"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml">efd</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00012">Nodes.h:12</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a96ca13a5c2b971b68619ce4a34be0f66"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">efd::Node::toString</a></div><div class="ttdeci">virtual std::string toString(bool pretty=false) const =0</div><div class="ttdoc">Returns a std::string representation of this Node and its childrem. </div></div>
<div class="ttc" id="classefd_1_1NDQOpBarrier_xhtml_a9d8a9b7f76b12026f053c14571dbfb05"><div class="ttname"><a href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml#a9d8a9b7f76b12026f053c14571dbfb05">efd::NDQOpBarrier::Ref</a></div><div class="ttdeci">NDQOpBarrier * Ref</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00660">Nodes.h:660</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpU_xhtml"><div class="ttname"><a href="../../d7/dbe/classefd_1_1NDQOpU.xhtml">efd::NDQOpU</a></div><div class="ttdoc">NDQOp specialized for barrier operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00716">Nodes.h:716</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a64f9421919034b63bbf5b014c2de4130"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">efd::Node::Ref</a></div><div class="ttdeci">Node * Ref</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00041">Nodes.h:41</a></div></div>
<div class="ttc" id="classefd_1_1PassCache_xhtml"><div class="ttname"><a href="../../d1/df9/classefd_1_1PassCache.xhtml">efd::PassCache</a></div><div class="ttdoc">Static class that caches passes that were run by this compiler. </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d82/PassCache_8h_source.xhtml#l00010">PassCache.h:10</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml_a0481cd8304cd18c5708e67244e754723"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a0481cd8304cd18c5708e67244e754723">efd::ArchGraph::reg_begin</a></div><div class="ttdeci">RegsIterator reg_begin()</div><div class="ttdoc">The begin iterator for the mRegs. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d51/ArchGraph_8cpp_source.xhtml#l00083">ArchGraph.cpp:83</a></div></div>
<div class="ttc" id="classefd_1_1NDList_xhtml_a7d1b691a45689241a8138539a2be8596"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml#a7d1b691a45689241a8138539a2be8596">efd::NDList::getChildNumber</a></div><div class="ttdeci">uint32_t getChildNumber() const override</div><div class="ttdoc">Returns the number of childrem of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00404">Nodes.cpp:404</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml_a6d274d00b3f4892cc91a844d1ee61dc9"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a6d274d00b3f4892cc91a844d1ee61dc9">efd::NDIfStmt::Ref</a></div><div class="ttdeci">NDIfStmt * Ref</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00970">Nodes.h:970</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a494a2123de6024d1057cf773acda5f25"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">efd::Node::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; Node &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00042">Nodes.h:42</a></div></div>
<div class="ttc" id="classefd_1_1SolutionImplPass_xhtml_a20b7e81a4638e5bc78d1ad8412978951"><div class="ttname"><a href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a20b7e81a4638e5bc78d1ad8412978951">efd::SolutionImplPass::visit</a></div><div class="ttdeci">void visit(NDQOpMeasure::Ref ref) override</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00163">QbitAllocator.cpp:163</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml_acf7a372c40a8d67d3d642d2bdffb9472"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#acf7a372c40a8d67d3d642d2bdffb9472">efd::NDIfStmt::setQOp</a></div><div class="ttdeci">void setQOp(NDQOp::uRef ref)</div><div class="ttdoc">Sets the qop. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00542">Nodes.cpp:542</a></div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_a85958f7018c9dc1b6710420712399065"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a85958f7018c9dc1b6710420712399065">efd::QbitAllocator::mMod</a></div><div class="ttdeci">QModule::Ref mMod</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00071">QbitAllocator.h:71</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml_a8c9131ca43a772179c24fa4dc9701bb2"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a8c9131ca43a772179c24fa4dc9701bb2">efd::ArchGraph::sRef</a></div><div class="ttdeci">std::shared_ptr&lt; ArchGraph &gt; sRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d7/d9d/ArchGraph_8h_source.xhtml#l00014">ArchGraph.h:14</a></div></div>
<div class="ttc" id="classefd_1_1Stat_xhtml_ad4e3a44a99c1261a0be802b6f4c0f67d"><div class="ttname"><a href="../../d6/d1d/classefd_1_1Stat.xhtml#ad4e3a44a99c1261a0be802b6f4c0f67d">efd::Stat::Stat</a></div><div class="ttdeci">Stat(std::string name, std::string description)</div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d09/Stats_8h_source.xhtml#l00067">Stats.h:67</a></div></div>
<div class="ttc" id="namespacestd_xhtml"><div class="ttname"><a href="../../d8/dcc/namespacestd.xhtml">std</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d2e/WrapperVal_8h_source.xhtml#l00048">WrapperVal.h:48</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml">efd::Node</a></div><div class="ttdoc">Base class for AST nodes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00039">Nodes.h:39</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml">efd::NDQOp</a></div><div class="ttdoc">Generic node for quantum operations. This is also the base node for the other quantum gates...</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00577">Nodes.h:577</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_ab5c0a6c0dcdf33158eb125b0e362ed4c"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#ab5c0a6c0dcdf33158eb125b0e362ed4c">efd::NDId</a></div><div class="ttdeci">NDValue&lt; std::string &gt; NDId</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00214">Nodes.h:214</a></div></div>
<div class="ttc" id="structefd_1_1DependencyBuilder_xhtml_a7c4de988e4910f1ab11c137ed3f35049"><div class="ttname"><a href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a7c4de988e4910f1ab11c137ed3f35049">efd::DependencyBuilder::getDependencies</a></div><div class="ttdeci">DepsSet &amp; getDependencies(NDGateDecl::Ref ref=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="../../da/dcd/DependencyBuilderPass_8cpp_source.xhtml#l00085">DependencyBuilderPass.cpp:85</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_aad4510814ff15bd26fe2f95f9d2a2279"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#aad4510814ff15bd26fe2f95f9d2a2279">efd::Node::setChild</a></div><div class="ttdeci">void setChild(uint32_t i, uRef ref)</div><div class="ttdoc">Sets the i-th child. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00025">Nodes.cpp:25</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_ad83c1dbaa41519964485ea8e2437bcb7"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#ad83c1dbaa41519964485ea8e2437bcb7">efd::CreateISwap</a></div><div class="ttdeci">NDQOp::uRef CreateISwap(Node::uRef lhs, Node::uRef rhs)</div><div class="ttdoc">Creates a call to the intrinsic swap function. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00153">Utils.cpp:153</a></div></div>
<div class="ttc" id="structefd_1_1DependencyBuilder_xhtml_aaf7edc4be1a175a700bf080018f41d61"><div class="ttname"><a href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#aaf7edc4be1a175a700bf080018f41d61">efd::DependencyBuilder::mXbitToNumber</a></div><div class="ttdeci">XbitToNumber mXbitToNumber</div><div class="ttdef"><b>Definition:</b> <a href="../../d9/dcf/DependencyBuilderPass_8h_source.xhtml#l00062">DependencyBuilderPass.h:62</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpBarrier_xhtml"><div class="ttname"><a href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml">efd::NDQOpBarrier</a></div><div class="ttdoc">NDQOp specialized for barrier operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00658">Nodes.h:658</a></div></div>
<div class="ttc" id="structefd_1_1Operation_xhtml_a8b4600b23c317966b2529213b1f649db"><div class="ttname"><a href="../../dc/d90/structefd_1_1Operation.xhtml#a8b4600b23c317966b2529213b1f649db">efd::Operation::mK</a></div><div class="ttdeci">Kind mK</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00024">QbitAllocator.h:24</a></div></div>
<div class="ttc" id="classefd_1_1SolutionImplPass_xhtml_a5d85584bddab20ad392b712ac26708cb"><div class="ttname"><a href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a5d85584bddab20ad392b712ac26708cb">efd::SolutionImplPass::run</a></div><div class="ttdeci">bool run(QModule::Ref qmod) override</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00139">QbitAllocator.cpp:139</a></div></div>
<div class="ttc" id="classefd_1_1SolutionImplPass_xhtml_a516b3c303be3cc491a95d78b3a963d69"><div class="ttname"><a href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a516b3c303be3cc491a95d78b3a963d69">efd::SolutionImplPass::visit</a></div><div class="ttdeci">void visit(NDList::Ref ref) override</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00183">QbitAllocator.cpp:183</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a66b6cdbe4eef6e77afbf7fd3148b9f02"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a66b6cdbe4eef6e77afbf7fd3148b9f02">efd::QModule::Ref</a></div><div class="ttdeci">QModule * Ref</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d73/QModule_8h_source.xhtml#l00015">QModule.h:15</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a13a3c3e6d3455ff05f837fbd5fc4a06e"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a13a3c3e6d3455ff05f837fbd5fc4a06e">efd::QModule::insertReg</a></div><div class="ttdeci">void insertReg(NDRegDecl::uRef reg)</div><div class="ttdoc">Inserts a register declaration node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00032">QModule.cpp:32</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">efd::NDIfStmt</a></div><div class="ttdoc">Node for conditional statement. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00968">Nodes.h:968</a></div></div>
<div class="ttc" id="structefd_1_1Operation_xhtml_a010c1fff81b57b9b0ed92619855ce7e3a46bb7ba2b32ce435a8ffafb2bab56671"><div class="ttname"><a href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3a46bb7ba2b32ce435a8ffafb2bab56671">efd::Operation::K_OP_SWAP</a></div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00021">QbitAllocator.h:21</a></div></div>
<div class="ttc" id="structefd_1_1Operation_xhtml_a010c1fff81b57b9b0ed92619855ce7e3adfad524e27630088f14e4334a0ed385c"><div class="ttname"><a href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3adfad524e27630088f14e4334a0ed385c">efd::Operation::K_OP_CNOT</a></div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00018">QbitAllocator.h:18</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_ad7adca0e4de58074aa3f91827469a491"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#ad7adca0e4de58074aa3f91827469a491">efd::uniqueCastForward</a></div><div class="ttdeci">std::unique_ptr&lt; T &gt; uniqueCastForward(std::unique_ptr&lt; U &gt; from)</div><div class="ttdoc">Uses the RTTI framework to cast forwardly an unique_ptr. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d09/uRefCast_8h_source.xhtml#l00035">uRefCast.h:35</a></div></div>
<div class="ttc" id="classefd_1_1SolutionImplPass_xhtml_a75619983ec2ccc088d8d432b41912477"><div class="ttname"><a href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a75619983ec2ccc088d8d432b41912477">efd::SolutionImplPass::visit</a></div><div class="ttdeci">void visit(NDQOpU::Ref ref) override</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00171">QbitAllocator.cpp:171</a></div></div>
<div class="ttc" id="structefd_1_1Solution_xhtml_a61fb88a6c3077b7d1abb47887bd01b11"><div class="ttname"><a href="../../d3/d2a/structefd_1_1Solution.xhtml#a61fb88a6c3077b7d1abb47887bd01b11">efd::Solution::mInitial</a></div><div class="ttdeci">Mapping mInitial</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00039">QbitAllocator.h:39</a></div></div>
<div class="ttc" id="classefd_1_1SolutionImplPass_xhtml_a28d1b0365e4cae364c3f2cdd5d16bfcd"><div class="ttname"><a href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a28d1b0365e4cae364c3f2cdd5d16bfcd">efd::SolutionImplPass::visit</a></div><div class="ttdeci">void visit(NDIfStmt::Ref ref) override</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00179">QbitAllocator.cpp:179</a></div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_aa380bf007e46c8c8f09ffe7d4a552d54"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#aa380bf007e46c8c8f09ffe7d4a552d54">efd::QbitAllocator::QbitAllocator</a></div><div class="ttdeci">QbitAllocator(ArchGraph::sRef archGraph)</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00219">QbitAllocator.cpp:219</a></div></div>
<div class="ttc" id="classefd_1_1NDList_xhtml_a0c627fa9aac8afe1562eae8f64830bff"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml#a0c627fa9aac8afe1562eae8f64830bff">efd::NDList::apply</a></div><div class="ttdeci">void apply(NodeVisitor *visitor) override</div><div class="ttdoc">Used by visitor classes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00408">Nodes.cpp:408</a></div></div>
<div class="ttc" id="classefd_1_1NDRegDecl_xhtml_af206910448d281670d3afe89f3ff4677"><div class="ttname"><a href="../../da/d97/classefd_1_1NDRegDecl.xhtml#af206910448d281670d3afe89f3ff4677">efd::NDRegDecl::CreateQ</a></div><div class="ttdeci">static std::unique_ptr&lt; NDRegDecl &gt; CreateQ(NDId::uRef idNode, NDInt::uRef sizeNode)</div><div class="ttdoc">Creates a new quantum register node of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00271">Nodes.cpp:271</a></div></div>
<div class="ttc" id="structefd_1_1Solution_xhtml_a95fbd5a3cc1c578ed6082a4b4fead836"><div class="ttname"><a href="../../d3/d2a/structefd_1_1Solution.xhtml#a95fbd5a3cc1c578ed6082a4b4fead836">efd::Solution::mCost</a></div><div class="ttdeci">uint32_t mCost</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00041">QbitAllocator.h:41</a></div></div>
<div class="ttc" id="QbitAllocator_8cpp_xhtml_a833f140810dc39cda19daa437e7abcb0"><div class="ttname"><a href="../../d0/d91/QbitAllocator_8cpp.xhtml#a833f140810dc39cda19daa437e7abcb0">TotalCost</a></div><div class="ttdeci">efd::Stat&lt; uint32_t &gt; TotalCost(&quot;TotalCost&quot;, &quot;Total cost after allocating the qubits.&quot;)</div></div>
<div class="ttc" id="classefd_1_1NDQOpCX_xhtml_a6d812c45491ef0cb54c2377f78167b46"><div class="ttname"><a href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a6d812c45491ef0cb54c2377f78167b46">efd::NDQOpCX::Ref</a></div><div class="ttdeci">NDQOpCX * Ref</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00746">Nodes.h:746</a></div></div>
<div class="ttc" id="classefd_1_1SolutionImplPass_xhtml_a7841dcb9503f9aa95ac1f3d26bf7697a"><div class="ttname"><a href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a7841dcb9503f9aa95ac1f3d26bf7697a">efd::SolutionImplPass::SolutionImplPass</a></div><div class="ttdeci">SolutionImplPass(Solution &amp;sol)</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00036">QbitAllocator.cpp:36</a></div></div>
<div class="ttc" id="classefd_1_1Timer_xhtml_a04b2df0f873780111173bc5e2a1810aa"><div class="ttname"><a href="../../d4/d89/classefd_1_1Timer.xhtml#a04b2df0f873780111173bc5e2a1810aa">efd::Timer::start</a></div><div class="ttdeci">void start()</div><div class="ttdoc">Starts the timer. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/dc2/Timer_8cpp_source.xhtml#l00010">Timer.cpp:10</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpGen_xhtml_a56e32e98055644bc5fff505ad46b3386"><div class="ttname"><a href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a56e32e98055644bc5fff505ad46b3386">efd::NDQOpGen::Ref</a></div><div class="ttdeci">NDQOpGen * Ref</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00932">Nodes.h:932</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_af7ef43289355c5bb047a46419177c8ed"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">efd::NDQOp::getQArgs</a></div><div class="ttdeci">NDList::Ref getQArgs() const</div><div class="ttdoc">Gets the quantum arguments. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00904">Nodes.cpp:904</a></div></div>
<div class="ttc" id="classefd_1_1PassCache_xhtml_a22f92cfd25891762477252a6cbcc4906"><div class="ttname"><a href="../../d1/df9/classefd_1_1PassCache.xhtml#a22f92cfd25891762477252a6cbcc4906">efd::PassCache::Run</a></div><div class="ttdeci">static void Run(QModule::Ref qmod, T *pass)</div><div class="ttdoc">Wrapper that runs a created pass. </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d82/PassCache_8h_source.xhtml#l00063">PassCache.h:63</a></div></div>
<div class="ttc" id="structefd_1_1Solution_xhtml"><div class="ttname"><a href="../../d3/d2a/structefd_1_1Solution.xhtml">efd::Solution</a></div><div class="ttdoc">The solution for the allocation problem. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00034">QbitAllocator.h:34</a></div></div>
<div class="ttc" id="classefd_1_1PassCache_xhtml_a8c54d0a438f35de5629ae78c886687a8"><div class="ttname"><a href="../../d1/df9/classefd_1_1PassCache.xhtml#a8c54d0a438f35de5629ae78c886687a8">efd::PassCache::Get</a></div><div class="ttdeci">static T * Get(QModule::Ref qmod)</div><div class="ttdoc">Gets a shared pointer to the pass T run in qmod. If it does not exist, it tries to run...</div><div class="ttdef"><b>Definition:</b> <a href="../../db/d82/PassCache_8h_source.xhtml#l00071">PassCache.h:71</a></div></div>
<div class="ttc" id="classefd_1_1SolutionImplPass_xhtml_a24c5e7f75654d419c496998458a8b871"><div class="ttname"><a href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a24c5e7f75654d419c496998458a8b871">efd::SolutionImplPass::visit</a></div><div class="ttdeci">void visit(NDQOpGen::Ref ref) override</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00193">QbitAllocator.cpp:193</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_a27de177a3e7801a76d34e00afcae9838"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#a27de177a3e7801a76d34e00afcae9838">efd::NDQOp::Ref</a></div><div class="ttdeci">NDQOp * Ref</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00579">Nodes.h:579</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml_ae5c408d49862e644f1d299ab5b2f121d"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ae5c408d49862e644f1d299ab5b2f121d">efd::NDIfStmt::getQOp</a></div><div class="ttdeci">NDQOp::Ref getQOp() const</div><div class="ttdoc">Gets the qop. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00538">Nodes.cpp:538</a></div></div>
<div class="ttc" id="classefd_1_1RenameQbitPass_xhtml_afc4aead060964c7f60ff9316cd5199a3"><div class="ttname"><a href="../../d8/dd7/classefd_1_1RenameQbitPass.xhtml#afc4aead060964c7f60ff9316cd5199a3">efd::RenameQbitPass::ArchMap</a></div><div class="ttdeci">std::unordered_map&lt; std::string, Node::Ref &gt; ArchMap</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/df0/RenameQbitsPass_8h_source.xhtml#l00018">RenameQbitsPass.h:18</a></div></div>
<div class="ttc" id="classefd_1_1Opt_xhtml_a47df596bfe4f88f23b9c989d10abc164"><div class="ttname"><a href="../../de/d50/classefd_1_1Opt.xhtml#a47df596bfe4f88f23b9c989d10abc164">efd::Opt::Opt</a></div><div class="ttdeci">Opt(std::string name, std::string description, T def, bool isRequired=false)</div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d41/CommandLine_8h_source.xhtml#l00154">CommandLine.h:154</a></div></div>
<div class="ttc" id="structefd_1_1Solution_xhtml_ab9f13ffebeaa6a3fd9825c5780eeac02"><div class="ttname"><a href="../../d3/d2a/structefd_1_1Solution.xhtml#ab9f13ffebeaa6a3fd9825c5780eeac02">efd::Solution::mOpSeqs</a></div><div class="ttdeci">OpSequences mOpSeqs</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00040">QbitAllocator.h:40</a></div></div>
<div class="ttc" id="QbitAllocator_8cpp_xhtml_a36846d9fb7f5b314db3aa16d72efe81f"><div class="ttname"><a href="../../d0/d91/QbitAllocator_8cpp.xhtml#a36846d9fb7f5b314db3aa16d72efe81f">RevCost</a></div><div class="ttdeci">efd::Opt&lt; uint32_t &gt; RevCost(&quot;-rev-cost&quot;, &quot;Cost of using a reverse edge.&quot;, 4, false)</div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_a09fe8045d6640c9583f9dabfbd2db9ce"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a09fe8045d6640c9583f9dabfbd2db9ce">efd::QbitAllocator::mVQubits</a></div><div class="ttdeci">uint32_t mVQubits</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00073">QbitAllocator.h:73</a></div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_af5639e021a0ebb35ea61b55488ce5054"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#af5639e021a0ebb35ea61b55488ce5054">efd::QbitAllocator::BasisVector</a></div><div class="ttdeci">std::vector&lt; std::string &gt; BasisVector</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00052">QbitAllocator.h:52</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a18b0007f75e6b8d651b15754ff89f910"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a18b0007f75e6b8d651b15754ff89f910">efd::Fill</a></div><div class="ttdeci">void Fill(uint32_t archQ, Mapping &amp;mapping)</div><div class="ttdoc">Fills the unmapped qubits with the ones missing. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00372">QbitAllocator.cpp:372</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_af0725ce17bd18e6bddf698e89b1de4bf"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#af0725ce17bd18e6bddf698e89b1de4bf">efd::QModule::removeAllQRegs</a></div><div class="ttdeci">void removeAllQRegs()</div><div class="ttdoc">Removes all quantum registers. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00038">QModule.cpp:38</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a186bbb1cec68c992374b8795b10af1a8"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a186bbb1cec68c992374b8795b10af1a8">efd::IdentityMapping</a></div><div class="ttdeci">Mapping IdentityMapping(uint32_t progQ)</div><div class="ttdoc">Returns an identity mapping. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00377">QbitAllocator.cpp:377</a></div></div>
<div class="ttc" id="classefd_1_1Stat_xhtml_a8618606575e5c9045c0ec670fbdadaab"><div class="ttname"><a href="../../d6/d1d/classefd_1_1Stat.xhtml#a8618606575e5c9045c0ec670fbdadaab">efd::Stat::operator=</a></div><div class="ttdeci">Stat&lt; T &gt; &amp; operator=(const T val)</div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d09/Stats_8h_source.xhtml#l00076">Stats.h:76</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpReset_xhtml_a49df0206fc1d4cad2bce5fdd65ee99ac"><div class="ttname"><a href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml#a49df0206fc1d4cad2bce5fdd65ee99ac">efd::NDQOpReset::Ref</a></div><div class="ttdeci">NDQOpReset * Ref</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00632">Nodes.h:632</a></div></div>
<div class="ttc" id="QbitAllocator_8cpp_xhtml_a99fd7c5ea250372d9b17e42df7764318"><div class="ttname"><a href="../../d0/d91/QbitAllocator_8cpp.xhtml#a99fd7c5ea250372d9b17e42df7764318">SwapCost</a></div><div class="ttdeci">efd::Opt&lt; uint32_t &gt; SwapCost(&quot;-swap-cost&quot;, &quot;Cost of using a swap function.&quot;, 7, false)</div></div>
<div class="ttc" id="classefd_1_1NDList_xhtml"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml">efd::NDList</a></div><div class="ttdoc">Base class for list of nodes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00331">Nodes.h:331</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_ac00e1eb93f94c00db1e6a661d8f95d9d"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#ac00e1eb93f94c00db1e6a661d8f95d9d">efd::QModule::stmt_begin</a></div><div class="ttdeci">Iterator stmt_begin()</div><div class="ttdoc">Iterator to the beginning of the statement node vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00193">QModule.cpp:193</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_af8e947f977669e54d6aaf3a43815833c"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#af8e947f977669e54d6aaf3a43815833c">efd::CreateIRevCX</a></div><div class="ttdeci">NDQOp::uRef CreateIRevCX(Node::uRef lhs, Node::uRef rhs)</div><div class="ttdoc">Creates a call to the intrinsic reversal cnot function. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00164">Utils.cpp:164</a></div></div>
<div class="ttc" id="classefd_1_1InlineAllPass_xhtml_a39637a556c08bf458f9bf20812d11470"><div class="ttname"><a href="../../d5/de3/classefd_1_1InlineAllPass.xhtml#a39637a556c08bf458f9bf20812d11470">efd::InlineAllPass::Create</a></div><div class="ttdeci">static uRef Create(std::vector&lt; std::string &gt; basis=std::vector&lt; std::string &gt;())</div><div class="ttdoc">Creates an instance of this pass. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d93/InlineAllPass_8cpp_source.xhtml#l00062">InlineAllPass.cpp:62</a></div></div>
<div class="ttc" id="classefd_1_1RenameQbitPass_xhtml"><div class="ttname"><a href="../../d8/dd7/classefd_1_1RenameQbitPass.xhtml">efd::RenameQbitPass</a></div><div class="ttdoc">Renames all the qbits according to the map from the constructor. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/df0/RenameQbitsPass_8h_source.xhtml#l00013">RenameQbitsPass.h:13</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpU_xhtml_afd9aacd39dcd46ba651258bd0ca3678a"><div class="ttname"><a href="../../d7/dbe/classefd_1_1NDQOpU.xhtml#afd9aacd39dcd46ba651258bd0ca3678a">efd::NDQOpU::Ref</a></div><div class="ttdeci">NDQOpU * Ref</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00718">Nodes.h:718</a></div></div>
<div class="ttc" id="classefd_1_1SolutionImplPass_xhtml_a857bc2a48e98f8c814e551f76b5be396"><div class="ttname"><a href="../../d4/dd6/classefd_1_1SolutionImplPass.xhtml#a857bc2a48e98f8c814e551f76b5be396">efd::SolutionImplPass::visit</a></div><div class="ttdeci">void visit(NDQOpCX::Ref ref) override</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00189">QbitAllocator.cpp:189</a></div></div>
<div class="ttc" id="structefd_1_1XbitToNumber_xhtml_ae645e4b0ccb9c25c534883843484f06a"><div class="ttname"><a href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ae645e4b0ccb9c25c534883843484f06a">efd::XbitToNumber::getQUId</a></div><div class="ttdeci">uint32_t getQUId(std::string id, NDGateDecl::Ref gate=nullptr) const</div><div class="ttdoc">Returns an uint32_t number representing the qubit in this specific gate (if any). ...</div><div class="ttdef"><b>Definition:</b> <a href="../../de/de8/XbitToNumberPass_8cpp_source.xhtml#l00022">XbitToNumberPass.cpp:22</a></div></div>
<div class="ttc" id="Defs_8h_xhtml_a12c2040f25d8e3a7b9e1c2024c618cb6"><div class="ttname"><a href="../../d1/d73/Defs_8h.xhtml#a12c2040f25d8e3a7b9e1c2024c618cb6">INF</a></div><div class="ttdeci">#define INF</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d73/Defs_8h_source.xhtml#l00044">Defs.h:44</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpMeasure_xhtml"><div class="ttname"><a href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml">efd::NDQOpMeasure</a></div><div class="ttdoc">NDQOp specialized for measure operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00681">Nodes.h:681</a></div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml">efd::QbitAllocator</a></div><div class="ttdoc">Base abstract class that allocates the qbits used in the program to the qbits that are in the physica...</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00046">QbitAllocator.h:46</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a12a4775008cb8b6242cedc3621d98f9c"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">efd::Mapping</a></div><div class="ttdeci">std::vector&lt; uint32_t &gt; Mapping</div><div class="ttdoc">Defines the type used for mapping the qubits. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d73/Defs_8h_source.xhtml#l00011">Defs.h:11</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpCX_xhtml"><div class="ttname"><a href="../../d3/d14/classefd_1_1NDQOpCX.xhtml">efd::NDQOpCX</a></div><div class="ttdoc">NDQOp specialized for barrier operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00744">Nodes.h:744</a></div></div>
<div class="ttc" id="classefd_1_1NDRegDecl_xhtml"><div class="ttname"><a href="../../da/d97/classefd_1_1NDRegDecl.xhtml">efd::NDRegDecl</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00245">Nodes.h:245</a></div></div>
<div class="ttc" id="classefd_1_1NDValue_xhtml_a96ab9dcd008523aa2f4cfc2eb95d7178"><div class="ttname"><a href="../../df/d1b/classefd_1_1NDValue.xhtml#a96ab9dcd008523aa2f4cfc2eb95d7178">efd::NDValue::Create</a></div><div class="ttdeci">static uRef Create(T val)</div><div class="ttdoc">Creates a new instance of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l01055">Nodes.h:1055</a></div></div>
<div class="ttc" id="classefd_1_1InlineAllPass_xhtml"><div class="ttname"><a href="../../d5/de3/classefd_1_1InlineAllPass.xhtml">efd::InlineAllPass</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d61/InlineAllPass_8h_source.xhtml#l00010">InlineAllPass.h:10</a></div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_a0e4d317bfe27af72deffa87f85630037"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a0e4d317bfe27af72deffa87f85630037">efd::QbitAllocator::mBasis</a></div><div class="ttdeci">BasisVector mBasis</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00070">QbitAllocator.h:70</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue May 1 2018 23:33:48 for Enfield by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
